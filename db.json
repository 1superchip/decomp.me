{
  "users": [
    {
      "name": "octorock",
      "points": 1337
    },
    {
      "name": "noob",
      "points": 0
    },
    {
      "name": "very-good-decomper",
      "points": 9001
    }
  ],
  "projects": [
    {
      "id": 1,
      "name": "tmc"
    },
    {
      "id": 2,
      "name": "oot"
    },
    {
      "id": 3,
      "name": "mm"
    }
  ],
  "functions": [
    {
      "name": "CreateItemDrop",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"menu.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    u8 filler[0xa8];\n    Stats stats;\n} SaveFile;\n\ntypedef struct {\n    u8 unk;\n    u8 filler[7];\n} struct_080FD5B4;\n\ntypedef struct {\n    u8 filler[0x2e];\n    u8 unk;\n} ScreenTransition;\n\nextern SaveFile gSave;\nextern struct_080FD5B4 gUnk_080FD5B4[];\nextern ScreenTransition gScreenTransition;\n\nextern u8 gUnk_0200AF13;\nextern u8 gUnk_0200AF14;\nextern u32 gUnk_080015BC;\nextern u8 gUnk_080FE1C6[];\nextern u32 gUnk_02034398;\nextern void (*const gUnk_080FE2A0[])();\n\nvoid ForceEquipItem(u32, u8);\nextern void sub_0807CAA0(u32, u32);\n\n// end of existing headers\n\nu32 CreateItemDrop(Entity* arg0, u32 itemID, u32 itemParameter) {\n    // TODO see below\n}\n",
      "asmCode": "thumb_func_start CreateItemDrop\nCreateItemDrop:\n        push {r4, r5, r6, lr}\n        mov r6, r0\n        mov r4, r1\n        mov r5, r2\n        cmp r4, #0x5e\n        beq _code0_2\n        cmp r4, #0x5e\n        bhi _code0_0\n        cmp r4, #0x5c\n        beq _code0_6\n        cmp r4, #0x5c\n        bhi _code0_1\n        cmp r4, #0x3f\n        beq _code0_5\n        b _code0_7\n_code0_0:\n        cmp r4, #0xfc\n        blo _code0_7\n        cmp r4, #0xfe\n        bls _code0_6\n        cmp r4, #0xff\n        bne _code0_7\n        mov r0, #0x1\n        b _code0_3\n_code0_1:\n        mov r0, #0x65\n        b _code0_3\n_code0_2:\n        mov r0, #0x9\n_code0_3:\n        bl GetInventoryValue\n        cmp r0, #0x0\n        bne _code0_7\n_code0_4:\n        mov r0, #0x0\n        b _code0_14\n_code0_5:\n        mov r0, #0x40\n        bl GetInventoryValue\n        cmp r0, #0x0\n        beq _code0_4\n        cmp r5, #0x0\n        bne _code0_7\n        mov r5, #0x1\n        b _code0_7\n_code0_6:\n        mov r0, #0x67\n        bl GetInventoryValue\n        cmp r0, #0x0\n        beq _code0_4\n        ldr r0, _data0_0\n        ldrb r0, [r0, #0x5]\n        cmp r0, #0x3\n        bhi _code0_4\n        cmp r4, #0x5c\n        beq _code0_7\n        mov r5, r4\n        sub r5, #0xfc\n        bl Random\n        mov r1, #0x3f\n        and r1, r0\n        ldr r2, _data0_0+0x4\n        lsl r0, r5, #0x6\n        add r1, r0\n        add r1, r2\n        ldrb r5, [r1]\n        mov r4, #0x5c\n        cmp r5, #0x0\n        bne _code0_7\n        mov r4, #0x0\n_code0_7:\n        cmp r4, #0x0\n        beq _code0_13\n        cmp r4, #0xff\n        beq _code0_12\n        mov r0, #0x0\n        mov r1, r4\n        mov r2, r5\n        bl CreateObject\n        mov r2, r0\n        cmp r2, #0x0\n        beq _code0_13\n        ldr r0, _data0_0+0x8\n        cmp r6, r0\n        bne _code0_8\n        mov r0, #0x1\n        b _code0_9\n_data0_0:\n        .4byte gRoomVars\n        .4byte gUnk_080FE1DD\n        .4byte gPlayerEntity\n_code0_8:\n        mov r0, #0x0\n_code0_9:\n        strb r0, [r2, #0xe]\n        ldrb r0, [r6, #0x8]\n        cmp r0, #0x6\n        bne _code0_11\n        ldrb r0, [r6, #0x9]\n        cmp r0, #0x63\n        bne _code0_10\n        str r2, [r6, #0x54]\n        b _code0_11\n_code0_10:\n        cmp r0, #0x1e\n        bne _code0_11\n        ldrb r0, [r6, #0x14]\n        lsl r0, #0x3\n        mov r3, #0x80\n        neg r3, r3\n        mov r1, r3\n        orr r0, r1\n        strb r0, [r2, #0x15]\n        mov r0, #0xc0\n        strh r0, [r2, #0x24]\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r2, #0x20]\n_code0_11:\n        mov r0, r6\n        mov r1, r2\n        bl CopyPosition\n        b _code0_13\n_code0_12:\n        mov r0, #0x7\n        mov r1, #0x0\n        bl CreateEnemy\n        mov r2, r0\n        cmp r2, #0x0\n        beq _code0_13\n        ldrh r0, [r6, #0x2e]\n        strh r0, [r2, #0x2e]\n        ldrh r0, [r6, #0x32]\n        strh r0, [r2, #0x32]\n        mov r0, r6\n        add r0, #0x38\n        ldrb r1, [r0]\n        mov r0, r2\n        add r0, #0x38\n        strb r1, [r0]\n        mov r0, r2\n        bl UpdateSpriteForCollisionLayer\n_code0_13:\n        mov r0, r4\n_code0_14:\n        pop {r4, r5, r6, pc}",
      "score": "148",
      "id": 1
    },
    {
      "name": "ForceEquipItem",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"menu.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    u8 filler[0xa8];\n    Stats stats;\n} SaveFile;\n\ntypedef struct {\n    u8 unk;\n    u8 filler[7];\n} struct_080FD5B4;\n\ntypedef struct {\n    u8 filler[0x2e];\n    u8 unk;\n} ScreenTransition;\n\nextern SaveFile gSave;\nextern struct_080FD5B4 gUnk_080FD5B4[];\nextern ScreenTransition gScreenTransition;\n\nextern u8 gUnk_0200AF13;\nextern u8 gUnk_0200AF14;\nextern u32 gUnk_080015BC;\nextern u8 gUnk_080FE1C6[];\nextern u32 gUnk_02034398;\nextern void (*const gUnk_080FE2A0[])();\n\nvoid ForceEquipItem(u32, u8);\nextern void sub_0807CAA0(u32, u32);\n\n// end of existing headers\n\nvoid ForceEquipItem(u32 itemID, u8 itemSlot) {\n\n}",
      "asmCode": "thumb_func_start ForceEquipItem\nForceEquipItem:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        sub r0, r4, #0x1\n        cmp r0, #0x1e\n        bhi _code0_2\n        cmp r1, #0x1\n        bhi _code0_2\n        mov r2, #0x0\n        cmp r1, #0x0\n        bne _code0_0\n        mov r2, #0x1\n_code0_0:\n        ldr r0, _data0_0\n        add r0, #0xb4\n        add r6, r1, r0\n        ldrb r7, [r6]\n        add r5, r2, r0\n        ldrb r3, [r5]\n        ldr r2, _data0_0+0x4\n        lsl r1, r3, #0x3\n        add r1, r2\n        lsl r0, r4, #0x3\n        add r0, r2\n        ldrb r1, [r1]\n        ldrb r0, [r0]\n        cmp r1, r0\n        bne _code0_1\n        mov r3, r7\n_code0_1:\n        strb r4, [r6]\n        strb r3, [r5]\n        ldr r1, _data0_0+0x8\n        mov r0, #0x7f\n        strb r0, [r1, #0x13]\n        strb r0, [r1, #0x14]\n_code0_2:\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gSave\n        .4byte gUnk_080FD5B4\n        .4byte gUnk_0200AF00",
      "score": "43",
      "id": 2
    },
    {
      "name": "PutItemOnSlot",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"menu.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    u8 filler[0xa8];\n    Stats stats;\n} SaveFile;\n\ntypedef struct {\n    u8 unk;\n    u8 filler[7];\n} struct_080FD5B4;\n\ntypedef struct {\n    u8 filler[0x2e];\n    u8 unk;\n} ScreenTransition;\n\nextern SaveFile gSave;\nextern struct_080FD5B4 gUnk_080FD5B4[];\nextern ScreenTransition gScreenTransition;\n\nextern u8 gUnk_0200AF13;\nextern u8 gUnk_0200AF14;\nextern u32 gUnk_080015BC;\nextern u8 gUnk_080FE1C6[];\nextern u32 gUnk_02034398;\nextern void (*const gUnk_080FE2A0[])();\n\nvoid ForceEquipItem(u32, u8);\nextern void sub_0807CAA0(u32, u32);\n\n// end of existing headers\n\nvoid PutItemOnSlot(u32 itemID) {\n    // reg-alloc\n    u32 itemSlot;\n    if (itemID < 0x47) {\n        sub_0807CAA0(0, 1);\n    }\n    if (itemID - 1 < 0x1f) {\n        itemSlot = 2;\n        if (gSave.stats.itemOnA == 0) {\n            itemSlot = 0;\n        } else if (gSave.stats.itemOnB == 0) {\n            itemSlot = 1;\n        }\n        if (itemSlot == 2) {\n            u8 temp = gUnk_080FD5B4[itemID].unk;\n            if (temp == gUnk_080FD5B4[gSave.stats.itemOnA].unk) {\n                itemSlot = 0;\n            } else {\n                if (temp == gUnk_080FD5B4[gSave.stats.itemOnB].unk) {\n                    itemSlot = 1;\n                }\n            }\n            if (itemSlot == 2) {\n                return;\n            }\n        }\n        ForceEquipItem(itemID, itemSlot);\n    }\n}\n",
      "asmCode": "thumb_func_start PutItemOnSlot\nPutItemOnSlot:\n        push {r4, r5, lr}\n        mov r5, r0\n        cmp r5, #0x46\n        bhi _code0_0\n        mov r0, #0x0\n        mov r1, #0x1\n        bl sub_0807CAA0\n_code0_0:\n        sub r0, r5, #0x1\n        cmp r0, #0x1e\n        bhi _code0_6\n        mov r1, #0x2\n        ldr r2, _data0_0\n        mov r0, r2\n        add r0, #0xb4\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_1\n        mov r1, #0x0\n        b _code0_2\n_data0_0:\n        .4byte gSave\n_code0_1:\n        mov r0, r2\n        add r0, #0xb5\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_2\n        mov r1, #0x1\n_code0_2:\n        cmp r1, #0x2\n        bne _code0_5\n        ldr r3, _data0_1\n        lsl r0, r5, #0x3\n        add r0, r3\n        ldrb r4, [r0]\n        mov r0, r2\n        add r0, #0xb4\n        ldrb r0, [r0]\n        lsl r0, #0x3\n        add r0, r3\n        ldrb r0, [r0]\n        cmp r4, r0\n        bne _code0_3\n        mov r1, #0x0\n        b _code0_4\n_data0_1:\n        .4byte gUnk_080FD5B4\n_code0_3:\n        mov r0, r2\n        add r0, #0xb5\n        ldrb r0, [r0]\n        lsl r0, #0x3\n        add r0, r3\n        ldrb r0, [r0]\n        cmp r4, r0\n        bne _code0_4\n        mov r1, #0x1\n_code0_4:\n        cmp r1, #0x2\n        beq _code0_6\n_code0_5:\n        mov r0, r5\n        bl ForceEquipItem\n_code0_6:\n        pop {r4, r5, pc}",
      "score": "68",
      "id": 3
    },
    {
      "name": "sub_0801CED8",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"textbox.h\"\n#include \"structures.h\"\n\ntypedef struct {\n    s8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u8 unk6;\n    u8 unk7;\n    u8 unk8;\n    u8 unk9;\n    u8 unkA;\n    u8 unkB;\n    u16 unkC;\n    u16 unkE;\n    u16 unk10;\n    u8 unk12;\n    u8 unk13;\n} Element;\n\nextern void sub_0805ECEC(u32, u32, u32, u32);\nextern void sub_0801CAD0(Element*);\n\nextern void (*const gUnk_080C904C[])(Element*);\n\nextern u16 gUnk_080C9058[];\n\n// end of existing headers\n\nvoid sub_0801CED8(Element* arg0) {\n    if (gUnk_0200AF00.ezloNagFuncIndex == 1) {\n        gUnk_0200AF00.ezloNagFuncIndex = 2;\n        arg0->unkC = 0x10;\n        arg0->unkE = 0x90;\n        arg0->unk6 = 0;\n        arg0->unk1 = 7;\n        arg0->unk4 = 1;\n        arg0->unk0 |= 2;\n        sub_0801CAB8(arg0, &gUnk_080C9094);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0801CED8\nsub_0801CED8:\n        push {r4, lr}\n        mov r3, r0\n        ldr r0, _data0_0\n        mov r1, r0\n        add r1, #0x24\n        ldrb r4, [r1]\n        cmp r4, #0x1\n        bne _code0_0\n        mov r2, #0x2\n        mov r0, #0x2\n        strb r0, [r1]\n        mov r1, #0x0\n        mov r0, #0x10\n        strh r0, [r3, #0xc]\n        mov r0, #0x90\n        strh r0, [r3, #0xe]\n        strb r1, [r3, #0x6]\n        mov r0, #0x7\n        strb r0, [r3, #0x1]\n        strb r4, [r3, #0x4]\n        ldrb r0, [r3]\n        orr r0, r2\n        strb r0, [r3]\n        ldr r1, _data0_0+0x4\n        mov r0, r3\n        bl sub_0801CAB8\n_code0_0:\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_0200AF00\n        .4byte gUnk_080C9094",
      "score": "33",
      "id": 4
    },
    {
      "name": "sub_0804C258",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"entity.h\"\n#include \"area.h\"\n#include \"room.h\"\n#include \"flags.h\"\n#include \"npc.h\"\n#include \"player.h\"\n#include \"screen.h\"\n#include \"main.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\n// end of existing headers\n\nvoid sub_0804C258(void) {\n\n}",
      "asmCode": "thumb_func_start sub_0804C258\nsub_0804C258:\n        push {lr}\n        ldr r3, _data0_0\n        ldrb r0, [r3, #0xd]\n        mov r2, #0xf\n        neg r2, r2\n        and r2, r0\n        mov r0, #0x2\n        orr r2, r0\n        mov r0, #0xf\n        and r2, r0\n        strb r2, [r3, #0xd]\n        ldr r0, _data0_0+0x4\n        ldrb r0, [r0, #0xe]\n        cmp r0, #0x4\n        bne _code0_0\n        mov r1, #0xe\n        mov r0, r2\n        orr r0, r1\n        strb r0, [r3, #0xd]\n        mov r0, #0x1\n        bl sub_080AF250\n_code0_0:\n        pop {pc}\n_data0_0:\n        .4byte gArea\n        .4byte gScreenTransition",
      "score": "28",
      "id": 7
    },
    {
      "name": "sub_0804C290",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"entity.h\"\n#include \"area.h\"\n#include \"room.h\"\n#include \"flags.h\"\n#include \"npc.h\"\n#include \"player.h\"\n#include \"screen.h\"\n#include \"main.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\n// end of existing headers\n\nvoid sub_0804C290(void) {\n\n}",
      "asmCode": "thumb_func_start sub_0804C290\nsub_0804C290:\n        push {lr}\n        ldr r0, _data0_0\n        ldrb r1, [r0, #0xd]\n        mov r0, #0xe\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        lsl r1, #0x1c\n        lsr r1, #0x1d\n        lsl r1, #0x2\n        ldr r0, _data0_0+0x4\n        add r1, r0\n        ldrh r0, [r1]\n        ldrh r1, [r1, #0x2]\n        mov r2, #0x1\n        bl SetTileType\n_code0_0:\n        pop {pc}\n_data0_0:\n        .4byte gArea\n        .4byte gUnk_080D9348",
      "score": "23",
      "id": 8
    },
    {
      "name": "sub_08054524",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"menu.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    u8 filler[0xa8];\n    Stats stats;\n} SaveFile;\n\ntypedef struct {\n    u8 unk;\n    u8 filler[7];\n} struct_080FD5B4;\n\ntypedef struct {\n    u8 filler[0x2e];\n    u8 unk;\n} ScreenTransition;\n\nextern SaveFile gSave;\nextern struct_080FD5B4 gUnk_080FD5B4[];\nextern ScreenTransition gScreenTransition;\n\nextern u8 gUnk_0200AF13;\nextern u8 gUnk_0200AF14;\nextern u32 gUnk_080015BC;\nextern u8 gUnk_080FE1C6[];\nextern u32 gUnk_02034398;\nextern void (*const gUnk_080FE2A0[])();\n\nvoid ForceEquipItem(u32, u8);\nextern void sub_0807CAA0(u32, u32);\n\n// end of existing headers\n\nvoid sub_08054524(void) {\n    // reg-alloc\n    u32 bVar1;\n\n    bVar1 = gArea.locationIndex;\n    if (gArea.locationIndex == 0) {\n        bVar1 = gScreenTransition.unk;\n    }\n    if (bVar1 > 0x16) {\n        bVar1 = 0;\n    }\n\n    MemCopy(&gUnk_080015BC + gUnk_080FE1C6[bVar1] * 0x8, &gUnk_02034398, 0x20);\n}\n",
      "asmCode": "thumb_func_start sub_08054524\nsub_08054524:\n        push {lr}\n        ldr r0, _data0_0\n        ldrb r1, [r0, #0x1]\n        cmp r1, #0x0\n        bne _code0_0\n        ldr r0, _data0_0+0x4\n        add r0, #0x2e\n        ldrb r1, [r0]\n_code0_0:\n        cmp r1, #0x16\n        bls _code0_1\n        mov r1, #0x0\n_code0_1:\n        ldr r0, _data0_0+0x8\n        add r0, r1, r0\n        ldrb r1, [r0]\n        lsl r0, r1, #0x5\n        ldr r1, _data0_0+0xc\n        add r0, r1\n        ldr r1, _data0_0+0x10\n        mov r2, #0x20\n        bl MemCopy\n        pop {pc}\n_data0_0:\n        .4byte gArea\n        .4byte gScreenTransition\n        .4byte gUnk_080FE1C6\n        .4byte gUnk_080015BC\n        .4byte gUnk_02034398",
      "score": "31",
      "id": 11
    },
    {
      "name": "sub_0805457C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"menu.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    u8 filler[0xa8];\n    Stats stats;\n} SaveFile;\n\ntypedef struct {\n    u8 unk;\n    u8 filler[7];\n} struct_080FD5B4;\n\ntypedef struct {\n    u8 filler[0x2e];\n    u8 unk;\n} ScreenTransition;\n\nextern SaveFile gSave;\nextern struct_080FD5B4 gUnk_080FD5B4[];\nextern ScreenTransition gScreenTransition;\n\nextern u8 gUnk_0200AF13;\nextern u8 gUnk_0200AF14;\nextern u32 gUnk_080015BC;\nextern u8 gUnk_080FE1C6[];\nextern u32 gUnk_02034398;\nextern void (*const gUnk_080FE2A0[])();\n\nvoid ForceEquipItem(u32, u8);\nextern void sub_0807CAA0(u32, u32);\n\n// end of existing headers\n\nu32 sub_0805457C(u32 arg0, u32 arg1) {\n\n}",
      "asmCode": "thumb_func_start sub_0805457C\nsub_0805457C:\n        push {r4, r5, r6, r7, lr}\n        sub sp, #0x20\n        mov r6, r0\n        mov r3, r1\n        ldr r0, _data0_0\n        ldrb r1, [r0, #0x2]\n        mov r5, r0\n        cmp r1, #0x1\n        bne _code0_0\n        b _code0_13\n_code0_0:\n        ldr r2, _data0_0+0x4\n        mov r4, #0x0\n        cmp r3, #0x19\n        bhi _code0_1\n        lsl r0, r3, #0x2\n        ldr r1, _data0_0+0x8\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_0:\n        .4byte gRoomVars\n        .4byte gUnk_08001A1C\n        .4byte _other0_2\n        .4byte _code0_1\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _code0_1\n        .4byte _code0_1\n        .4byte _case0_3\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_1\n        .4byte _case0_1\n        lsl r1, r3, #0x5\n        ldr r0, _data0_1\n        add r4, r1, r0\n        b _code0_1\n_data0_1:\n        .4byte gUnk_0800137C\n        ldrb r0, [r5, #0xa]\n        ldr r4, _data0_2\n        cmp r0, #0x0\n        beq _code0_1\n        add r4, #0x20\n        b _code0_1\n_data0_2:\n        .4byte gUnk_0800191C\n        lsl r1, r3, #0x5\n        ldr r0, _data0_3\n        add r2, r1, r0\n        ldr r4, _data0_3+0x4\n_code0_1:\n        cmp r4, #0x0\n        bne _code0_2\n        b _code0_13\n_code0_2:\n        ldr r0, _data0_3+0x8\n        add r0, #0xb3\n        ldrb r1, [r0]\n        cmp r1, #0x0\n        bne _code0_3\n        ldr r3, _data0_3+0xc\n        b _code0_4\n_data0_3:\n        .4byte gUnk_0800161C\n        .4byte gUnk_02034398\n        .4byte gSave\n        .4byte gUnk_08001A1C\n_code0_3:\n        lsl r1, #0x5\n        ldr r0, _data0_4\n        add r3, r1, r0\n_code0_4:\n        mov r0, sp\n        mov r1, r4\n        bl sub_08000F14\n        ldr r4, _data0_4+0x4\n        mov r0, r4\n        add r0, #0xaa\n        ldrb r0, [r0]\n        cmp r0, #0x8\n        bhi _code0_5\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0x8]\n        add r0, #0x5\n        strh r0, [r1, #0x8]\n_code0_5:\n        mov r0, r4\n        add r0, #0xac\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_6\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0xc]\n        add r0, #0x3\n        strh r0, [r1, #0xc]\n_code0_6:\n        mov r0, r4\n        add r0, #0xad\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_7\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0xe]\n        add r0, #0x3\n        strh r0, [r1, #0xe]\n_code0_7:\n        mov r0, r4\n        add r0, #0xc0\n        ldrh r0, [r0]\n        cmp r0, #0xa\n        bhi _code0_8\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0x4]\n        add r0, #0x1\n        strh r0, [r1, #0x4]\n_code0_8:\n        ldr r2, _data0_4+0x8\n        mov r0, r4\n        add r0, #0xbb\n        ldrb r0, [r0]\n        mov r3, r2\n        cmp r0, #0x0\n        beq _code0_9\n        add r2, #0x20\n_code0_9:\n        mov r1, #0x8b\n        lsl r1, #0x1\n        add r0, r4, r1\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_10\n        add r3, #0x40\n_code0_10:\n        mov r0, sp\n        mov r1, sp\n        bl sub_08000F2C\n        mov r4, r0\n        bl Random\n        mov r2, r0\n        asr r5, r2, #0x18\n        mov r0, #0xf\n        and r5, r0\n        mov r0, r2\n        mov r1, r4\n        bl __modsi3\n        mov r2, r0\n        mov r3, #0x0\n        lsl r0, r5, #0x1\n        add r0, sp\n        mov r4, #0x0\n        ldrsh r1, [r0, r4]\n        cmp r1, r2\n        bgt _code0_12\n        mov r4, #0xf\n_code0_11:\n        add r3, #0x1\n        add r5, #0x1\n        and r5, r4\n        cmp r3, #0xf\n        bhi _code0_12\n        lsl r0, r5, #0x1\n        add r0, sp\n        mov r7, #0x0\n        ldrsh r0, [r0, r7]\n        add r1, r0\n        cmp r1, r2\n        ble _code0_11\n_code0_12:\n        ldr r0, _data0_4+0xc\n        add r0, r5, r0\n        ldrb r1, [r0]\n        cmp r1, #0x0\n        beq _code0_13\n        mov r0, r6\n        mov r2, #0x0\n        bl CreateItemDrop\n        b _code0_14\n_data0_4:\n        .4byte gUnk_0800143C\n        .4byte gSave\n        .4byte gUnk_08001A1C\n        .4byte gUnk_080FE1B4\n_code0_13:\n        mov r0, #0x0\n_code0_14:\n        add sp, #0x20\n        pop {r4, r5, r6, r7, pc}",
      "score": "211",
      "id": 12
    },
    {
      "name": "sub_0805EC9C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"player.h\"\n\ntypedef struct {\n    u16 unk0;\n    u16 unk2;\n    u16 unk4;\n    u8 unk6;\n    u8 unk7;\n} VStruct;\n\ntypedef struct {\n    u8 filler[0x420];\n    VStruct unk[0x100];\n} UStruct;\n\nextern UStruct gUnk_03000000;\n\n// end of existing headers\n\nbool32 sub_0805EC9C(Entity* ent, u32 param_2, u32 param_3, u32 param_4) {\n\n}",
      "asmCode": "thumb_func_start sub_0805EC9C\nsub_0805EC9C:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        mov r5, r1\n        mov r6, r2\n        mov r7, r3\n        ldrb r0, [r4, #0x1b]\n        lsl r0, #0x1a\n        lsr r0, #0x1b\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, r4\n        bl sub_0805EC04\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0x0\n        b _code0_1\n_code0_0:\n        ldr r1, _data0_0\n        ldr r0, _data0_0+0x4\n        add r2, r1, r0\n        mov r0, #0x1\n        strb r0, [r2]\n        ldrb r0, [r4, #0x1b]\n        lsl r0, #0x1a\n        lsr r0, #0x1b\n        lsl r0, #0x3\n        mov r2, #0x84\n        lsl r2, #0x3\n        add r1, r2\n        add r0, r1\n        strh r5, [r0]\n        strh r6, [r0, #0x2]\n        strh r7, [r0, #0x4]\n        mov r0, #0x1\n_code0_1:\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gUnk_03000000\n        .4byte 0x427",
      "score": "41",
      "id": 13
    },
    {
      "name": "ItemInit",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nvoid ItemInit(Entity* this) {\n    ItemFrame* entry;\n\n    entry = &gUnk_08126DA8[this->id];\n    if (entry->unk0 == 0xff) {\n        u32 temp = entry->unk2;\n        ItemFrame* temp2 = gUnk_08126ED8[entry->unk1];\n        entry = &temp2[this->field_0x68.HALF.LO - temp];\n    }\n\n    this->palette.raw = ((entry->unk0 & 0xf) << 4) | entry->unk0;\n    this->field_0x44 = entry->unk1;\n    this->field_0x40 = entry->unk3;\n    this->damageType = entry->unk4;\n    this->spriteIndex = entry->unk5;\n    if (entry->unk6 == 0)\n        this->spriteVramOffset = gPlayerEntity.spriteVramOffset;\n    else\n        this->spriteVramOffset = entry->unk6 & 0x3ff;\n\n    if (this->animationState == 0)\n        this->animationState = gPlayerEntity.animationState & 6;\n\n    this->collisionLayer = gPlayerEntity.collisionLayer;\n    this->spriteRendering.b3 = gPlayerEntity.spriteRendering.b3;\n    this->spritePriority.b0 = gPlayerEntity.spritePriority.b0;\n    this->spriteOrientation.flipY = gPlayerEntity.spriteOrientation.flipY;\n    this->currentHealth = 1;\n    this->flags |= 1;\n}\n",
      "asmCode": "thumb_func_start ItemInit\nItemInit:\n        push {r4, r5, lr}\n        mov r12, r0\n        ldrb r0, [r0, #0x9]\n        lsl r0, #0x3\n        ldr r1, _data0_0\n        add r3, r0, r1\n        ldrb r0, [r3]\n        cmp r0, #0xff\n        bne _code0_0\n        ldrb r2, [r3, #0x2]\n        ldr r1, _data0_0+0x4\n        ldrb r0, [r3, #0x1]\n        lsl r0, #0x2\n        add r0, r1\n        ldr r3, [r0]\n        mov r0, r12\n        add r0, #0x68\n        ldrb r0, [r0]\n        sub r0, r2\n        lsl r0, #0x3\n        add r3, r0\n_code0_0:\n        ldrb r0, [r3]\n        mov r1, #0xf\n        and r1, r0\n        lsl r0, #0x4\n        orr r0, r1\n        mov r1, r12\n        strb r0, [r1, #0x1a]\n        ldrb r1, [r3, #0x1]\n        mov r0, r12\n        add r0, #0x44\n        strb r1, [r0]\n        ldrb r1, [r3, #0x3]\n        sub r0, #0x4\n        strb r1, [r0]\n        ldrb r0, [r3, #0x4]\n        mov r1, r12\n        add r1, #0x3f\n        strb r0, [r1]\n        ldrb r0, [r3, #0x5]\n        mov r2, r12\n        strh r0, [r2, #0x12]\n        ldrh r1, [r3, #0x6]\n        cmp r1, #0x0\n        bne _code0_1\n        ldr r2, _data0_0+0x8\n        mov r0, r2\n        add r0, #0x60\n        ldrh r1, [r0]\n        mov r0, r12\n        add r0, #0x60\n        strh r1, [r0]\n        mov r5, r2\n        b _code0_2\n_data0_0:\n        .4byte gUnk_08126DA8\n        .4byte gUnk_08126ED8\n        .4byte gPlayerEntity\n_code0_1:\n        ldr r0, _data0_1\n        and r0, r1\n        mov r1, r12\n        add r1, #0x60\n        strh r0, [r1]\n        ldr r5, _data0_1+0x4\n_code0_2:\n        mov r3, r12\n        ldrb r0, [r3, #0x14]\n        cmp r0, #0x0\n        bne _code0_3\n        ldrb r1, [r5, #0x14]\n        mov r0, #0x6\n        and r0, r1\n        strb r0, [r3, #0x14]\n_code0_3:\n        mov r0, r5\n        add r0, #0x38\n        ldrb r1, [r0]\n        mov r0, r12\n        add r0, #0x38\n        strb r1, [r0]\n        ldrb r1, [r5, #0x19]\n        lsr r1, #0x6\n        lsl r1, #0x6\n        mov r0, r12\n        ldrb r3, [r0, #0x19]\n        mov r2, #0x3f\n        mov r0, r2\n        and r0, r3\n        orr r0, r1\n        mov r1, r12\n        strb r0, [r1, #0x19]\n        mov r0, r5\n        add r0, #0x29\n        ldrb r1, [r0]\n        lsl r1, #0x1d\n        mov r4, r12\n        add r4, #0x29\n        lsr r1, #0x1d\n        ldrb r3, [r4]\n        mov r0, #0x8\n        neg r0, r0\n        and r0, r3\n        orr r0, r1\n        strb r0, [r4]\n        ldrb r0, [r5, #0x1b]\n        lsr r0, #0x6\n        lsl r0, #0x6\n        mov r3, r12\n        ldrb r1, [r3, #0x1b]\n        and r2, r1\n        orr r2, r0\n        strb r2, [r3, #0x1b]\n        mov r2, r12\n        add r2, #0x45\n        mov r1, #0x1\n        mov r0, #0x1\n        strb r0, [r2]\n        ldrb r0, [r3, #0x10]\n        orr r1, r0\n        strb r1, [r3, #0x10]\n        pop {r4, r5}\n        pop {r0}\n        bx r0\n_data0_1:\n        .4byte 0x3ff\n        .4byte gPlayerEntity",
      "score": "130",
      "id": 16
    },
    {
      "name": "NPCUpdate",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nvoid NPCUpdate(Entity* this) {\n    if ((this->currentHealth & 0x7f) && !ReadBit(&gUnk_020342F8, this->currentHealth - 1))\n        DeleteThisEntity();\n    if ((this->action == 0) && ((this->flags & 1) == 0))\n        sub_0806EC78(this);\n    if (!sub_0805E3B0(this))\n        gNPCFunctions[this->id][0](this);\n    if (this->next != NULL) {\n        if (gNPCFunctions[this->id][1] != NULL)\n            gNPCFunctions[this->id][1](this);\n        if ((this->currentHealth & 0x7f) != 0) {\n            u32 temp = this->currentHealth & 0x7f;\n            gUnk_02031EC0[temp * 2 - 2].x = this->x.HALF.HI - gRoomControls.roomOriginX;\n            gUnk_02031EC0[temp * 2 - 2].y = this->y.HALF.HI - gRoomControls.roomOriginY;\n        }\n        DrawEntity(this);\n    }\n}\n",
      "asmCode": "thumb_func_start NPCUpdate\nNPCUpdate:\n        push {r4, lr}\n        mov r4, r0\n        add r0, #0x45\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r0, _data0_0\n        sub r1, #0x1\n        bl ReadBit\n        cmp r0, #0x0\n        bne _code0_0\n        bl DeleteThisEntity\n_code0_0:\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        bne _code0_1\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x1\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_1\n        mov r0, r4\n        bl sub_0806EC78\n_code0_1:\n        mov r0, r4\n        bl sub_0805E3B0\n        cmp r0, #0x0\n        bne _code0_2\n        ldr r2, _data0_0+0x4\n        ldrb r1, [r4, #0x9]\n        lsl r0, r1, #0x1\n        add r0, r1\n        lsl r0, #0x2\n        add r0, r2\n        ldr r1, [r0]\n        mov r0, r4\n        bl _call_via_r1\n_code0_2:\n        ldr r0, [r4, #0x4]\n        cmp r0, #0x0\n        beq _code0_5\n        ldr r2, _data0_0+0x4\n        ldrb r1, [r4, #0x9]\n        lsl r0, r1, #0x1\n        add r0, r1\n        lsl r0, #0x2\n        add r2, #0x4\n        add r0, r2\n        ldr r1, [r0]\n        cmp r1, #0x0\n        beq _code0_3\n        mov r0, r4\n        bl _call_via_r1\n_code0_3:\n        mov r0, r4\n        add r0, #0x45\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        ldr r2, _data0_0+0x8\n        lsl r0, r1, #0x4\n        sub r0, #0x10\n        add r2, r0, r2\n        ldr r3, _data0_0+0xc\n        ldrh r0, [r4, #0x2e]\n        ldrh r1, [r3, #0x6]\n        sub r0, r1\n        strh r0, [r2, #0x4]\n        ldrh r0, [r4, #0x32]\n        ldrh r1, [r3, #0x8]\n        sub r0, r1\n        strh r0, [r2, #0x6]\n_code0_4:\n        mov r0, r4\n        bl DrawEntity\n_code0_5:\n        pop {r4}\n        pop {r0}\n        bx r0\n_data0_0:\n        .4byte gUnk_020342F8\n        .4byte gNPCFunctions\n        .4byte gUnk_02031EC0\n        .4byte gRoomControls",
      "score": "90",
      "id": 17
    },
    {
      "name": "sub_0801766C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nu32 sub_0801766C(Entity* this) {\n    u32 uVar1;\n    LinkedList2* puVar3;\n    LinkedList2* puVar2;\n    LinkedList2* pLVar2;\n    LinkedList2* i;\n    u8* pbVar4;\n\n    if (this->spritePriority.b2 != 0) {\n        return 1;\n    } else {\n        for (i = &gUnk_03003C70[0]; i < &gUnk_03003C70[16]; ++i) {\n            if (i->node == NULL) {\n                i->node = this;\n                i->flags = 0;\n                this->spritePriority.b2 = 1;\n                pLVar2 = gUnk_02018EA0;\n                if (gUnk_02018EA0->flags != 0) {\n                    do {\n                        pLVar2 = pLVar2->first;\n                    } while (pLVar2->flags != 0);\n                    i->first = pLVar2;\n                    puVar3 = pLVar2->last;\n                    i->last = puVar3;\n                    puVar3->first = i;\n                    pLVar2->last = i;\n                } else {\n                    i->first = gUnk_02018EA0;\n                    puVar2 = gUnk_02018EA0->last;\n                    i->last = puVar2;\n                    puVar2->first = i;\n                    gUnk_02018EA0->last = i;\n                    gUnk_02018EA0 = i;\n                }\n                return 1;\n            }\n        }\n        return 0;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0801766C\nsub_0801766C:\n        push {r4, lr}\n        mov r4, r0\n        mov r3, r4\n        add r3, #0x29\n        ldrb r1, [r3]\n        mov r0, #0x40\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_1\n_code0_0:\n        mov r0, #0x1\n        b _code0_7\n_code0_1:\n        ldr r2, _data0_0\n        mov r0, #0x80\n        lsl r0, #0x1\n        add r1, r2, r0\n        cmp r1, r2\n        bls _code0_6\n_code0_2:\n        ldr r0, [r2, #0x8]\n        cmp r0, #0x0\n        bne _code0_5\n        str r4, [r2, #0x8]\n        strb r0, [r2, #0xc]\n        ldrb r0, [r3]\n        mov r1, #0x40\n        orr r0, r1\n        strb r0, [r3]\n        ldr r3, _data0_0+0x4\n        ldr r1, [r3]\n        ldrb r0, [r1, #0xc]\n        cmp r0, #0x0\n        beq _code0_4\n_code0_3:\n        ldr r1, [r1, #0x4]\n        ldrb r0, [r1, #0xc]\n        cmp r0, #0x0\n        bne _code0_3\n        str r1, [r2, #0x4]\n        ldr r0, [r1]\n        str r0, [r2]\n        str r2, [r0, #0x4]\n        str r2, [r1]\n        b _code0_0\n_data0_0:\n        .4byte gUnk_03003C70\n        .4byte gUnk_02018EA0\n_code0_4:\n        str r1, [r2, #0x4]\n        ldr r0, [r1]\n        str r0, [r2]\n        str r2, [r0, #0x4]\n        str r2, [r1]\n        str r2, [r3]\n        b _code0_0\n_code0_5:\n        add r2, #0x10\n        cmp r1, r2\n        bhi _code0_2\n_code0_6:\n        mov r0, #0x0\n_code0_7:\n        pop {r4}\n        pop {r1}\n        bx r1",
      "score": "68",
      "id": 18
    },
    {
      "name": "sub_080176E4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nu32 sub_080176E4(Entity* this) {\n    u32 uVar1;\n    LinkedList2* j;\n    LinkedList2* i;\n    u8* pbVar4;\n\n    if (this->spritePriority.b2 != 0) {\n        return 1;\n    } else {\n        for (i = &gUnk_03003C70[0]; i < &gUnk_03003C70[16]; ++i) {\n            if (i->node == NULL) {\n                i->node = this;\n                i->flags = 1;\n                this->spritePriority.b2 = 1;\n                i->first = gUnk_02018EA0;\n                j = gUnk_02018EA0->last;\n                i->last = j;\n                j->first = i;\n                gUnk_02018EA0->last = i;\n                gUnk_02018EA0 = i;\n                return 1;\n            }\n        }\n        return 0;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080176E4\nsub_080176E4:\n        push {lr}\n        mov r2, r0\n        add r0, #0x29\n        ldrb r1, [r0]\n        mov r0, #0x40\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_1\n        mov r0, #0x1\n        b _code0_4\n_code0_0:\n        str r2, [r3, #0x8]\n        mov r0, #0x1\n        strb r0, [r3, #0xc]\n        add r2, #0x29\n        ldrb r0, [r2]\n        mov r1, #0x40\n        orr r0, r1\n        strb r0, [r2]\n        ldr r2, _data0_0\n        ldr r0, [r2]\n        str r0, [r3, #0x4]\n        ldr r1, [r0]\n        str r1, [r3]\n        str r3, [r1, #0x4]\n        str r3, [r0]\n        str r3, [r2]\n        mov r0, #0x1\n        b _code0_4\n_data0_0:\n        .4byte gUnk_02018EA0\n_code0_1:\n        ldr r3, _data0_1\n        mov r0, #0x80\n        lsl r0, #0x1\n        add r1, r3, r0\n        cmp r1, r3\n        bls _code0_3\n_code0_2:\n        ldr r0, [r3, #0x8]\n        cmp r0, #0x0\n        beq _code0_0\n        add r3, #0x10\n        cmp r1, r3\n        bhi _code0_2\n_code0_3:\n        mov r0, #0x0\n_code0_4:\n        pop {r1}\n        bx r1\n_data0_1:\n        .4byte gUnk_03003C70",
      "score": "54",
      "id": 19
    },
    {
      "name": "sub_08017744",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nvoid sub_08017744(Entity* this) {\n    LinkedList2* i;\n    for (i = &gUnk_03003C70[0]; i < &gUnk_03003C70[16]; ++i) {\n        if (i->node == this) {\n            if (this->spritePriority.b2 != 0) {\n                this->spritePriority.b2 = 0;\n                i->node = NULL;\n                ((LinkedList2*)i->last)->first = i->first;\n                ((LinkedList2*)i->first)->last = i->last;\n                if (i != gUnk_02018EA0)\n                    return;\n                gUnk_02018EA0 = i->first;\n            }\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08017744\nsub_08017744:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        ldr r2, _data0_0\n        mov r0, #0x80\n        lsl r0, #0x1\n        add r7, r2, r0\n        mov r5, #0x41\n        neg r5, r5\n        ldr r6, _data0_0+0x4\n        b _code0_1\n_data0_0:\n        .4byte gUnk_03003C70\n        .4byte gUnk_02018EA0\n_code0_0:\n        add r2, #0x10\n        cmp r7, r2\n        bls _code0_2\n_code0_1:\n        ldr r0, [r2, #0x8]\n        cmp r4, r0\n        bne _code0_0\n        mov r3, r4\n        add r3, #0x29\n        ldrb r1, [r3]\n        mov r0, #0x40\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r5\n        and r0, r1\n        strb r0, [r3]\n        mov r0, #0x0\n        str r0, [r2, #0x8]\n        ldr r1, [r2]\n        ldr r0, [r2, #0x4]\n        str r0, [r1, #0x4]\n        ldr r1, [r2, #0x4]\n        ldr r0, [r2]\n        str r0, [r1]\n        ldr r0, [r6]\n        cmp r2, r0\n        bne _code0_2\n        ldr r0, [r2, #0x4]\n        str r0, [r6]\n_code0_2:\n        pop {r4, r5, r6, r7}\n        pop {r0}\n        bx r0",
      "score": "50",
      "id": 20
    },
    {
      "name": "sub_080177A0",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nbool32 sub_080177A0(Entity* this, Entity* that) {\n    u32 this_d;\n    u32 depth;\n\n    if ((that->collisionLayer & this->collisionLayer) != 0) {\n        Hitbox* bb_this = this->hitbox;\n        Hitbox* bb_that = that->hitbox;\n        u32 this_w = bb_this->width;\n        u32 that_w = bb_that->width;\n        if ((((this->x.HALF.HI - that->x.HALF.HI) + bb_this->offset_x) - bb_that->offset_x) + this_w + that_w <=\n            (this_w + that_w) * 2) {\n            u32 this_h = bb_this->height;\n            u32 that_h = bb_that->height;\n            if ((((this->y.HALF.HI - that->y.HALF.HI) + bb_this->offset_y) - bb_that->offset_y) + this_h + that_h <=\n                (this_h + that_h) * 2) {\n                if ((this->field_0x3c & 0x10) != 0)\n                    this_d = ((Hitbox3D*)bb_this)->depth;\n                else\n                    this_d = 5;\n                if ((that->field_0x3c & 0x10) != 0)\n                    depth = this_d + ((Hitbox3D*)bb_that)->depth;\n                else\n                    depth = this_d + 5;\n                if ((this->height.HALF.HI - that->height.HALF.HI) + depth <= depth * 2)\n                    return TRUE;\n            }\n        }\n    }\n    return FALSE;\n}\n",
      "asmCode": "thumb_func_start sub_080177A0\nsub_080177A0:\n        push {r4, r5, r6, lr}\n        mov r12, r0\n        mov r5, r1\n        add r0, #0x38\n        add r1, #0x38\n        ldrb r2, [r0]\n        ldrb r0, [r1]\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_3\n        mov r0, r12\n        ldr r3, [r0, #0x48]\n        ldr r4, [r5, #0x48]\n        ldrb r1, [r3, #0x6]\n        ldrb r0, [r4, #0x6]\n        add r2, r1, r0\n        mov r1, r12\n        mov r6, #0x2e\n        ldrsh r0, [r1, r6]\n        mov r6, #0x2e\n        ldrsh r1, [r5, r6]\n        sub r0, r1\n        mov r1, #0x0\n        ldrsb r1, [r3, r1]\n        add r0, r1\n        mov r1, #0x0\n        ldrsb r1, [r4, r1]\n        sub r0, r1\n        add r0, r2\n        lsl r1, r2, #0x1\n        cmp r0, r1\n        bhi _code0_3\n        ldrb r1, [r3, #0x7]\n        ldrb r0, [r4, #0x7]\n        add r2, r1, r0\n        mov r1, r12\n        mov r6, #0x32\n        ldrsh r0, [r1, r6]\n        mov r6, #0x32\n        ldrsh r1, [r5, r6]\n        sub r0, r1\n        mov r1, #0x1\n        ldrsb r1, [r3, r1]\n        add r0, r1\n        mov r1, #0x1\n        ldrsb r1, [r4, r1]\n        sub r0, r1\n        add r0, r2\n        lsl r1, r2, #0x1\n        cmp r0, r1\n        bhi _code0_3\n        mov r0, r12\n        add r0, #0x3c\n        ldrb r1, [r0]\n        mov r6, #0x10\n        mov r0, r6\n        and r0, r1\n        mov r2, #0x5\n        cmp r0, #0x0\n        beq _code0_0\n        ldrb r2, [r3, #0x8]\n_code0_0:\n        mov r0, r5\n        add r0, #0x3c\n        ldrb r1, [r0]\n        mov r0, r6\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_1\n        ldrb r0, [r4, #0x8]\n        add r2, r0\n        b _code0_2\n_code0_1:\n        add r2, #0x5\n_code0_2:\n        mov r1, r12\n        mov r3, #0x36\n        ldrsh r0, [r1, r3]\n        mov r6, #0x36\n        ldrsh r1, [r5, r6]\n        sub r0, r1\n        add r0, r2\n        lsl r1, r2, #0x1\n        cmp r0, r1\n        bhi _code0_3\n        mov r0, #0x1\n        b _code0_4\n_code0_3:\n        mov r0, #0x0\n_code0_4:\n        pop {r4, r5, r6}\n        pop {r1}\n        bx r1",
      "score": "95",
      "id": 21
    },
    {
      "name": "sub_0806D02C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D02C(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806D02C\nsub_0806D02C:\n        push {lr}\n        bl sub_0806D164\n        ldr r2, _data0_0\n        ldrh r1, [r2]\n        mov r3, #0x80\n        lsl r3, #0x7\n        mov r0, r3\n        orr r0, r1\n        strh r0, [r2]\n        mov r1, r2\n        add r1, #0x60\n        ldr r0, _data0_0+0x4\n        strh r0, [r1]\n        add r1, #0x2\n        mov r0, #0x3d\n        strh r0, [r1]\n        mov r1, #0x16\n        ldrsh r0, [r2, r1]\n        neg r0, r0\n        mov r3, #0x80\n        lsl r3, #0x1\n        add r1, r0, r3\n        cmp r0, #0x0\n        bge _code0_0\n        mov r0, #0x0\n_code0_0:\n        cmp r0, #0xf0\n        ble _code0_1\n        mov r0, #0xf0\n_code0_1:\n        cmp r1, #0x0\n        bge _code0_2\n        mov r1, #0x0\n_code0_2:\n        cmp r1, #0xf0\n        ble _code0_3\n        mov r1, #0xf0\n_code0_3:\n        lsl r0, #0x8\n        orr r0, r1\n        mov r1, r2\n        add r1, #0x5a\n        strh r0, [r1]\n        mov r1, #0x18\n        ldrsh r0, [r2, r1]\n        neg r0, r0\n        add r1, r0, r3\n        cmp r0, #0x0\n        bge _code0_4\n        mov r0, #0x0\n_code0_4:\n        cmp r0, #0xa0\n        ble _code0_5\n        mov r0, #0xa0\n_code0_5:\n        cmp r1, #0x0\n        bge _code0_6\n        mov r1, #0x0\n_code0_6:\n        cmp r1, #0xa0\n        ble _code0_7\n        mov r1, #0xa0\n_code0_7:\n        lsl r0, #0x8\n        orr r0, r1\n        mov r1, r2\n        add r1, #0x5e\n        strh r0, [r1]\n        pop {pc}\n_data0_0:\n        .4byte gScreen\n        .4byte 0x3f3f",
      "score": "74",
      "id": 22
    },
    {
      "name": "sub_0806D138",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D138(u8* param_1, u8* param_2) {\n\n}",
      "asmCode": "thumb_func_start sub_0806D138\nsub_0806D138:\n        push {r4, r5, r6, lr}\n        mov r3, r0\n        mov r4, #0x0\n        ldr r2, _data0_0\n        ldr r6, _data0_0+0x4\n        mov r5, #0x80\n        lsl r5, #0x1\n_code0_0:\n        str r3, [r2]\n        str r1, [r2, #0x4]\n        str r6, [r2, #0x8]\n        ldr r0, [r2, #0x8]\n        add r4, #0x1\n        add r3, #0x40\n        add r1, r5\n        cmp r4, #0x1f\n        bls _code0_0\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte 0x40000d4\n        .4byte 0x80000020",
      "score": "23",
      "id": 23
    },
    {
      "name": "sub_0806D164",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D164(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806D164\nsub_0806D164:\n        push {r4, r5, r6, r7, lr}\n        ldr r5, _data0_0\n        mov r1, #0xa\n        ldrsh r2, [r5, r1]\n        mov r3, #0x2e\n        ldrsh r1, [r0, r3]\n        sub r2, r1\n        add r2, #0xa0\n        ldr r4, _data0_0+0x4\n        mov r3, #0xf\n        mov r1, r2\n        and r1, r3\n        strh r1, [r4, #0x16]\n        ldrh r1, [r5, #0xc]\n        ldrh r0, [r0, #0x32]\n        sub r1, r0\n        add r1, #0xb0\n        strh r1, [r4, #0x18]\n        ldr r3, _data0_0+0x8\n        ldr r0, _data0_0+0xc\n        add r6, r3, r0\n        mov r5, #0x20\n        lsr r2, #0x4\n        lsl r2, #0x2\n        add r3, r2, r3\n        mov r7, r4\n        ldr r1, _data0_0+0x10\n        ldr r4, _data0_0+0x14\n        mov r2, #0x80\n        lsl r2, #0x1\n_code0_0:\n        str r3, [r1]\n        str r6, [r1, #0x4]\n        str r4, [r1, #0x8]\n        ldr r0, [r1, #0x8]\n        add r3, r2\n        add r6, #0x40\n        sub r5, #0x1\n        cmp r5, #0x0\n        bne _code0_0\n        mov r0, #0x1\n        strh r0, [r7, #0x1a]\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gRoomControls\n        .4byte gScreen\n        .4byte gUnk_02006F00\n        .4byte 0xffffc000\n        .4byte 0x40000d4\n        .4byte 0x80000020",
      "score": "52",
      "id": 24
    },
    {
      "name": "sub_0806D1D0",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D1D0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806D1D0\nsub_0806D1D0:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r5, [r4, #0xc]\n        cmp r5, #0x0\n        bne _code0_1\n        bl sub_0806D00C\n        cmp r0, #0x0\n        bne _code0_0\n        bl DeleteThisEntity\n_code0_0:\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldrb r0, [r4, #0x1b]\n        mov r1, #0xc0\n        orr r0, r1\n        strb r0, [r4, #0x1b]\n        ldrb r0, [r4, #0x19]\n        orr r0, r1\n        strb r0, [r4, #0x19]\n        mov r2, r4\n        add r2, #0x29\n        ldrb r0, [r2]\n        mov r1, #0x7\n        orr r0, r1\n        strb r0, [r2]\n        ldrb r0, [r4, #0x18]\n        mov r1, #0x3\n        orr r0, r1\n        strb r0, [r4, #0x18]\n        strb r5, [r4, #0x1e]\n        mov r0, #0x1e\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        mov r1, #0x2\n        bl sub_0805E3A0\n_code0_1:\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x1\n        beq _code0_4\n        cmp r0, #0x1\n        ble _code0_2\n        cmp r0, #0x2\n        beq _code0_5\n_code0_2:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        mov r5, #0xff\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_3\n        bl Random\n        mov r1, #0x7f\n        and r0, r1\n        add r0, #0x30\n        strb r0, [r4, #0xe]\n        mov r0, #0x8\n        strb r0, [r4, #0xf]\n        mov r0, #0x1\n        strb r0, [r4, #0x1e]\n_code0_3:\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        beq _code0_6\n        sub r0, #0x1\n        strb r0, [r4, #0xf]\n        and r0, r5\n        cmp r0, #0x0\n        bne _code0_6\n_code0_4:\n        strb r0, [r4, #0x1e]\n        b _code0_6\n_code0_5:\n        ldrb r1, [r4, #0x18]\n        mov r0, #0x4\n        neg r0, r0\n        and r0, r1\n        strb r0, [r4, #0x18]\n_code0_6:\n        ldr r0, [r4, #0x50]\n        ldrh r1, [r0, #0x2e]\n        strh r1, [r4, #0x2e]\n        ldrh r0, [r0, #0x32]\n        strh r0, [r4, #0x32]\n        pop {r4, r5, pc}",
      "score": "87",
      "id": 25
    },
    {
      "name": "sub_0806D520",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D520(Entity* this, u32 param) {\n\n}",
      "asmCode": "thumb_func_start sub_0806D520\nsub_0806D520:\n        push {r4, lr}\n        mov r4, r0\n        mov r3, r1\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldr r0, _data0_0\n        add r0, r3, r0\n        ldrb r0, [r0]\n        add r0, #0x6\n        strb r0, [r4, #0xf]\n        strb r0, [r4, #0x1e]\n        mov r0, #0x8\n        strb r0, [r4, #0xe]\n_code0_0:\n        ldr r0, [r4, #0x50]\n        ldrh r1, [r0, #0x2e]\n        strh r1, [r4, #0x2e]\n        ldrh r1, [r0, #0x32]\n        strh r1, [r4, #0x32]\n        add r0, #0x62\n        ldrb r0, [r0]\n        mov r1, r4\n        add r1, #0x62\n        strb r0, [r1]\n        ldr r0, [r4, #0x50]\n        add r0, #0x63\n        ldrb r0, [r0]\n        add r1, #0x1\n        strb r0, [r1]\n        ldr r0, [r4, #0x50]\n        ldrb r1, [r0, #0x1b]\n        lsr r1, #0x6\n        lsl r1, #0x6\n        ldrb r2, [r4, #0x1b]\n        mov r0, #0x3f\n        and r0, r2\n        orr r0, r1\n        strb r0, [r4, #0x1b]\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x0\n        bne _code0_1\n        mov r1, #0x2e\n        ldrsh r0, [r4, r1]\n        lsl r1, r3, #0x4\n        sub r0, r1\n        add r0, #0xc\n        mov r2, #0x32\n        ldrsh r1, [r4, r2]\n        mov r2, #0x18\n        mov r3, #0x40\n        bl CheckPlayerProximity\n        cmp r0, #0x0\n        beq _code0_2\n_code0_1:\n        ldrb r1, [r4, #0x1e]\n        ldrb r0, [r4, #0xf]\n        add r0, #0x2\n        cmp r1, r0\n        bge _code0_4\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_4\n        mov r0, #0x8\n        strb r0, [r4, #0xe]\n        ldrb r0, [r4, #0x1e]\n        add r0, #0x1\n        b _code0_3\n_data0_0:\n        .4byte gUnk_08114100\n_code0_2:\n        ldrb r1, [r4, #0x1e]\n        ldrb r0, [r4, #0xf]\n        cmp r1, r0\n        bls _code0_4\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_4\n        mov r0, #0x8\n        strb r0, [r4, #0xe]\n        sub r0, r1, #0x1\n_code0_3:\n        strb r0, [r4, #0x1e]\n_code0_4:\n        pop {r4, pc}",
      "score": "95",
      "id": 26
    },
    {
      "name": "sub_0806D5D4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D5D4(void) {\n    u32 itemSlot;\n\n    sub_08053500();\n    itemSlot = IsItemEquipped(0xd);\n    if (itemSlot != 2) {\n        ((u8*)&gSave.stats.itemOnA)[itemSlot] = 0;\n    }\n    sub_0807CAA0(0xd, 0);\n}\n",
      "asmCode": "thumb_func_start sub_0806D5D4\nsub_0806D5D4:\n        push {lr}\n        bl sub_08053500\n        mov r0, #0xd\n        bl IsItemEquipped\n        mov r1, r0\n        cmp r1, #0x2\n        beq _code0_0\n        ldr r0, _data0_0\n        add r0, #0xb4\n        add r0, r1, r0\n        mov r1, #0x0\n        strb r1, [r0]\n_code0_0:\n        mov r0, #0xd\n        mov r1, #0x0\n        bl sub_0807CAA0\n        pop {pc}\n_data0_0:\n        .4byte gSave",
      "score": "21",
      "id": 27
    },
    {
      "name": "sub_0806D67C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n\nextern void (*gUnk_081140D4[])(Entity*);\n\nextern u16 gUnk_081140CC[];\n\nvoid sub_0806D520(Entity*, u32);\n\nvoid sub_0806D41C(Entity* this);\n\nextern u8 gMapDataTopSpecial[];\n\nvoid sub_0806D138(u8* param_1, u8* param_2);\n\nextern void sub_08053500(void);\n\nextern u32 gUnk_0200B650;\nvoid sub_0806D110(void);\nvoid sub_0806D164(Entity* this);\n\nextern Hitbox gUnk_080FD180;\nEntity* sub_0806D00C(Entity* this);\n\nvoid sub_0806D4C0(Entity*, u32);\nextern u32 CheckPlayerProximity(u32, u32, u32, u32);\n\n// end of existing headers\n\nvoid sub_0806D67C(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806D67C\nsub_0806D67C:\n        push {r4, r5, r6, lr}\n        mov r5, r0\n        ldr r4, _data0_0\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        mov r1, #0x1\n        neg r1, r1\n        cmp r0, r1\n        beq _code0_2\n        mov r6, r1\n_code0_0:\n        mov r1, #0x0\n        ldrsb r1, [r4, r1]\n        mov r0, r5\n        mov r2, #0x40\n        bl CreateFx\n        mov r1, r0\n        cmp r1, #0x0\n        beq _code0_1\n        mov r0, #0x1\n        ldrsb r0, [r4, r0]\n        ldrh r2, [r1, #0x2e]\n        add r0, r2\n        strh r0, [r1, #0x2e]\n        mov r0, #0x2\n        ldrsb r0, [r4, r0]\n        ldrh r2, [r1, #0x32]\n        add r0, r2\n        strh r0, [r1, #0x32]\n        ldrb r0, [r4, #0x3]\n        strb r0, [r1, #0x15]\n        mov r0, #0x80\n        lsl r0, #0x1\n        strh r0, [r1, #0x24]\n_code0_1:\n        add r4, #0x4\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        cmp r0, r6\n        bne _code0_0\n_code0_2:\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_08114104",
      "score": "46",
      "id": 28
    },
    {
      "name": "sub_0802AFC8",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802AFC8(Entity* this) {\n    u32 flag = 8;\n    if (this->field_0xf < 0x29) {\n        u32 tmp;\n\n        flag = 4;\n        if (this->field_0x82.HWORD & 0x8000) {\n            this->field_0x82.HWORD -= 0x10;\n        } else {\n            this->field_0x82.HWORD += 0x10;\n        }\n        if (0x7f < (this->field_0x82.HWORD & 0xf0) - 1) {\n            this->field_0x82.HWORD ^= 0x8000;\n        }\n\n        tmp = 0x130 - (this->field_0x82.HWORD & 0xf0);\n        sub_0805EC9C(this, tmp, tmp, 0);\n    }\n\n    if (this->field_0xf & flag) {\n        this->palette.b.b0 = 0;\n    } else {\n        this->palette.b.b0 = this->palette.b.b4;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0802AFC8\nsub_0802AFC8:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xf]\n        mov r7, #0x8\n        cmp r0, #0x28\n        bhi _code0_3\n        mov r7, #0x4\n        mov r1, r4\n        add r1, #0x82\n        ldrh r2, [r1]\n        mov r0, #0x80\n        lsl r0, #0x8\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r2\n        sub r0, #0x10\n        b _code0_1\n_code0_0:\n        mov r0, r2\n        add r0, #0x10\n_code0_1:\n        strh r0, [r1]\n        mov r5, r1\n        ldrh r2, [r5]\n        mov r6, #0xf0\n        mov r3, r6\n        and r3, r2\n        sub r0, r3, #0x1\n        cmp r0, #0x7f\n        bls _code0_2\n        mov r3, #0x80\n        lsl r3, #0x8\n        mov r0, r3\n        eor r0, r2\n        strh r0, [r5]\n_code0_2:\n        ldrh r0, [r1]\n        mov r3, r6\n        and r3, r0\n        mov r2, #0x98\n        lsl r2, #0x1\n        sub r2, r3\n        mov r0, r4\n        mov r1, r2\n        mov r3, #0x0\n        bl sub_0805EC9C\n_code0_3:\n        ldrb r0, [r4, #0xf]\n        and r0, r7\n        cmp r0, #0x0\n        beq _code0_4\n        ldrb r0, [r4, #0x1a]\n        lsr r2, r0, #0x4\n        mov r1, #0x10\n        neg r1, r1\n        and r1, r0\n        orr r1, r2\n        strb r1, [r4, #0x1a]\n        b _code0_5\n_code0_4:\n        ldrb r1, [r4, #0x1a]\n        mov r0, #0x10\n        neg r0, r0\n        and r0, r1\n        strb r0, [r4, #0x1a]\n_code0_5:\n        pop {r4, r5, r6, r7, pc}",
      "score": "70",
      "id": 29
    },
    {
      "name": "sub_08063584",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"save.h\"\n#include \"npc.h\"\n#include \"script.h\"\n\nvoid sub_08063544(Entity*);\nvoid sub_0806362C(Entity*);\n\nextern void (*gUnk_0810CAA0[])(Entity*);\n\nextern Dialog gUnk_0810CAAC[];\n\n// end of existing headers\n\nvoid sub_08063584(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08063584\nsub_08063584:\n        push {r4, lr}\n        mov r4, r0\n        mov r1, #0x20\n        mov r2, #0x20\n        bl sub_0806ED9C\n        cmp r0, #0x0\n        blt _code0_0\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        bne _code0_1\n        bl Random\n        mov r1, #0x3f\n        and r1, r0\n        cmp r1, #0x0\n        bne _code0_0\n        mov r0, #0x1\n        strb r0, [r4, #0xf]\n        mov r0, r4\n        mov r1, #0x0\n        bl InitAnimationForceUpdate\n_code0_0:\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        beq _code0_2\n_code0_1:\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, #0x0\n        strb r0, [r4, #0xf]\n_code0_2:\n        mov r0, r4\n        add r0, #0x39\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        cmp r0, #0x0\n        beq _code0_3\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        bl GetAnimationState\n        mov r1, r0\n        add r1, #0x4\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        ldrb r0, [r4, #0xe]\n        ldr r1, _data0_0\n        add r0, r1\n        bl TextboxNoOverlapFollow\n_code0_3:\n        mov r0, r4\n        bl sub_0806ED78\n        pop {r4, pc}\n_data0_0:\n        .4byte 0xa01",
      "score": "64",
      "id": 30
    },
    {
      "name": "sub_0802925C",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n#include \"save.h\"\n#include \"random.h\"\n#include \"npc.h\"\n#include \"functions.h\"\n\nextern void sub_0801D040(Entity*, u32);\nextern Entity* sub_08049DF4(u32);\nextern bool32 sub_08056338(void);\nextern void UnloadOBJPalette(Entity*);\n\nbool32 sub_0802915C(Entity*);\nbool32 sub_080291DC(Entity*);\nvoid sub_0802922C(Entity*);\nvoid sub_08028E9C(Entity*);\nu32 sub_080001DA(u32, u32);\nvoid sub_08028FFC(Entity*);\nvoid sub_0802925C(Entity*);\nvoid sub_080290E0(Entity*, u32);\nbool32 sub_08028F98(Entity*, u32);\nvoid sub_08029078(Entity*);\nbool32 sub_08028FDC(Entity*);\nvoid sub_080290FC(Entity*);\nvoid sub_08028EDC(Entity*);\n\nextern const struct SalesOffering gUnk_080CC954[];\nextern const u8 gUnk_080CC9C0[];\nextern void (*const gUnk_080CC9C8[])(Entity*);\nextern void (*const gUnk_080CC9E0[])(Entity*);\nextern const u8 gUnk_080CCA04[];\n\nstruct SalesOffering {\n    u8 field_0x0;\n    u8 field_0x1;\n    u16 price;\n    u16 field_0x4;\n    u16 field_0x6;\n    u8 field_0x8;\n    u8 field_0x9;\n    u16 field_0xa;\n};\n\n// end of existing headers\n\nvoid sub_0802922C(Entity* this) {\n    const struct SalesOffering* offer = (const struct SalesOffering*)this->field_0x7c.WORD;\n\n    this->action = 6;\n    this->field_0x80.HALF.HI = 0;\n\n    switch (offer->field_0x8) {\n        case 0x1c:\n            SetGlobalFlag(0x5a);\n            break;\n    }\n\n    sub_080290E0(this, 3);\n}\n",
      "asmCode": "thumb_func_start sub_0802925C\nsub_0802925C:\n        push {r4, lr}\n        mov r4, r0\n        mov r0, #0x0\n        mov r1, #0x6\n        strb r1, [r4, #0xc]\n        mov r1, r4\n        add r1, #0x81\n        strb r0, [r1]\n        ldr r0, [r4, #0x7c]\n        ldrb r0, [r0, #0x8]\n        cmp r0, #0x6c\n        beq _code0_0\n        cmp r0, #0x6c\n        bgt _code0_0\n        cmp r0, #0x1c\n        bne _code0_0\n        mov r0, #0x5a\n        bl SetGlobalFlag\n_code0_0:\n        mov r0, r4\n        mov r1, #0x3\n        bl sub_080290E0\n        pop {r4, pc}",
      "score": "25",
      "id": 31
    },
    {
      "name": "sub_08081E6C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"flags.h\"\n#include \"room.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0811EE38[])(Entity*);\n\n// end of existing headers\n\nvoid sub_08081E6C(Entity* this) {\n    u32 r4;\n    u16 *tmp, *r1;\n    u16* tmp2;\n    u32 r6 = this->field_0x74.HWORD;\n    u32 r5 = this->collisionLayer;\n    u32 tile = GetTileType(r6, r5);\n    if (tile < 0x4000)\n        return;\n    r1 = GetLayerByIndex(r5);\n    r4 = (this->type == 0 ? 0x7a : 0x78);\n    tmp = r1 + 0x3802;\n    r1 += 0x3002 + r4;\n    tmp = tmp + (*r1 << 2);\n    tmp2 = (r5 == 2 ? gMapDataTopSpecial : gUnk_02019EE0);\n    tmp2 += (((0x3f & r6) << 1) + ((0xfc0 & r6) << 2)) << 1;\n    if (sub_08081F00((u32*)tmp2, (u32*)tmp))\n        return;\n    SetTileType(r4, r6, r5);\n    SetTile(tile, r6, r5);\n}\n",
      "asmCode": "thumb_func_start sub_08081E6C\nsub_08081E6C:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        add r0, #0x74\n        ldrh r6, [r0]\n        sub r0, #0x3c\n        ldrb r5, [r0]\n        mov r0, r6\n        mov r1, r5\n        bl GetTileType\n        mov r7, r0\n        ldr r0, _data0_0\n        cmp r7, r0\n        bls _code0_2\n        mov r0, r5\n        bl GetLayerByIndex\n        mov r1, r0\n        ldrb r0, [r4, #0xa]\n        mov r4, #0x78\n        cmp r0, #0x0\n        bne _code0_0\n        mov r4, #0x7a\n_code0_0:\n        ldr r0, _data0_0+0x4\n        add r3, r1, r0\n        lsl r0, r4, #0x1\n        ldr r2, _data0_0+0x8\n        add r1, r2\n        add r1, r0\n        ldrh r0, [r1]\n        lsl r0, #0x3\n        add r3, r0\n        ldr r2, _data0_0+0xc\n        cmp r5, #0x2\n        bne _code0_1\n        ldr r2, _data0_0+0x10\n_code0_1:\n        mov r0, #0x3f\n        and r0, r6\n        lsl r0, #0x1\n        mov r1, #0xfc\n        lsl r1, #0x4\n        and r1, r6\n        lsl r1, #0x2\n        add r0, r1\n        lsl r0, #0x1\n        add r2, r0\n        mov r0, r2\n        mov r1, r3\n        bl sub_08081F00\n        cmp r0, #0x0\n        bne _code0_2\n        mov r0, r4\n        mov r1, r6\n        mov r2, r5\n        bl SetTileType\n        mov r0, r7\n        mov r1, r6\n        mov r2, r5\n        bl SetTile\n_code0_2:\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte 0x3fff\n        .4byte 0x7004\n        .4byte 0x6004\n        .4byte gUnk_02019EE0\n        .4byte gMapDataTopSpecial",
      "score": "69",
      "id": 32
    },
    {
      "name": "sub_08064570",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n\nextern Dialog gUnk_0810F894[];\n\nvoid sub_08064570(Entity* this);\n\nextern u16 gUnk_0810F88C[];\n\nextern SpriteLoadData gUnk_0810F874[];\nextern u32 _call_via_r0(u32*);\n\n// end of existing headers\n\nvoid sub_08064570(Entity* this) {\n    u8 bVar1;\n    u32 tmp;\n\n    switch (this->action) {\n        case 0:\n            // (&gUnk_0810F874[((s32)-(this->id ^ 0x16) >> 0x1f) * -0xc]))\n            // TODO fix this array access\n            tmp = -(this->id ^ 0x16);\n            if (LoadExtraSpriteData(this, &gUnk_0810F874[(BOOLCAST(tmp)) * 2 + tmp]) == 0) {\n                return;\n            }\n            this->action += 1;\n            this->actionDelay = 0;\n            tmp = sub_0805ACC0(this);\n            if (tmp == 0) {\n                this->field_0x6c.HWORD = this->x.HALF.HI;\n                this->field_0x6e.HWORD = this->y.HALF.HI;\n            } else {\n                this->field_0x6c.HWORD = tmp >> 0x10;\n                this->field_0x6e.HWORD = tmp;\n            }\n            *(u32*)&this->field_0x68 = 0;\n            sub_0807DD50(this);\n        case 1:\n            sub_0807DD94(this, NULL);\n            if (this->interactType != 0) {\n                this->action += 1;\n                this->interactType = 0;\n                InitializeAnimation(this, sub_0806F5A4(GetFacingDirection(this, &gPlayerEntity)));\n                if (*(void**)&this->field_0x68 != NULL) {\n                    _call_via_r0(*(void**)&this->field_0x68);\n                }\n            }\n            break;\n        case 2:\n            if ((gTextBox.doTextBox & 0x7f) != 0) {\n                return;\n            }\n            this->action = 1;\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08064570\nsub_08064570:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r5, [r4, #0xc]\n        cmp r5, #0x1\n        beq _code0_4\n        cmp r5, #0x1\n        bgt _code0_0\n        cmp r5, #0x0\n        beq _code0_1\n        b _code0_6\n_code0_0:\n        cmp r5, #0x2\n        beq _code0_5\n        b _code0_6\n_code0_1:\n        ldrb r1, [r4, #0x9]\n        mov r0, #0x16\n        eor r1, r0\n        neg r0, r1\n        orr r0, r1\n        lsr r0, #0x1f\n        lsl r1, r0, #0x1\n        add r1, r0\n        lsl r1, #0x2\n        ldr r0, _data0_0\n        add r1, r0\n        mov r0, r4\n        bl LoadExtraSpriteData\n        cmp r0, #0x0\n        beq _code0_6\n        ldrb r0, [r4, #0xc]\n        add r0, #0x1\n        strb r0, [r4, #0xc]\n        strb r5, [r4, #0xe]\n        mov r0, r4\n        bl sub_0805ACC0\n        mov r2, r0\n        cmp r2, #0x0\n        bne _code0_2\n        ldrh r0, [r4, #0x2e]\n        mov r1, r4\n        add r1, #0x6c\n        strh r0, [r1]\n        ldrh r0, [r4, #0x32]\n        add r1, #0x2\n        strh r0, [r1]\n        b _code0_3\n_data0_0:\n        .4byte gUnk_0810F874\n_code0_2:\n        lsr r1, r2, #0x10\n        mov r0, r4\n        add r0, #0x6c\n        strh r1, [r0]\n        add r0, #0x2\n        strh r2, [r0]\n_code0_3:\n        mov r0, #0x0\n        str r0, [r4, #0x68]\n        mov r0, r4\n        bl sub_0807DD50\n_code0_4:\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_0807DD94\n        mov r2, r4\n        add r2, #0x39\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        cmp r0, #0x0\n        beq _code0_6\n        ldrb r0, [r4, #0xc]\n        add r0, #0x1\n        mov r1, #0x0\n        strb r0, [r4, #0xc]\n        strb r1, [r2]\n        ldr r1, _data0_1\n        mov r0, r4\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        mov r1, r0\n        mov r0, r4\n        bl InitializeAnimation\n        ldr r0, [r4, #0x68]\n        cmp r0, #0x0\n        beq _code0_6\n        bl _call_via_r0\n        b _code0_6\n_data0_1:\n        .4byte gPlayerEntity\n_code0_5:\n        ldr r0, _data0_2\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_6\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n_code0_6:\n        pop {r4, r5, pc}\n_data0_2:\n        .4byte gTextBox",
      "score": "105",
      "id": 33
    },
    {
      "name": "sub_080646A4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"save.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n\nextern Dialog gUnk_0810F894[];\n\nvoid sub_08064570(Entity* this);\n\nextern u16 gUnk_0810F88C[];\n\nextern SpriteLoadData gUnk_0810F874[];\nextern u32 _call_via_r0(u32*);\n\n// end of existing headers\n\n\n         void sub_080646A4(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_080646A4\nsub_080646A4:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        mov r5, r1\n        ldrb r0, [r5, #0x18]\n        cmp r0, #0x0\n        bne _code0_6\n        add r0, #0x1\n        strb r0, [r5, #0x18]\n        bl Random\n        mov r1, #0x3f\n        and r0, r1\n        add r0, #0x20\n        strh r0, [r5, #0x12]\n        bl Random\n        mov r1, r0\n        mov r0, #0x18\n        and r1, r0\n        ldrb r0, [r4, #0x15]\n        cmp r0, #0x8\n        beq _code0_2\n        cmp r0, #0x8\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_5\n_code0_0:\n        cmp r0, #0x10\n        beq _code0_3\n        cmp r0, #0x18\n        beq _code0_4\n        b _code0_5\n_code0_1:\n        cmp r1, #0x10\n        bne _code0_5\n        mov r1, #0x8\n        b _code0_5\n_code0_2:\n        cmp r1, #0x18\n        bne _code0_5\n        mov r1, #0x10\n        b _code0_5\n_code0_3:\n        cmp r1, #0x0\n        bne _code0_5\n        mov r1, #0x18\n        b _code0_5\n_code0_4:\n        cmp r1, #0x8\n        bne _code0_5\n        mov r1, #0x0\n_code0_5:\n        strb r1, [r4, #0x15]\n        mov r0, r1\n        bl sub_0806F5B0\n        strb r0, [r4, #0x14]\n        mov r0, #0x80\n        strh r0, [r4, #0x24]\n_code0_6:\n        ldr r0, [r5, #0x8]\n        mov r1, #0x2\n        orr r0, r1\n        str r0, [r5, #0x8]\n        mov r0, r4\n        bl ProcessMovement\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        mov r2, r4\n        add r2, #0x6c\n        mov r3, #0x0\n        ldrsh r0, [r2, r3]\n        sub r1, r0\n        cmp r1, #0x10\n        ble _code0_7\n        ldrh r0, [r2]\n        add r0, #0x10\n        strh r0, [r4, #0x2e]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_7:\n        mov r3, #0x10\n        neg r3, r3\n        cmp r1, r3\n        bge _code0_8\n        ldrh r0, [r2]\n        sub r0, #0x10\n        strh r0, [r4, #0x2e]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_8:\n        mov r6, #0x32\n        ldrsh r1, [r4, r6]\n        mov r2, r4\n        add r2, #0x6e\n        mov r6, #0x0\n        ldrsh r0, [r2, r6]\n        sub r1, r0\n        cmp r1, #0x10\n        ble _code0_9\n        ldrh r0, [r2]\n        add r0, #0x10\n        strh r0, [r4, #0x32]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_9:\n        cmp r1, r3\n        bge _code0_10\n        ldrh r0, [r2]\n        sub r0, #0x10\n        strh r0, [r4, #0x32]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_10:\n        ldrh r0, [r5, #0x12]\n        sub r0, #0x1\n        strh r0, [r5, #0x12]\n        lsl r0, #0x10\n        cmp r0, #0x0\n        beq _code0_11\n        ldr r1, _data0_0\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_11:\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gActiveScriptInfo",
      "score": "127",
      "id": 34
    },
    {
      "name": "sub_080675D4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n\nextern Hitbox gUnk_08110E94;\n\nextern void (*gUnk_08110E4C[])(Entity*);\nextern void (*gUnk_08110E5C[])(Entity*);\n\nextern s8 gUnk_08110E64[];\n\nextern u32 gUnk_08110E68[];\n\n// end of existing headers\n\nvoid sub_080675D4(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080675D4\nsub_080675D4:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r4, r0\n        ldr r5, _data0_0\n        ldrb r0, [r4, #0xd]\n        lsl r0, #0x2\n        mov r7, r0\n        sub r7, #0xc\n        mov r0, #0x3f\n        mov r8, r0\n        mov r6, #0x8\n_code0_0:\n        mov r0, r4\n        mov r1, #0x2\n        mov r2, #0x0\n        bl CreateFx\n        mov r3, r0\n        cmp r3, #0x0\n        beq _code0_1\n        mov r0, #0x0\n        ldrsb r0, [r5, r0]\n        ldrh r1, [r3, #0x2e]\n        add r0, r1\n        strh r0, [r3, #0x2e]\n        mov r0, #0x1\n        ldrsb r0, [r5, r0]\n        ldrh r1, [r3, #0x32]\n        add r0, r1\n        strh r0, [r3, #0x32]\n        strh r7, [r3, #0x36]\n        mov r0, r4\n        add r0, #0x38\n        ldrb r1, [r0]\n        mov r0, r3\n        add r0, #0x38\n        strb r1, [r0]\n        ldrb r1, [r4, #0x1b]\n        lsr r1, #0x6\n        lsl r1, #0x6\n        ldrb r2, [r3, #0x1b]\n        mov r0, r8\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x1b]\n        ldrb r1, [r4, #0x19]\n        lsr r1, #0x6\n        lsl r1, #0x6\n        ldrb r2, [r3, #0x19]\n        mov r0, r8\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x19]\n        mov r0, r4\n        mov r1, r3\n        bl ResolveEntityOnTop\n_code0_1:\n        sub r6, #0x1\n        add r5, #0x2\n        cmp r6, #0x0\n        bge _code0_0\n        ldr r5, _data0_0+0x4\n        mov r0, #0x3f\n        mov r8, r0\n        mov r6, #0x3\n_code0_2:\n        mov r0, r4\n        mov r1, #0x4\n        mov r2, #0x0\n        bl CreateFx\n        mov r3, r0\n        cmp r3, #0x0\n        beq _code0_3\n        mov r0, #0x0\n        ldrsb r0, [r5, r0]\n        ldrh r1, [r3, #0x2e]\n        add r0, r1\n        strh r0, [r3, #0x2e]\n        mov r0, #0x1\n        ldrsb r0, [r5, r0]\n        ldrh r1, [r3, #0x32]\n        add r0, r1\n        strh r0, [r3, #0x32]\n        strh r7, [r3, #0x36]\n        mov r0, r4\n        add r0, #0x38\n        ldrb r1, [r0]\n        mov r0, r3\n        add r0, #0x38\n        strb r1, [r0]\n        ldrb r1, [r4, #0x1b]\n        lsr r1, #0x6\n        lsl r1, #0x6\n        ldrb r2, [r3, #0x1b]\n        mov r0, r8\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x1b]\n        ldrb r1, [r4, #0x19]\n        lsr r1, #0x6\n        lsl r1, #0x6\n        ldrb r2, [r3, #0x19]\n        mov r0, r8\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x19]\n        mov r0, r4\n        mov r1, r3\n        bl ResolveEntityOnTop\n_code0_3:\n        sub r6, #0x1\n        add r5, #0x2\n        cmp r6, #0x0\n        bge _code0_2\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x2\n        bls _code0_4\n        ldrb r1, [r4, #0x18]\n        mov r0, #0x4\n        neg r0, r0\n        and r0, r1\n        strb r0, [r4, #0x18]\n_code0_4:\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gUnk_08110E78\n        .4byte gUnk_08110E8A",
      "score": "131",
      "id": 35
    },
    {
      "name": "sub_080676E0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n\nextern Hitbox gUnk_08110E94;\n\nextern void (*gUnk_08110E4C[])(Entity*);\nextern void (*gUnk_08110E5C[])(Entity*);\n\nextern s8 gUnk_08110E64[];\n\nextern u32 gUnk_08110E68[];\n\n// end of existing headers\n\n\n         void sub_080676E0(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_080676E0\nsub_080676E0:\n        push {lr}\n        mov r3, r0\n        mov r2, r1\n        ldrb r0, [r2, #0x18]\n        cmp r0, #0x1\n        beq _code0_2\n        cmp r0, #0x1\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_4\n_code0_0:\n        cmp r0, #0x2\n        beq _code0_3\n        b _code0_4\n_code0_1:\n        mov r0, #0x1\n        strb r0, [r2, #0x18]\n        mov r0, #0x20\n        strb r0, [r2, #0x19]\n        b _code0_5\n_code0_2:\n        ldrb r1, [r2, #0x19]\n        lsr r0, r1, #0x1\n        sub r0, #0x10\n        strh r0, [r3, #0x36]\n        sub r1, #0x1\n        strb r1, [r2, #0x19]\n        lsl r1, #0x18\n        cmp r1, #0x0\n        bne _code0_5\n        mov r0, #0x2\n        strb r0, [r2, #0x18]\n        mov r0, #0x24\n        strb r0, [r2, #0x19]\n        b _code0_5\n_code0_3:\n        ldrb r0, [r2, #0x19]\n        sub r0, #0x1\n        strb r0, [r2, #0x19]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_5\n        mov r0, #0x3\n        strb r0, [r2, #0x18]\n        b _code0_5\n_code0_4:\n        mov r1, #0xc0\n        lsl r1, #0x5\n        mov r0, r3\n        bl sub_08003FC4\n        cmp r0, #0x0\n        beq _code0_6\n_code0_5:\n        ldr r1, _data0_0\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_6:\n        pop {pc}\n_data0_0:\n        .4byte gActiveScriptInfo",
      "score": "63",
      "id": 36
    },
    {
      "name": "sub_0806DD90",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n\nextern void (*gUnk_0811423C[])(Entity*);\n\n// end of existing headers\n\nvoid sub_0806DD90(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806DD90\nsub_0806DD90:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        mov r7, r0\n        mov r0, #0x1\n        strb r0, [r7, #0xc]\n        mov r0, #0x3b\n        bl CheckGlobalFlag\n        neg r1, r0\n        orr r1, r0\n        lsr r4, r1, #0x1f\n        mov r0, #0x3c\n        bl CheckGlobalFlag\n        cmp r0, #0x0\n        beq _code0_0\n        mov r4, #0x2\n_code0_0:\n        mov r0, #0x3d\n        bl CheckGlobalFlag\n        cmp r0, #0x0\n        beq _code0_1\n        mov r4, #0x3\n_code0_1:\n        mov r0, r7\n        mov r1, r4\n        bl InitializeAnimation\n        mov r0, #0x2e\n        ldrsh r5, [r7, r0]\n        mov r1, #0x32\n        ldrsh r4, [r7, r1]\n        ldr r2, _data0_0\n        mov r10, r2\n        ldr r0, _data0_0+0x4\n        mov r8, r0\n        ldrh r1, [r0, #0x6]\n        add r1, #0x18\n        sub r1, r5, r1\n        lsr r1, #0x4\n        mov r6, #0x3f\n        and r1, r6\n        ldrh r0, [r0, #0x8]\n        add r0, #0x10\n        sub r0, r4, r0\n        lsr r0, #0x4\n        and r0, r6\n        lsl r0, #0x6\n        orr r1, r0\n        add r7, #0x38\n        mov r9, r7\n        mov r0, r9\n        ldrb r2, [r0]\n        mov r0, r10\n        bl SetTile\n        mov r2, r8\n        ldrh r1, [r2, #0x6]\n        add r1, #0x18\n        sub r1, r5, r1\n        lsr r1, #0x4\n        and r1, r6\n        ldrh r0, [r2, #0x8]\n        sub r0, r4, r0\n        lsr r0, #0x4\n        and r0, r6\n        lsl r0, #0x6\n        orr r1, r0\n        mov r0, r9\n        ldrb r2, [r0]\n        mov r0, r10\n        bl SetTile\n        mov r2, r8\n        ldrh r1, [r2, #0x6]\n        add r1, #0x18\n        sub r1, r5, r1\n        lsr r1, #0x4\n        and r1, r6\n        ldrh r0, [r2, #0x8]\n        sub r0, #0x10\n        sub r0, r4, r0\n        lsr r0, #0x4\n        and r0, r6\n        lsl r0, #0x6\n        orr r1, r0\n        mov r0, r9\n        ldrb r2, [r0]\n        mov r0, r10\n        bl SetTile\n        mov r2, r8\n        ldrh r1, [r2, #0x6]\n        sub r1, #0x18\n        sub r1, r5, r1\n        lsr r1, #0x4\n        and r1, r6\n        ldrh r0, [r2, #0x8]\n        add r0, #0x10\n        sub r0, r4, r0\n        lsr r0, #0x4\n        and r0, r6\n        lsl r0, #0x6\n        orr r1, r0\n        mov r0, r9\n        ldrb r2, [r0]\n        mov r0, r10\n        bl SetTile\n        mov r2, r8\n        ldrh r1, [r2, #0x6]\n        sub r1, #0x18\n        sub r1, r5, r1\n        lsr r1, #0x4\n        and r1, r6\n        ldrh r0, [r2, #0x8]\n        sub r0, r4, r0\n        lsr r0, #0x4\n        and r0, r6\n        lsl r0, #0x6\n        orr r1, r0\n        mov r0, r9\n        ldrb r2, [r0]\n        mov r0, r10\n        bl SetTile\n        mov r1, r8\n        ldrh r0, [r1, #0x6]\n        sub r0, #0x18\n        sub r5, r0\n        lsr r5, #0x4\n        and r5, r6\n        ldrh r0, [r1, #0x8]\n        sub r0, #0x10\n        sub r4, r0\n        lsr r4, #0x4\n        and r4, r6\n        lsl r4, #0x6\n        orr r5, r4\n        mov r0, r9\n        ldrb r2, [r0]\n        mov r0, r10\n        mov r1, r5\n        bl SetTile\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte 0x4072\n        .4byte gRoomControls",
      "score": "149",
      "id": 37
    },
    {
      "name": "sub_0807D280",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"entity.h\"\n#include \"save.h\"\n\n// these three functions use gRoomControls, maybe once that is understood better, these can be decompiled easier\n// end of existing headers\n\nvoid sub_0807D280(u32 unk_1, u32 unk_2) {\n\n}",
      "asmCode": "thumb_func_start sub_0807D280\nsub_0807D280:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r6, r0\n        mov r5, r1\n        ldr r1, _data0_0\n        mov r0, #0xa\n        ldrsh r2, [r1, r0]\n        ldrh r0, [r1, #0x6]\n        sub r3, r2, r0\n        mov r0, #0xc\n        ldrsh r2, [r1, r0]\n        ldrh r0, [r1, #0x8]\n        sub r4, r2, r0\n        ldrb r0, [r1, #0x10]\n        mov r8, r1\n        cmp r0, #0x1\n        beq _code0_4\n        cmp r0, #0x1\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_12\n_data0_0:\n        .4byte gRoomControls\n_code0_0:\n        cmp r0, #0x2\n        beq _code0_9\n        b _code0_12\n_code0_1:\n        mov r2, r8\n        ldrh r1, [r2, #0x18]\n        mov r0, #0x3\n        and r0, r1\n        cmp r0, #0x1\n        beq _code0_2\n        b _code0_16\n_code0_2:\n        mov r2, #0x1c\n        asr r3, #0x4\n        mov r9, r3\n        mov r3, #0x40\n        add r3, r5\n        mov r12, r3\n        ldr r4, _data0_1\n        ldr r7, _data0_1+0x4\n        mov r0, #0xe8\n        lsl r0, #0x3\n        add r3, r5, r0\n        sub r0, #0x80\n        add r1, r5, r0\n_code0_3:\n        str r1, [r4]\n        str r3, [r4, #0x4]\n        str r7, [r4, #0x8]\n        ldr r0, [r4, #0x8]\n        sub r3, #0x40\n        sub r1, #0x40\n        sub r2, #0x1\n        cmp r2, #0x0\n        bgt _code0_3\n        mov r1, r8\n        ldrh r0, [r1, #0x20]\n        lsr r0, #0x4\n        sub r0, #0x1\n        ldrh r1, [r1, #0x18]\n        lsr r1, #0x2\n        sub r0, r1\n        lsl r0, #0x8\n        mov r2, r9\n        lsl r1, r2, #0x1\n        add r0, r1\n        lsl r0, #0x1\n        add r6, r0\n        ldr r0, _data0_1\n        str r6, [r0]\n        str r5, [r0, #0x4]\n        ldr r2, _data0_1+0x4\n        str r2, [r0, #0x8]\n        ldr r1, [r0, #0x8]\n        mov r3, #0x80\n        lsl r3, #0x1\n        add r1, r6, r3\n        str r1, [r0]\n        mov r1, r12\n        b _code0_11\n_data0_1:\n        .4byte 0x40000d4\n        .4byte 0x80000020\n_code0_4:\n        mov r2, r8\n        ldrh r3, [r2, #0x18]\n        mov r0, #0x3\n        and r0, r3\n        cmp r0, #0x0\n        beq _code0_5\n        b _code0_16\n_code0_5:\n        asr r7, r4, #0x4\n        mov r0, #0x3c\n        add r0, r5\n        mov r9, r0\n        cmp r3, #0x0\n        beq _code0_7\n        ldr r4, _data0_2\n        ldr r1, _data0_2+0x4\n        mov r12, r1\n        add r3, r5, #0x4\n        mov r1, r5\n        mov r2, #0x15\n_code0_6:\n        str r3, [r4]\n        str r1, [r4, #0x4]\n        mov r0, r12\n        str r0, [r4, #0x8]\n        ldr r0, [r4, #0x8]\n        add r3, #0x40\n        add r1, #0x40\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_6\n_code0_7:\n        lsl r1, r7, #0x8\n        mov r2, r8\n        ldrh r0, [r2, #0x18]\n        lsr r0, #0x2\n        lsl r0, #0x1\n        add r1, r0\n        lsl r1, #0x1\n        add r6, r1\n        mov r5, r9\n        mov r1, #0x80\n        lsl r1, #0x1\n        mov r2, #0x15\n_code0_8:\n        ldrh r0, [r6]\n        strh r0, [r5]\n        ldrh r0, [r6, #0x2]\n        strh r0, [r5, #0x2]\n        add r5, #0x40\n        add r6, r1\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_8\n        b _code0_16\n_data0_2:\n        .4byte 0x40000d4\n        .4byte 0x8000001e\n_code0_9:\n        mov r0, r8\n        ldrh r1, [r0, #0x18]\n        mov r0, #0x3\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_16\n        lsl r2, r1, #0x10\n        cmp r2, #0x0\n        beq _code0_10\n        ldr r1, _data0_3\n        mov r0, r5\n        add r0, #0x80\n        str r0, [r1]\n        str r5, [r1, #0x4]\n        ldr r0, _data0_3+0x4\n        str r0, [r1, #0x8]\n        ldr r0, [r1, #0x8]\n_code0_10:\n        lsr r0, r2, #0x12\n        lsl r0, #0x8\n        asr r1, r3, #0x4\n        lsl r1, #0x1\n        add r0, r1\n        lsl r0, #0x1\n        add r6, r0\n        ldr r0, _data0_3\n        str r6, [r0]\n        mov r2, #0xa0\n        lsl r2, #0x3\n        add r1, r5, r2\n        str r1, [r0, #0x4]\n        ldr r2, _data0_3+0x8\n        str r2, [r0, #0x8]\n        ldr r1, [r0, #0x8]\n        mov r3, #0x80\n        lsl r3, #0x1\n        add r1, r6, r3\n        str r1, [r0]\n        mov r3, #0xa8\n        lsl r3, #0x3\n        add r1, r5, r3\n_code0_11:\n        str r1, [r0, #0x4]\n        str r2, [r0, #0x8]\n        ldr r0, [r0, #0x8]\n        b _code0_16\n_data0_3:\n        .4byte 0x40000d4\n        .4byte 0x800003c0\n        .4byte 0x80000020\n_code0_12:\n        mov r0, r8\n        ldrh r1, [r0, #0x18]\n        mov r0, #0x3\n        and r0, r1\n        cmp r0, #0x1\n        bne _code0_16\n        mov r2, #0x0\n        asr r7, r4, #0x4\n        mov r12, r5\n_code0_13:\n        mov r1, #0x1d\n        mov r3, r12\n        add r3, #0x3a\n_code0_14:\n        ldrh r0, [r3]\n        strh r0, [r3, #0x4]\n        sub r3, #0x2\n        sub r1, #0x1\n        cmp r1, #0x0\n        bge _code0_14\n        mov r1, #0x40\n        add r12, r1\n        add r2, #0x1\n        cmp r2, #0x15\n        ble _code0_13\n        lsl r0, r7, #0x8\n        mov r2, r8\n        ldrh r1, [r2, #0x1e]\n        lsr r1, #0x4\n        sub r1, #0x1\n        ldrh r2, [r2, #0x18]\n        lsr r2, #0x2\n        sub r1, r2\n        lsl r1, #0x1\n        add r0, r1\n        lsl r0, #0x1\n        add r6, r0\n        mov r1, #0x80\n        lsl r1, #0x1\n        mov r2, #0x15\n_code0_15:\n        ldrh r0, [r6]\n        strh r0, [r5]\n        ldrh r0, [r6, #0x2]\n        strh r0, [r5, #0x2]\n        add r5, #0x40\n        add r6, r1\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_15\n_code0_16:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}",
      "score": "258",
      "id": 38
    },
    {
      "name": "sub_0807D46C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"entity.h\"\n#include \"save.h\"\n\n// these three functions use gRoomControls, maybe once that is understood better, these can be decompiled easier\n// end of existing headers\n\nvoid sub_0807D46C(u32 unk_1, u32 unk_2) {\n\n}",
      "asmCode": "thumb_func_start sub_0807D46C\nsub_0807D46C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x8\n        str r0, [sp]\n        str r1, [sp, #0x4]\n        ldr r0, _data0_0\n        ldrb r2, [r0, #0x10]\n        mov r9, r0\n        cmp r2, #0x1\n        bne _code0_0\n        b _code0_18\n_code0_0:\n        cmp r2, #0x1\n        bgt _code0_1\n        cmp r2, #0x0\n        beq _code0_3\n        b _code0_30\n_data0_0:\n        .4byte gRoomControls\n_code0_1:\n        cmp r2, #0x2\n        beq _code0_3\n        cmp r2, #0x3\n        bne _code0_2\n        b _code0_18\n_code0_2:\n        b _code0_30\n_code0_3:\n        mov r1, r9\n        mov r2, #0xa\n        ldrsh r0, [r1, r2]\n        ldrh r1, [r1, #0x6]\n        sub r5, r0, r1\n        cmp r5, #0x7\n        ble _code0_4\n        sub r5, #0x8\n_code0_4:\n        mov r3, r9\n        ldr r0, [r3, #0x30]\n        mov r2, #0x2e\n        ldrsh r0, [r0, r2]\n        sub r0, r1\n        sub r3, r0, #0x4\n        mov r8, r3\n        cmp r3, #0x7\n        ble _code0_5\n        sub r0, #0xc\n        mov r8, r0\n_code0_5:\n        mov r0, r9\n        mov r2, #0xc\n        ldrsh r1, [r0, r2]\n        ldrh r0, [r0, #0x8]\n        sub r1, r0\n        mov r12, r1\n        cmp r1, #0x7\n        ble _code0_6\n        mov r3, #0x8\n        neg r3, r3\n        add r12, r3\n_code0_6:\n        mov r1, r9\n        ldrh r0, [r1, #0x18]\n        lsl r0, #0x3\n        mov r2, r8\n        sub r0, r2, r0\n        mov r7, r5\n        add r7, #0xf8\n        cmp r0, r5\n        blt _code0_10\n        mov r1, r12\n        asr r3, r1, #0x3\n        lsl r1, r3, #0x8\n        ldr r2, [sp]\n        add r1, r2, r1\n        asr r0, #0x3\n        lsl r2, r0, #0x1\n        add r4, r1, r2\n        mov r1, #0x1f\n        and r0, r1\n        lsl r0, #0x1\n        ldr r2, [sp, #0x4]\n        add r6, r2, r0\n        and r3, r1\n        lsl r2, r3, #0x5\n        mov r3, r9\n        ldrh r0, [r3, #0x20]\n        lsl r1, r0, #0x10\n        lsr r0, r1, #0x10\n        cmp r0, #0xaf\n        bhi _code0_7\n        lsr r3, r1, #0x13\n        b _code0_8\n_code0_7:\n        mov r3, #0x16\n_code0_8:\n        mov r7, r5\n        add r7, #0xf8\n        cmp r3, #0x0\n        ble _code0_10\n        ldr r0, _data0_1\n        mov r10, r0\n_code0_9:\n        lsl r0, r2, #0x1\n        add r0, r6\n        ldrh r1, [r4]\n        strh r1, [r0]\n        mov r1, #0x80\n        lsl r1, #0x1\n        add r4, r1\n        add r2, #0x20\n        mov r0, r10\n        and r2, r0\n        sub r3, #0x1\n        cmp r3, #0x0\n        bgt _code0_9\n_code0_10:\n        mov r1, r9\n        ldrh r0, [r1, #0x18]\n        add r0, #0x1\n        lsl r0, #0x3\n        add r0, r8\n        ldrh r2, [r1, #0x1e]\n        cmp r7, r2\n        blt _code0_11\n        mov r1, r7\n        b _code0_12\n_data0_1:\n        .4byte 0x3ff\n_code0_11:\n        mov r3, #0x80\n        lsl r3, #0x1\n        add r1, r5, r3\n_code0_12:\n        cmp r0, r1\n        blt _code0_13\n        b _code0_30\n_code0_13:\n        mov r1, r12\n        asr r3, r1, #0x3\n        lsl r1, r3, #0x8\n        ldr r2, [sp]\n        add r1, r2, r1\n        asr r0, #0x3\n        lsl r2, r0, #0x1\n        add r4, r1, r2\n        mov r1, #0x1f\n        and r0, r1\n        lsl r0, #0x1\n        ldr r2, [sp, #0x4]\n        add r6, r2, r0\n        and r3, r1\n        lsl r2, r3, #0x5\n        mov r3, r9\n        ldrh r0, [r3, #0x20]\n        lsl r1, r0, #0x10\n        lsr r0, r1, #0x10\n        cmp r0, #0xaf\n        bhi _code0_14\n        lsr r3, r1, #0x13\n        b _code0_15\n_code0_14:\n        mov r3, #0x16\n_code0_15:\n        cmp r3, #0x0\n        bgt _code0_16\n        b _code0_30\n_code0_16:\n        mov r7, #0x80\n        lsl r7, #0x1\n        ldr r5, _data0_2\n_code0_17:\n        lsl r0, r2, #0x1\n        add r0, r6\n        ldrh r1, [r4]\n        strh r1, [r0]\n        add r4, r7\n        add r2, #0x20\n        and r2, r5\n        sub r3, #0x1\n        cmp r3, #0x0\n        bgt _code0_17\n        b _code0_30\n_data0_2:\n        .4byte 0x3ff\n_code0_18:\n        mov r1, r9\n        mov r2, #0xc\n        ldrsh r0, [r1, r2]\n        ldrh r2, [r1, #0x8]\n        sub r5, r0, r2\n        cmp r5, #0x7\n        ble _code0_19\n        sub r5, #0x8\n_code0_19:\n        mov r3, r9\n        mov r0, #0xa\n        ldrsh r1, [r3, r0]\n        ldrh r0, [r3, #0x6]\n        sub r1, r0\n        mov r8, r1\n        cmp r1, #0x7\n        ble _code0_20\n        mov r1, #0x8\n        neg r1, r1\n        add r8, r1\n_code0_20:\n        mov r3, r9\n        ldr r0, [r3, #0x30]\n        mov r1, #0x32\n        ldrsh r0, [r0, r1]\n        sub r0, r2\n        sub r2, r0, #0x4\n        mov r12, r2\n        cmp r2, #0x7\n        ble _code0_21\n        sub r0, #0xc\n        mov r12, r0\n_code0_21:\n        mov r3, r9\n        ldrh r0, [r3, #0x18]\n        lsl r0, #0x3\n        mov r1, r12\n        sub r0, r1, r0\n        mov r7, r5\n        add r7, #0xa8\n        mov r2, #0xb0\n        add r2, r5\n        mov r10, r2\n        cmp r0, r5\n        blt _code0_25\n        asr r2, r0, #0x3\n        lsl r0, r2, #0x8\n        ldr r3, [sp]\n        add r0, r3, r0\n        mov r1, r8\n        asr r3, r1, #0x3\n        lsl r1, r3, #0x1\n        add r4, r0, r1\n        mov r0, #0x1f\n        and r2, r0\n        lsl r2, #0x6\n        ldr r1, [sp, #0x4]\n        add r6, r1, r2\n        mov r2, r0\n        and r2, r3\n        mov r3, r9\n        ldrh r0, [r3, #0x1e]\n        lsl r1, r0, #0x10\n        lsr r0, r1, #0x10\n        cmp r0, #0xff\n        bhi _code0_22\n        lsr r3, r1, #0x13\n        b _code0_23\n_code0_22:\n        mov r3, #0x20\n_code0_23:\n        mov r7, r5\n        add r7, #0xa8\n        add r5, #0xb0\n        mov r10, r5\n        cmp r3, #0x0\n        ble _code0_25\n        mov r5, #0x1f\n_code0_24:\n        lsl r0, r2, #0x1\n        add r0, r6\n        ldrh r1, [r4]\n        strh r1, [r0]\n        add r4, #0x2\n        add r2, #0x1\n        and r2, r5\n        sub r3, #0x1\n        cmp r3, #0x0\n        bgt _code0_24\n_code0_25:\n        mov r1, r9\n        ldrh r0, [r1, #0x18]\n        add r0, #0x1\n        lsl r0, #0x3\n        add r0, r12\n        mov r2, r10\n        ldrh r1, [r1, #0x20]\n        cmp r7, r1\n        blt _code0_26\n        mov r2, r7\n_code0_26:\n        cmp r0, r2\n        bge _code0_30\n        asr r2, r0, #0x3\n        lsl r0, r2, #0x8\n        ldr r1, [sp]\n        add r0, r1, r0\n        mov r1, r8\n        asr r3, r1, #0x3\n        lsl r1, r3, #0x1\n        add r4, r0, r1\n        mov r0, #0x1f\n        and r2, r0\n        lsl r2, #0x6\n        ldr r1, [sp, #0x4]\n        add r6, r1, r2\n        mov r2, r0\n        and r2, r3\n        mov r3, r9\n        ldrh r0, [r3, #0x1e]\n        lsl r1, r0, #0x10\n        lsr r0, r1, #0x10\n        cmp r0, #0xff\n        bhi _code0_27\n        lsr r3, r1, #0x13\n        b _code0_28\n_code0_27:\n        mov r3, #0x20\n_code0_28:\n        cmp r3, #0x0\n        ble _code0_30\n        mov r5, #0x1f\n_code0_29:\n        lsl r0, r2, #0x1\n        add r0, r6\n        ldrh r1, [r4]\n        strh r1, [r0]\n        add r4, #0x2\n        add r2, #0x1\n        and r2, r5\n        sub r3, #0x1\n        cmp r3, #0x0\n        bgt _code0_29\n_code0_30:\n        add sp, #0x8\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}",
      "score": "341",
      "id": 39
    },
    {
      "name": "sub_0807D6D8",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"entity.h\"\n#include \"save.h\"\n\n// these three functions use gRoomControls, maybe once that is understood better, these can be decompiled easier\n// end of existing headers\n\nvoid sub_0807D6D8(u32 unk_1, u32 unk_2) {\n\n}",
      "asmCode": "thumb_func_start sub_0807D6D8\nsub_0807D6D8:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x44\n        str r0, [sp]\n        str r1, [sp, #0x4]\n        ldr r5, _data0_0\n        ldrh r0, [r5, #0x18]\n        cmp r0, #0x0\n        bne _code0_0\n        b _code0_19\n_code0_0:\n        ldrh r0, [r5, #0x1a]\n        cmp r0, #0x0\n        bne _code0_1\n        b _code0_19\n_code0_1:\n        mov r1, #0xa\n        ldrsh r0, [r5, r1]\n        ldrh r1, [r5, #0x6]\n        sub r0, r1\n        mov r4, #0x10\n        neg r4, r4\n        and r0, r4\n        str r0, [sp, #0x24]\n        ldr r3, [r5, #0x30]\n        mov r2, #0x2e\n        ldrsh r0, [r3, r2]\n        sub r0, r1\n        mov r2, #0x8\n        neg r2, r2\n        and r0, r2\n        str r0, [sp, #0x14]\n        ldr r1, [sp, #0x24]\n        sub r0, r1\n        str r0, [sp, #0x1c]\n        mov r1, #0xc\n        ldrsh r0, [r5, r1]\n        ldrh r1, [r5, #0x8]\n        sub r0, r1\n        and r0, r4\n        str r0, [sp, #0x28]\n        mov r4, #0x32\n        ldrsh r0, [r3, r4]\n        sub r0, r1\n        and r0, r2\n        str r0, [sp, #0x18]\n        ldr r1, [sp, #0x28]\n        sub r0, r1\n        str r0, [sp, #0x20]\n        ldrh r0, [r5, #0x18]\n        mov r2, r0\n        mul r2, r0\n        str r2, [sp, #0xc]\n        ldrh r3, [r5, #0x1a]\n        str r3, [sp, #0x8]\n        mov r4, r3\n        mul r4, r3\n        str r4, [sp, #0x10]\n        mov r4, r0\n        mov r0, #0x0\n        mov r9, r0\n        lsl r0, r4, #0x1\n        neg r0, r0\n        add r0, #0x1\n        ldr r1, [sp, #0x10]\n        mul r0, r1\n        lsl r6, r2, #0x1\n        add r7, r0, r6\n        mov r2, r4\n        mul r2, r1\n        mov r8, r2\n        mov r0, r8\n        ldr r1, [sp, #0xc]\n        bl __divsi3\n        mov r12, r0\n        cmp r9, r12\n        ble _code0_2\n        b _code0_10\n_code0_2:\n        mov r10, r5\n        ldr r3, [sp, #0xc]\n        add r0, r6, r3\n        lsl r0, #0x1\n        str r0, [sp, #0x3c]\n        mov r0, r8\n        str r0, [sp, #0x40]\n        ldr r1, [sp, #0x14]\n        sub r1, r4\n        mov r8, r1\n        ldr r2, [sp, #0x14]\n        add r6, r4, r2\n        mov r0, #0x80\n        lsl r0, #0x1\n        ldr r3, [sp, #0x24]\n        add r0, r3, r0\n        str r0, [sp, #0x2c]\n_code0_3:\n        ldr r0, [sp, #0x28]\n        add r0, #0xb0\n        ldr r1, [sp, #0x18]\n        add r1, r9\n        cmp r0, r1\n        ble _code0_5\n        ldr r0, [sp, #0x20]\n        add r0, r9\n        asr r0, #0x3\n        mov r5, #0x1f\n        and r0, r5\n        cmp r0, #0x1f\n        beq _code0_5\n        lsl r0, #0x6\n        ldr r3, [sp, #0x4]\n        add r2, r3, r0\n        asr r0, r1, #0x3\n        lsl r0, #0x8\n        ldr r1, [sp]\n        add r3, r1, r0\n        ldr r0, [sp, #0x2c]\n        cmp r0, r6\n        ble _code0_4\n        ldr r0, [sp, #0x1c]\n        add r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        asr r0, r6, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r1, r10\n        ldrh r0, [r1, #0x1c]\n        mov r1, #0x1\n        orr r0, r1\n        mov r1, r10\n        strh r0, [r1, #0x1c]\n_code0_4:\n        ldr r0, [sp, #0x24]\n        cmp r0, r8\n        bge _code0_5\n        ldr r0, [sp, #0x1c]\n        sub r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        mov r2, r8\n        asr r0, r2, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r3, r10\n        ldrh r0, [r3, #0x1c]\n        mov r1, #0x2\n        orr r0, r1\n        strh r0, [r3, #0x1c]\n_code0_5:\n        ldr r0, [sp, #0x18]\n        mov r2, r9\n        sub r1, r0, r2\n        mov r0, r1\n        add r0, #0x8\n        ldr r3, [sp, #0x28]\n        cmp r3, r0\n        bge _code0_7\n        ldr r3, [sp, #0x20]\n        sub r0, r3, r2\n        asr r0, #0x3\n        mov r5, #0x1f\n        and r0, r5\n        cmp r0, #0x1f\n        beq _code0_7\n        lsl r0, #0x6\n        ldr r3, [sp, #0x4]\n        add r2, r3, r0\n        asr r0, r1, #0x3\n        lsl r0, #0x8\n        ldr r1, [sp]\n        add r3, r1, r0\n        ldr r0, [sp, #0x2c]\n        cmp r0, r6\n        ble _code0_6\n        ldr r0, [sp, #0x1c]\n        add r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        asr r0, r6, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r1, r10\n        ldrh r0, [r1, #0x1c]\n        mov r1, #0x4\n        orr r0, r1\n        mov r1, r10\n        strh r0, [r1, #0x1c]\n_code0_6:\n        ldr r0, [sp, #0x24]\n        cmp r0, r8\n        bge _code0_7\n        ldr r0, [sp, #0x1c]\n        sub r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        mov r2, r8\n        asr r0, r2, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r3, r10\n        ldrh r0, [r3, #0x1c]\n        mov r1, #0x8\n        orr r0, r1\n        strh r0, [r3, #0x1c]\n_code0_7:\n        cmp r7, #0x0\n        ble _code0_8\n        lsl r0, r4, #0x2\n        neg r0, r0\n        add r0, #0x4\n        ldr r1, [sp, #0x10]\n        mul r0, r1\n        ldr r2, [sp, #0x3c]\n        add r0, r2\n        add r7, r0\n        ldr r3, [sp, #0x40]\n        sub r3, r1\n        str r3, [sp, #0x40]\n        mov r0, #0x1\n        add r8, r0\n        sub r6, #0x1\n        sub r4, #0x1\n        mov r0, r3\n        ldr r1, [sp, #0xc]\n        bl __divsi3\n        mov r12, r0\n        b _code0_9\n_data0_0:\n        .4byte gRoomControls\n_code0_8:\n        ldr r1, [sp, #0x3c]\n        add r7, r1\n_code0_9:\n        ldr r2, [sp, #0xc]\n        lsl r0, r2, #0x2\n        ldr r3, [sp, #0x3c]\n        add r3, r0\n        str r3, [sp, #0x3c]\n        mov r0, #0x1\n        add r9, r0\n        cmp r9, r12\n        bgt _code0_10\n        b _code0_3\n_code0_10:\n        mov r4, #0x0\n        ldr r1, [sp, #0x8]\n        mov r9, r1\n        ldr r2, [sp, #0x10]\n        lsl r6, r2, #0x1\n        lsl r0, r1, #0x1\n        neg r0, r0\n        add r0, #0x1\n        ldr r3, [sp, #0xc]\n        mul r0, r3\n        add r7, r6, r0\n        mov r5, r9\n        mul r5, r3\n        mov r0, r5\n        mov r1, r2\n        bl __divsi3\n        mov r12, r0\n        cmp r4, r12\n        ble _code0_11\n        b _code0_19\n_code0_11:\n        ldr r0, _data0_1\n        mov r10, r0\n        ldr r1, [sp, #0x10]\n        add r0, r6, r1\n        lsl r0, #0x1\n        str r0, [sp, #0x34]\n        ldr r6, [sp, #0x14]\n        mov r8, r6\n        str r5, [sp, #0x38]\n        mov r3, #0x80\n        lsl r3, #0x1\n        ldr r2, [sp, #0x24]\n        add r3, r2, r3\n        str r3, [sp, #0x30]\n_code0_12:\n        ldr r0, [sp, #0x28]\n        add r0, #0xb0\n        ldr r1, [sp, #0x18]\n        add r1, r9\n        cmp r0, r1\n        ble _code0_14\n        ldr r0, [sp, #0x20]\n        add r0, r9\n        asr r0, #0x3\n        mov r5, #0x1f\n        and r0, r5\n        cmp r0, #0x1f\n        beq _code0_14\n        lsl r0, #0x6\n        ldr r3, [sp, #0x4]\n        add r2, r3, r0\n        asr r0, r1, #0x3\n        lsl r0, #0x8\n        ldr r1, [sp]\n        add r3, r1, r0\n        ldr r0, [sp, #0x30]\n        cmp r0, r6\n        ble _code0_13\n        ldr r0, [sp, #0x1c]\n        add r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        asr r0, r6, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r1, r10\n        ldrh r0, [r1, #0x1c]\n        mov r1, #0x10\n        orr r0, r1\n        mov r1, r10\n        strh r0, [r1, #0x1c]\n_code0_13:\n        ldr r0, [sp, #0x24]\n        cmp r0, r8\n        bge _code0_14\n        ldr r0, [sp, #0x1c]\n        sub r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        mov r2, r8\n        asr r0, r2, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r3, r10\n        ldrh r0, [r3, #0x1c]\n        mov r1, #0x20\n        orr r0, r1\n        strh r0, [r3, #0x1c]\n_code0_14:\n        ldr r0, [sp, #0x18]\n        mov r2, r9\n        sub r1, r0, r2\n        mov r0, r1\n        add r0, #0x8\n        ldr r3, [sp, #0x28]\n        cmp r3, r0\n        bge _code0_16\n        ldr r3, [sp, #0x20]\n        sub r0, r3, r2\n        asr r0, #0x3\n        mov r5, #0x1f\n        and r0, r5\n        cmp r0, #0x1f\n        beq _code0_16\n        lsl r0, #0x6\n        ldr r3, [sp, #0x4]\n        add r2, r3, r0\n        asr r0, r1, #0x3\n        lsl r0, #0x8\n        ldr r1, [sp]\n        add r3, r1, r0\n        ldr r0, [sp, #0x30]\n        cmp r0, r6\n        ble _code0_15\n        ldr r0, [sp, #0x1c]\n        add r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        asr r0, r6, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r1, r10\n        ldrh r0, [r1, #0x1c]\n        mov r1, #0x40\n        orr r0, r1\n        mov r1, r10\n        strh r0, [r1, #0x1c]\n_code0_15:\n        ldr r0, [sp, #0x24]\n        cmp r0, r8\n        bge _code0_16\n        ldr r0, [sp, #0x1c]\n        sub r1, r0, r4\n        asr r1, #0x3\n        and r1, r5\n        lsl r1, #0x1\n        add r1, r2\n        mov r2, r8\n        asr r0, r2, #0x3\n        lsl r0, #0x1\n        add r0, r3\n        ldrh r0, [r0]\n        strh r0, [r1]\n        mov r3, r10\n        ldrh r0, [r3, #0x1c]\n        mov r1, #0x80\n        orr r0, r1\n        strh r0, [r3, #0x1c]\n_code0_16:\n        cmp r7, #0x0\n        ble _code0_17\n        mov r1, r9\n        lsl r0, r1, #0x2\n        neg r0, r0\n        add r0, #0x4\n        ldr r2, [sp, #0xc]\n        mul r0, r2\n        ldr r3, [sp, #0x34]\n        add r0, r3, r0\n        add r7, r0\n        ldr r0, [sp, #0x38]\n        sub r0, r2\n        str r0, [sp, #0x38]\n        mov r1, #0x1\n        neg r1, r1\n        add r9, r1\n        ldr r1, [sp, #0x10]\n        bl __divsi3\n        mov r12, r0\n        b _code0_18\n_data0_1:\n        .4byte gRoomControls\n_code0_17:\n        ldr r2, [sp, #0x34]\n        add r7, r2\n_code0_18:\n        ldr r3, [sp, #0x10]\n        lsl r0, r3, #0x2\n        ldr r1, [sp, #0x34]\n        add r1, r0\n        str r1, [sp, #0x34]\n        mov r2, #0x1\n        neg r2, r2\n        add r8, r2\n        add r6, #0x1\n        add r4, #0x1\n        cmp r4, r12\n        bgt _code0_19\n        b _code0_12\n_code0_19:\n        add sp, #0x44\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}",
      "score": "476",
      "id": 40
    },
    {
      "name": "sub_0806E564",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"audio.h\"\n#include \"random.h\"\n\nextern void (*const gUnk_081145B4[])(Entity*);\n\nvoid sub_0806E4EC(Entity*);\n\nvoid sub_0806E6A8(Entity*);\n\nextern u16 gUnk_081145C8[];\nvoid sub_0806E65C(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806E564(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806E564\nsub_0806E564:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x0\n        bne _code0_1\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        bl Random\n        mov r2, #0x1\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_0\n        ldrb r0, [r4, #0x18]\n        lsl r1, r0, #0x19\n        lsr r1, #0x1f\n        eor r1, r2\n        lsl r1, #0x6\n        sub r2, #0x42\n        and r2, r0\n        orr r2, r1\n        strb r2, [r4, #0x18]\n_code0_0:\n        bl Random\n        mov r1, #0x1\n        and r0, r1\n        add r0, #0x1\n        strb r0, [r4, #0xe]\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r4, #0x20]\n        mov r0, r4\n        mov r1, #0x1\n        bl InitAnimationForceUpdate\n_code0_1:\n        mov r1, #0xa0\n        lsl r1, #0x6\n        mov r0, r4\n        bl sub_08003FC4\n        cmp r0, #0x0\n        bne _code0_3\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        lsr r1, r0, #0x18\n        cmp r1, #0x0\n        bne _code0_2\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        strb r1, [r4, #0xd]\n        b _code0_3\n_code0_2:\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r4, #0x20]\n_code0_3:\n        mov r0, r4\n        bl sub_0806E65C\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        pop {r4, pc}",
      "score": "63",
      "id": 41
    },
    {
      "name": "sub_0806E5E4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"audio.h\"\n#include \"random.h\"\n\nextern void (*const gUnk_081145B4[])(Entity*);\n\nvoid sub_0806E4EC(Entity*);\n\nvoid sub_0806E6A8(Entity*);\n\nextern u16 gUnk_081145C8[];\nvoid sub_0806E65C(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806E5E4(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806E5E4\nsub_0806E5E4:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x0\n        bne _code0_1\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        bl Random\n        mov r5, #0x1\n        and r0, r5\n        cmp r0, #0x0\n        beq _code0_0\n        ldrb r0, [r4, #0x18]\n        lsl r1, r0, #0x19\n        lsr r1, #0x1f\n        eor r1, r5\n        lsl r1, #0x6\n        mov r2, #0x41\n        neg r2, r2\n        and r2, r0\n        orr r2, r1\n        strb r2, [r4, #0x18]\n_code0_0:\n        bl Random\n        mov r1, r0\n        and r1, r5\n        add r1, #0x2\n        mov r0, r4\n        bl InitAnimationForceUpdate\n_code0_1:\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_2\n        mov r1, #0x0\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        strb r1, [r4, #0xd]\n_code0_2:\n        mov r0, r4\n        bl sub_0806E65C\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        pop {r4, r5, pc}",
      "score": "49",
      "id": 42
    },
    {
      "name": "sub_0806E6A8",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"audio.h\"\n#include \"random.h\"\n\nextern void (*const gUnk_081145B4[])(Entity*);\n\nvoid sub_0806E4EC(Entity*);\n\nvoid sub_0806E6A8(Entity*);\n\nextern u16 gUnk_081145C8[];\nvoid sub_0806E65C(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806E6A8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806E6A8\nsub_0806E6A8:\n        push {r4, r5, lr}\n        mov r4, r0\n        mov r5, #0x0\n        bl sub_08002632\n        ldr r1, _data0_0\n        ldr r2, _data0_0+0x4\n        add r1, r2\n        add r0, r1\n        ldrb r0, [r0]\n        cmp r0, #0xf3\n        bne _code0_0\n        mov r5, #0x1\n_code0_0:\n        ldr r0, _data0_0+0x8\n        lsl r1, r5, #0x1\n        add r1, r0\n        ldrh r0, [r1]\n        mov r1, r4\n        bl TextboxNoOverlap\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gSave\n        .4byte 0x1c1\n        .4byte gUnk_081145D0",
      "score": "26",
      "id": 43
    },
    {
      "name": "sub_0806E7B0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"audio.h\"\n\nextern void (*const gUnk_081145D4[])(Entity*);\n\nvoid sub_0806E764(Entity*);\n\nvoid sub_0806E838(Entity* this);\n\nvoid sub_0806E884(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806E7B0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806E7B0\nsub_0806E7B0:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x0\n        bne _code0_1\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        bl Random\n        mov r5, #0x1\n        and r0, r5\n        cmp r0, #0x0\n        beq _code0_0\n        ldrb r0, [r4, #0x18]\n        lsl r1, r0, #0x19\n        lsr r1, #0x1f\n        eor r1, r5\n        lsl r1, #0x6\n        mov r2, #0x41\n        neg r2, r2\n        and r2, r0\n        orr r2, r1\n        strb r2, [r4, #0x18]\n_code0_0:\n        bl Random\n        mov r1, #0x3\n        and r0, r1\n        add r0, #0x1\n        strb r0, [r4, #0xe]\n        mov r0, #0x80\n        lsl r0, #0x9\n        str r0, [r4, #0x20]\n        strb r5, [r4, #0x1e]\n_code0_1:\n        mov r1, #0xc0\n        lsl r1, #0x6\n        mov r0, r4\n        bl sub_08003FC4\n        cmp r0, #0x0\n        bne _code0_3\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        lsr r1, r0, #0x18\n        cmp r1, #0x0\n        bne _code0_2\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        strb r1, [r4, #0xd]\n        b _code0_3\n_code0_2:\n        mov r0, #0x80\n        lsl r0, #0x9\n        str r0, [r4, #0x20]\n_code0_3:\n        mov r0, r4\n        bl sub_0806E838\n        pop {r4, r5, pc}",
      "score": "60",
      "id": 44
    },
    {
      "name": "sub_080A2FD0",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"functions.h\"\n#include \"main.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n#include \"fileScreen.h\"\n#include \"screen.h\"\n\nextern void (*const demoFunctions[])(void);\nvoid sub_080A30AC();\n\nextern u8 gUnk_02000004;\nvoid sub_080A3198(u32, u32);\n\nextern u8 gUnk_02017760[];\nextern u8 gUnk_08A05751[];\n\n// sprite_table\nextern void gUnk_089FD1B4;\nextern void gUnk_089FD2F4;\n\nextern u8 gUnk_02000006;\n\n// end of existing headers\n\nvoid sub_080A2FD0(void) {\n\n}",
      "asmCode": "thumb_func_start sub_080A2FD0\nsub_080A2FD0:\n        push {r4, r5, lr}\n        ldr r0, _data0_0\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_7\n        mov r5, #0x0\n        ldr r0, _data0_0+0x4\n        ldrh r0, [r0]\n        cmp r0, #0x10\n        beq _code0_1\n        cmp r0, #0x10\n        bgt _code0_0\n        cmp r0, #0x1\n        beq _code0_3\n        cmp r0, #0x8\n        beq _code0_3\n        b _code0_4\n_data0_0:\n        .4byte gFadeControl\n        .4byte gInput\n_code0_0:\n        cmp r0, #0x40\n        beq _code0_4\n        cmp r0, #0x40\n        bgt _code0_4\n        cmp r0, #0x20\n        bne _code0_4\n        ldr r1, _data0_1\n        ldrb r0, [r1]\n        cmp r0, #0x0\n        bne _code0_4\n        mov r5, #0x1\n        neg r5, r5\n        add r1, #0x20\n        mov r0, #0xfc\n        b _code0_2\n_data0_1:\n        .4byte gChooseFileState\n_code0_1:\n        ldr r1, _data0_2\n        ldrb r0, [r1]\n        cmp r0, #0x0\n        bne _code0_4\n        mov r5, #0x1\n        add r1, #0x20\n        mov r0, #0x4\n_code0_2:\n        strb r0, [r1]\n        mov r0, #0x69\n        bl SoundReq\n        b _code0_4\n_data0_2:\n        .4byte gChooseFileState\n_code0_3:\n        ldr r0, _data0_3\n        ldrb r2, [r0]\n        cmp r2, #0x0\n        bne _code0_4\n        ldr r1, _data0_3+0x4\n        mov r0, #0x2\n        strb r0, [r1, #0x3]\n        strb r2, [r1, #0x4]\n        mov r0, #0x6a\n        bl SoundReq\n_code0_4:\n        mov r4, #0x80\n        lsl r4, #0x12\n        ldrb r0, [r4, #0x4]\n        add r1, r5, #0x3\n        add r0, r1\n        mov r1, #0x3\n        bl __modsi3\n        strb r0, [r4, #0x4]\n        ldr r5, _data0_3\n        mov r0, #0x10\n        ldrsh r2, [r5, r0]\n        ldrb r1, [r4, #0x4]\n        mov r0, #0x68\n        mul r0, r1\n        cmp r0, r2\n        beq _code0_5\n        mov r0, r5\n        add r0, #0x20\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        add r0, r2, r0\n        mov r1, #0x9c\n        lsl r1, #0x1\n        add r0, r1\n        bl __modsi3\n        strh r0, [r5, #0x10]\n        mov r0, #0x1\n        b _code0_6\n_data0_3:\n        .4byte gChooseFileState\n        .4byte gMain\n_code0_5:\n        mov r0, #0x0\n_code0_6:\n        strb r0, [r5]\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x4]\n        mov r1, #0x0\n        bl sub_080A3198\n_code0_7:\n        pop {r4, r5, pc}",
      "score": "110",
      "id": 46
    },
    {
      "name": "sub_080A30AC",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"functions.h\"\n#include \"main.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n#include \"fileScreen.h\"\n#include \"screen.h\"\n\nextern void (*const demoFunctions[])(void);\nvoid sub_080A30AC();\n\nextern u8 gUnk_02000004;\nvoid sub_080A3198(u32, u32);\n\nextern u8 gUnk_02017760[];\nextern u8 gUnk_08A05751[];\n\n// sprite_table\nextern void gUnk_089FD1B4;\nextern void gUnk_089FD2F4;\n\nextern u8 gUnk_02000006;\n\n// end of existing headers\n\nvoid sub_080A30AC(void) {\n\n}",
      "asmCode": "thumb_func_start sub_080A30AC\nsub_080A30AC:\n        push {r4, r5, r6, lr}\n        mov r6, r8\n        push {r6}\n        ldr r4, _data0_0\n        mov r1, #0x0\n        mov r0, #0x80\n        lsl r0, #0x6\n        strh r0, [r4, #0x4]\n        strh r1, [r4, #0x6]\n        mov r0, #0xc0\n        lsl r0, #0x4\n        strh r0, [r4, #0x8]\n        mov r0, #0x40\n        strh r0, [r4, #0x2]\n        ldr r0, _data0_0+0x4\n        mov r1, #0x10\n        ldrsh r6, [r0, r1]\n        ldr r1, _data0_0+0x8\n        mov r0, r1\n        sub r0, r6\n        strh r0, [r4]\n        ldr r0, _data0_0+0xc\n        mov r8, r0\n        ldr r1, [r0]\n        mov r5, r8\n        sub r5, #0xc\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r1, #0xc0\n        neg r1, r1\n        mov r0, r1\n        sub r0, r6\n        strh r0, [r4]\n        ldr r1, [r5, #0x4]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r1, #0x58\n        neg r1, r1\n        mov r0, r1\n        sub r0, r6\n        strh r0, [r4]\n        ldr r1, [r5, #0x8]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r0, #0x10\n        sub r0, r6\n        strh r0, [r4]\n        mov r0, r8\n        ldr r1, [r0]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r0, #0x78\n        sub r0, r6\n        strh r0, [r4]\n        ldr r1, [r5, #0x4]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r0, #0xe0\n        sub r0, r6\n        strh r0, [r4]\n        ldr r1, [r5, #0x8]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r1, #0xa4\n        lsl r1, #0x1\n        mov r0, r1\n        sub r0, r6\n        strh r0, [r4]\n        mov r0, r8\n        ldr r1, [r0]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r1, #0xd8\n        lsl r1, #0x1\n        mov r0, r1\n        sub r0, r6\n        strh r0, [r4]\n        ldr r1, [r5, #0x4]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        mov r1, #0x86\n        lsl r1, #0x2\n        mov r0, r1\n        sub r0, r6\n        strh r0, [r4]\n        ldr r1, [r5, #0x8]\n        add r1, r5\n        mov r0, r4\n        bl sub_080ADA04\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gOamCmd\n        .4byte gChooseFileState\n        .4byte 0xfffffed8\n        .4byte gUnk_08A068BF",
      "score": "107",
      "id": 47
    },
    {
      "name": "sub_080A3198",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"functions.h\"\n#include \"main.h\"\n#include \"utils.h\"\n#include \"textbox.h\"\n#include \"fileScreen.h\"\n#include \"screen.h\"\n\nextern void (*const demoFunctions[])(void);\nvoid sub_080A30AC();\n\nextern u8 gUnk_02000004;\nvoid sub_080A3198(u32, u32);\n\nextern u8 gUnk_02017760[];\nextern u8 gUnk_08A05751[];\n\n// sprite_table\nextern void gUnk_089FD1B4;\nextern void gUnk_089FD2F4;\n\nextern u8 gUnk_02000006;\n\n// end of existing headers\n\nvoid sub_080A3198(u32 param_1, u32 param_2) {\n\n}",
      "asmCode": "thumb_func_start sub_080A3198\nsub_080A3198:\n        push {r4, r5, lr}\n        ldr r1, _data0_0\n        lsl r0, #0x1\n        add r0, r1\n        ldrh r4, [r0]\n        ldr r1, _data0_0+0x4\n        ldrh r0, [r1, #0x12]\n        cmp r0, r4\n        beq _code0_1\n        strh r4, [r1, #0x12]\n        ldr r5, _data0_0+0x8\n        ldr r0, [r5]\n        sub r0, #0x1e\n        mov r1, #0xc0\n        lsl r1, #0x1\n        bl MemClear\n        cmp r4, #0x0\n        beq _code0_0\n        mov r0, r4\n        mov r1, r5\n        bl sub_0805F46C\n_code0_0:\n        ldr r1, _data0_0+0xc\n        mov r0, #0x1\n        strh r0, [r1, #0xe]\n_code0_1:\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gUnk_08127CC8\n        .4byte gChooseFileState\n        .4byte gUnk_08127C98\n        .4byte gScreen",
      "score": "34",
      "id": 48
    },
    {
      "name": "HandlePlayerLife",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"manager.h\"\n#include \"utils.h\"\n#include \"npc.h\"\n\nextern u8 gUnk_03003DE0;\nextern u8 gUnk_03000C30;\n\nextern u16* gUnk_02025EB0;\nextern u16* gUnk_0200B650;\nextern u8 gUnk_02000070;\nextern u8 gUnk_03003DF0[];\nextern u8 gUnk_03003BE0;\nextern Entity* gUnk_03004040[3];\nextern u8 gUnk_020342F8;\nextern u8 gHitboxCount;\nextern void gDoCollision(void);\n\nextern void sub_080ADD70();\nextern void sub_0801C25C();\nextern void UpdateDisplayControls();\nextern void LoadResources();\nextern void FadeMain();\nextern u32 sub_0805E3B0();\nextern void HandlePlayerLife();\nextern void DoPlayerAction();\nextern void sub_080171F0();\nextern void sub_08078FB0();\nextern void DrawEntity();\nextern void sub_0807A050();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void CreateSparkle();\nextern void sub_080028E0(Entity*);\nextern void sub_08078180(void);\nextern void sub_0807B0C8(void);\nextern void sub_0807A8D8(Entity*);\nextern void sub_08077FEC(u32);\nextern void ItemInit(Entity*);\nextern void sub_080A2838(Entity*);\nextern u32 ReadBit(void*, u32);\nextern void sub_0806EC78(Entity*);\n\ntypedef struct {\n    u8 unk0;\n    u8 unk1;\n    u8 unk2;\n    u8 unk3;\n    u8 unk4;\n    u8 unk5;\n    u16 unk6;\n} ItemFrame;\nextern ItemFrame gUnk_08126DA8[];\nextern ItemFrame* gUnk_08126ED8[3];\n\ntypedef struct {\n    u16 unk0;\n    u16 unk1;\n    u16 x;\n    u16 y;\n} NPCStruct;\nextern NPCStruct gUnk_02031EC0[100];\n\ntypedef struct {\n    void* last;\n    void* first;\n    void* node;\n    u8 flags;\n} LinkedList2;\n\nextern LinkedList2 gUnk_03003C70[16];\nextern LinkedList2* gUnk_02018EA0;\n\n// Load any resources that were requested with LoadResourceAsync\n// end of existing headers\n\nvoid HandlePlayerLife(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start HandlePlayerLife\nHandlePlayerLife:\n        push {r4, r5, lr}\n        mov r5, r0\n        ldr r0, _data0_0\n        mov r2, r0\n        add r2, #0x2f\n        mov r1, #0x0\n        strb r1, [r2]\n        sub r2, #0x2\n        strb r1, [r2]\n        add r0, #0x2e\n        strb r1, [r0]\n        ldr r2, _data0_0+0x4\n        mov r0, r2\n        add r0, #0x41\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r2\n        add r0, #0x3d\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        cmp r0, #0x0\n        ble _code0_0\n        mov r0, #0x86\n        bl SoundReq\n_code0_0:\n        ldr r4, _data0_0+0x8\n        ldr r0, [r4, #0x30]\n        ldr r1, _data0_0+0xc\n        and r0, r1\n        str r0, [r4, #0x30]\n        mov r1, #0x80\n        lsl r1, #0x3\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_1\n        bl ResetPlayer\n_code0_1:\n        ldr r0, [r4, #0x30]\n        mov r1, #0x80\n        lsl r1, #0xf\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, r4\n        add r0, #0xa0\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_2\n        bl sub_0807A108\n_code0_2:\n        bl sub_08079B24\n        cmp r0, #0x0\n        bne _code0_3\n        mov r0, r5\n        bl sub_08079708\n_code0_3:\n        ldr r0, _data0_0+0x10\n        mov r4, #0x0\n        strb r4, [r0]\n        ldr r2, _data0_0+0x8\n        mov r1, r2\n        add r1, #0x27\n        ldrb r0, [r1]\n        cmp r0, #0x0\n        beq _code0_4\n        sub r0, #0x1\n        strb r0, [r1]\n_code0_4:\n        mov r1, r2\n        add r1, #0xa8\n        ldrb r0, [r1]\n        mov r3, r2\n        add r3, #0xa9\n        strb r0, [r3]\n        strb r4, [r1]\n        sub r1, #0x1e\n        ldrb r0, [r1]\n        cmp r0, #0x0\n        beq _code0_5\n        sub r0, #0x1\n        strb r0, [r1]\n        b _code0_21\n_data0_0:\n        .4byte gUnk_0200AF00\n        .4byte gPlayerEntity\n        .4byte gPlayerState\n        .4byte 0xfdfffdff\n        .4byte gUnk_03003DF0\n_code0_5:\n        mov r0, r2\n        add r0, #0x8b\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_6\n        b _code0_21\n_code0_6:\n        ldr r0, _data0_1\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_7\n        b _code0_21\n_code0_7:\n        ldr r0, _data0_1+0x4\n        ldrb r0, [r0, #0x1]\n        cmp r0, #0x0\n        bne _code0_10\n        ldr r0, _data0_1+0x8\n        ldr r0, [r0]\n        mov r1, #0x5a\n        bl __modsi3\n        cmp r0, #0x0\n        bne _code0_10\n        ldr r2, _data0_1+0xc\n        mov r0, r2\n        add r0, #0xab\n        ldrb r0, [r0]\n        lsr r1, r0, #0x2\n        cmp r1, #0x18\n        bls _code0_8\n        mov r1, #0x18\n_code0_8:\n        cmp r1, #0x7\n        bhi _code0_9\n        mov r1, #0x8\n_code0_9:\n        mov r0, r2\n        add r0, #0xaa\n        ldrb r0, [r0]\n        cmp r0, r1\n        bhi _code0_10\n        ldr r0, _data0_1+0x10\n        bl EnqueueSFX\n_code0_10:\n        ldr r0, _data0_1+0xc\n        mov r2, r0\n        add r2, #0xb2\n        ldrb r1, [r2]\n        cmp r1, #0x0\n        bne _code0_11\n        add r0, #0xc4\n        strh r1, [r0]\n        b _code0_13\n_data0_1:\n        .4byte gTextBox\n        .4byte gUnk_0200AF00\n        .4byte gScreenTransition\n        .4byte gSave\n        .4byte 0x11f\n_code0_11:\n        mov r1, r0\n        add r1, #0xc4\n        ldrh r0, [r1]\n        cmp r0, #0x0\n        beq _code0_12\n        sub r0, #0x1\n        strh r0, [r1]\n        lsl r0, #0x10\n        cmp r0, #0x0\n        bne _code0_13\n_code0_12:\n        mov r0, #0x0\n        strb r0, [r2]\n        ldr r0, _data0_2\n        bl SoundReq\n_code0_13:\n        ldr r0, _data0_2+0x4\n        mov r3, r0\n        add r3, #0xb3\n        ldrb r1, [r3]\n        cmp r1, #0x0\n        bne _code0_14\n        add r0, #0xc6\n        strh r1, [r0]\n        b _code0_17\n_data0_2:\n        .4byte 0x1b3\n        .4byte gSave\n_code0_14:\n        mov r2, r0\n        add r2, #0xc6\n        ldrh r0, [r2]\n        cmp r0, #0x0\n        beq _code0_15\n        sub r1, r0, #0x1\n        strh r1, [r2]\n        lsl r0, r1, #0x10\n        cmp r0, #0x0\n        bne _code0_16\n_code0_15:\n        mov r0, #0x0\n        strb r0, [r3]\n        mov r0, #0xa0\n        lsl r0, #0x1\n        bl SoundReq\n        b _code0_17\n_code0_16:\n        mov r0, #0xf\n        and r1, r0\n        cmp r1, #0x0\n        bne _code0_17\n        mov r0, r5\n        bl CreateSparkle\n_code0_17:\n        ldr r0, _data0_3\n        mov r3, r0\n        add r3, #0xba\n        ldrb r1, [r3]\n        cmp r1, #0x0\n        bne _code0_18\n        add r0, #0xc8\n        strh r1, [r0]\n        b _code0_21\n_data0_3:\n        .4byte gSave\n_code0_18:\n        mov r2, r0\n        add r2, #0xc8\n        ldrh r0, [r2]\n        cmp r0, #0x0\n        beq _code0_19\n        sub r1, r0, #0x1\n        strh r1, [r2]\n        lsl r0, r1, #0x10\n        cmp r0, #0x0\n        bne _code0_20\n_code0_19:\n        mov r0, #0x0\n        strb r0, [r3]\n        b _code0_21\n_code0_20:\n        mov r0, #0x3f\n        and r1, r0\n        cmp r1, #0x0\n        bne _code0_21\n        ldrb r1, [r3]\n        add r1, #0x55\n        mov r0, r5\n        mov r2, #0x0\n        bl CreateFx\n_code0_21:\n        pop {r4, r5}\n        pop {r0}\n        bx r0",
      "score": "251",
      "id": 49
    },
    {
      "name": "Manager7_Main",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"manager.h\"\n#include \"functions.h\"\n#include \"structures.h\"\n#include \"gba/gba.h\"\n\ntypedef struct {\n    Manager manager;\n    u8 unk_20;\n    u8 unk_21[0x1F];\n} Manager7;\n\nvoid sub_08057E30();\nu32 sub_08057E40();\nvoid sub_08057E7C(u32);\n\nextern u32 sub_08056300(const u16*);\n\nextern const u8 gGlobalGfxAndPalettes[];\n\n// end of existing headers\n\nvoid Manager7_Main(Manager7* this) {\n\n}",
      "asmCode": "thumb_func_start Manager7_Main\nManager7_Main:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        mov r0, #0x8\n        strb r0, [r4, #0xe]\n        mov r1, r4\n        add r1, #0x20\n        mov r0, #0xff\n        strb r0, [r1]\n        ldr r1, _data0_0\n        mov r0, r4\n        mov r2, #0x0\n        bl sub_08052D74\n_code0_0:\n        ldr r0, _data0_0+0x4\n        ldrh r5, [r0]\n        cmp r5, #0x0\n        bne _code0_3\n        mov r0, r4\n        bl sub_08057E40\n        cmp r0, #0x0\n        beq _code0_1\n        ldr r0, _data0_0+0x8\n        ldrb r6, [r0, #0x10]\n        mov r1, r4\n        add r1, #0x20\n        ldrb r0, [r1]\n        cmp r0, r6\n        beq _code0_1\n        strb r6, [r1]\n        strb r5, [r4, #0xe]\n_code0_1:\n        lsl r1, r6, #0x6\n        ldr r0, _data0_0+0xc\n        add r2, r1, r0\n        ldrb r1, [r4, #0xe]\n        cmp r1, #0x0\n        bne _code0_2\n        ldr r1, _data0_0+0x10\n        mov r0, #0x1\n        strb r0, [r1]\n        ldr r0, [r2]\n        ldr r1, _data0_0+0x14\n        add r0, r1\n        ldr r1, [r2, #0x4]\n        mov r2, #0x80\n        lsl r2, #0x5\n        bl LoadResourceAsync\n        ldr r0, _data0_0+0x18\n        add r0, r6, r0\n        ldrb r0, [r0]\n        bl LoadPaletteGroup\n        ldrb r0, [r4, #0xe]\n        add r0, #0x1\n        strb r0, [r4, #0xe]\n        b _code0_3\n_data0_0:\n        .4byte sub_08057E30\n        .4byte gRoomControls\n        .4byte gRoomVars\n        .4byte gUnk_081080A4\n        .4byte gUnk_02034490\n        .4byte gGlobalGfxAndPalettes\n        .4byte gUnk_081081E4\n_code0_2:\n        cmp r1, #0x0\n        blt _code0_3\n        cmp r1, #0x7\n        bgt _code0_3\n        lsl r1, #0x3\n        add r1, r2\n        ldr r0, [r1]\n        ldr r2, _data0_1\n        add r0, r2\n        ldr r1, [r1, #0x4]\n        mov r2, #0x80\n        lsl r2, #0x5\n        bl LoadResourceAsync\n        ldrb r0, [r4, #0xe]\n        add r0, #0x1\n        mov r1, #0x0\n        strb r0, [r4, #0xe]\n        ldr r0, _data0_1+0x4\n        strb r1, [r0]\n_code0_3:\n        pop {r4, r5, r6, pc}\n_data0_1:\n        .4byte gGlobalGfxAndPalettes\n        .4byte gUnk_02034490",
      "score": "95",
      "id": 50
    },
    {
      "name": "TextBoxHandlerQuestion",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"room.h\"\n#include \"entity.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"structures.h\"\n#include \"save.h\"\n\n#define TEXTBOX_ADVANCE_KEYS (A_BUTTON | B_BUTTON | DPAD_ANY | R_BUTTON)\n#define TEXTBOX_PRESS_ANY_ADVANCE_KEYS ((gInput.newKeys & TEXTBOX_ADVANCE_KEYS) != 0)\n\n#define TEXTBOX_WIDTH 0x20\n#define TEXTBOX_POSITION_INDEX(window) ((window).yPos * TEXTBOX_WIDTH + (window).xPos)\n\nextern void WriteBit(u32*, u32);\nextern void sub_0805EF40(u8*, u8*);\nextern void sub_0801C4A0(u32, u32);\nextern void sub_0801C494(void);\nextern void sub_0805F918(u32, u32, u32);\nextern u32 sub_0801D51C(u32, u8*, u32);\n\nu32 sub_08056FEC(u32, u8*);\n\nu16 sub_08056750(CurrentTextBox*);\nu32 sub_0805EFE8(u8*);\nvoid sub_08056ABC(u32, u32);\nvoid sub_080569C4(CurrentTextBox*, u32);\nu16 sub_0805F7DC(u32, u8*);\nu32 sub_GetFontStrWidth(u8*, u32);\nvoid sub_08056FBC(CurrentTextBox*);\nvoid SetDoTextBox(u32 doTextbox);\nvoid Load_02000D00_Asyc(void);\n\nvoid DeleteWindow(void);\nvoid CreateWindow(void);\nu32 CalcWindowSize(u32 fade);\n\nvoid DispMessageFrame(u16*, u32, u32, u32);\nvoid DispString(void);\nvoid DispCursor(void);\n\ntypedef u32 (*TextBoxFunction)(void);\n\nu32 TextBoxFunction0(void);\nu32 TextBoxFunction1(void);\nu32 HandleTextBox(void);\nu32 TextBoxFunctionOpen(void);\nu32 TextBoxFunctionClose(void);\nu32 TextBoxFunction5(void);\n\n// end of existing headers\n\nvoid TextBoxHandlerQuestion(CurrentTextBox* ctb) {\n\n}",
      "asmCode": "thumb_func_start TextBoxHandlerQuestion\nTextBoxHandlerQuestion:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        mov r6, r0\n        ldr r0, _data0_0\n        mov r7, #0x3\n        ldrsb r7, [r0, r7]\n        ldr r0, _data0_0+0x4\n        ldrh r0, [r0, #0x2]\n        cmp r0, #0x8\n        beq _code0_1\n        cmp r0, #0x8\n        bgt _code0_0\n        cmp r0, #0x1\n        beq _code0_1\n        b _code0_6\n_data0_0:\n        .4byte gUnk_02024030\n        .4byte gInput\n_code0_0:\n        cmp r0, #0x10\n        beq _code0_5\n        cmp r0, #0x20\n        beq _code0_4\n        b _code0_6\n_code0_1:\n        ldr r0, _data0_1\n        lsl r1, r7, #0x1\n        add r0, #0x10\n        add r1, r0\n        ldrh r1, [r1]\n        cmp r1, #0x0\n        bne _code0_2\n        ldr r1, _data0_1+0x4\n        mov r0, r6\n        add r0, #0x20\n        b _code0_3\n_data0_1:\n        .4byte gUnk_02024030\n        .4byte gUnk_08107C14\n_code0_2:\n        strh r1, [r6, #0x8]\n        mov r4, r6\n        add r4, #0x20\n        mov r0, r4\n        bl sub_0805EEB4\n        ldr r1, _data0_2\n        mov r0, r4\n_code0_3:\n        bl sub_0805EF40\n        ldr r2, _data0_2+0x4\n        ldr r0, _data0_2+0x8\n        ldrb r1, [r0, #0x3]\n        strb r1, [r2, #0x1]\n        mov r1, #0x3\n        strb r1, [r2]\n        mov r1, #0x18\n        bl MemClear\n        mov r0, #0x6a\n        bl SoundReq\n        mov r1, r6\n        add r1, #0x89\n        mov r0, #0x1\n        strb r0, [r1]\n        b _code0_6\n_data0_2:\n        .4byte gUnk_08107C0F\n        .4byte gUnk_02000040\n        .4byte gUnk_02024030\n_code0_4:\n        sub r7, #0x1\n        b _code0_6\n_code0_5:\n        add r7, #0x1\n_code0_6:\n        ldr r4, _data0_3\n        mov r1, #0x2\n        ldrsb r1, [r4, r1]\n        add r0, r7, r1\n        bl __modsi3\n        mov r7, r0\n        mov r5, #0x3\n        ldrsb r5, [r4, r5]\n        cmp r7, r5\n        beq _code0_7\n        strb r7, [r4, #0x3]\n        mov r0, #0x69\n        bl SoundReq\n        mov r1, #0x1\n        b _code0_8\n_data0_3:\n        .4byte gUnk_02024030\n_code0_7:\n        mov r1, #0x0\n_code0_8:\n        ldr r2, _data0_4\n        ldrb r0, [r2]\n        cmp r0, #0x1\n        bne _code0_9\n        ldr r1, _data0_4+0x4\n        mov r0, #0x2\n        strb r0, [r2]\n        strb r0, [r1]\n        mov r1, #0x1\n_code0_9:\n        cmp r1, #0x0\n        beq _code0_10\n        ldr r0, _data0_4+0x8\n        mov r10, r0\n        mov r1, #0x56\n        add r1, r10\n        mov r9, r1\n        ldrh r0, [r1]\n        mov r8, r0\n        ldr r4, _data0_4+0x4\n        lsl r0, r5, #0x1\n        add r4, #0x8\n        add r0, r4\n        ldrh r0, [r0]\n        strh r0, [r1]\n        add r6, #0x50\n        mov r0, #0x0\n        mov r1, r6\n        bl sub_0805F8E4\n        lsl r0, r7, #0x1\n        add r0, r4\n        ldrh r0, [r0]\n        mov r1, r9\n        strh r0, [r1]\n        mov r0, #0x1\n        mov r1, r6\n        bl sub_0805F8E4\n        mov r1, r8\n        mov r0, r9\n        strh r1, [r0]\n        mov r0, #0x1\n        ldr r1, _data0_4+0xc\n        strb r0, [r1]\n_code0_10:\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_4:\n        .4byte gUnk_02000040\n        .4byte gUnk_02024030\n        .4byte gCurrentTextBox\n        .4byte 0x202281d",
      "score": "153",
      "id": 51
    },
    {
      "name": "sub_0801F428",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nextern s32 sub_080012DC(Entity*);\nextern void sub_08001318(Entity*);\nextern void sub_080043A8(Entity*);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\nextern u32 PlayerInRange(Entity*, u32, u32);\nextern void sub_0804AA1C(Entity*);\nextern void sub_080AF160(Entity*);\n\nextern Entity* gUnk_020000B0;\n\nvoid sub_0801F328(Entity*);\nvoid sub_0801F340(Entity*);\nvoid sub_0801F360(Entity*);\nvoid sub_0801F3AC(Entity*);\nvoid sub_0801F730(Entity*);\nvoid sub_0801F748(Entity*);\nvoid sub_0801F764(Entity*);\nvoid sub_0801FAE0(Entity*);\nvoid sub_0801FAF8(Entity*);\nvoid sub_0801FB14(Entity*);\nvoid sub_0801FB34(Entity*);\nvoid sub_0801FB68(Entity*);\nu32 sub_0801FBD0(Entity*);\nvoid Chuchu_JumpAtPlayer(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\nextern void (*const gUnk_080CA21C[])(Entity*);\nextern void (*const gUnk_080CA234[])(Entity*);\nextern void (*const gUnk_080CA25C[])(Entity*);\nextern void (*const gUnk_080CA288[])(Entity*);\n\nextern const s8 gUnk_080CA2B4[];\n\n// end of existing headers\n\nvoid sub_0801F428(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0801F428\nsub_0801F428:\n        push {r4, r5, lr}\n        mov r5, r0\n        bl sub_0804A720\n        mov r4, #0x0\n        mov r0, #0x1\n        strb r0, [r5, #0xc]\n        bl Random\n        strb r0, [r5, #0xe]\n        mov r0, r5\n        add r0, #0x45\n        ldrb r1, [r0]\n        add r0, #0x3b\n        strb r1, [r0]\n        add r0, #0x2\n        strb r4, [r0]\n        ldrb r0, [r5, #0xb]\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, #0x3\n        strb r0, [r5, #0xc]\n        mov r0, #0x1e\n        strb r0, [r5, #0xf]\n        mov r0, r5\n        mov r1, #0x1\n        bl sub_08049F84\n        strb r0, [r5, #0x15]\n        ldrb r0, [r5, #0x10]\n        mov r1, #0x80\n        orr r0, r1\n        strb r0, [r5, #0x10]\n        mov r2, r5\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        mov r1, #0x18\n        orr r0, r1\n        strb r0, [r2]\n        mov r0, r5\n        mov r1, #0x2\n        bl InitializeAnimation\n_code0_0:\n        pop {r4, r5, pc}",
      "score": "46",
      "id": 52
    },
    {
      "name": "sub_0802AAC0",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802AAC0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0802AAC0\nsub_0802AAC0:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r4, r0\n        bl sub_0802AC40\n        ldrb r0, [r4, #0xf]\n        sub r0, #0x1\n        strb r0, [r4, #0xf]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, r4\n        mov r1, #0x4\n        bl sub_0802AD1C\n_code0_0:\n        mov r6, r4\n        add r6, #0x81\n        ldrb r0, [r6]\n        cmp r0, #0x0\n        beq _code0_4\n        ldr r5, [r4, #0x54]\n        cmp r5, #0x0\n        bne _code0_1\n        strb r5, [r6]\n        b _code0_5\n_code0_1:\n        ldr r0, [r5, #0x4]\n        cmp r0, #0x0\n        bne _code0_2\n        strb r0, [r6]\n        str r0, [r4, #0x54]\n        b _code0_5\n_code0_2:\n        ldrb r0, [r5, #0xe]\n        mov r8, r0\n        cmp r0, #0x0\n        bne _code0_5\n        mov r1, #0x2e\n        ldrsh r0, [r4, r1]\n        ldr r2, _data0_0\n        ldrh r1, [r2, #0x6]\n        sub r0, r1\n        asr r0, #0x4\n        mov r3, #0x3f\n        and r0, r3\n        mov r7, #0x32\n        ldrsh r1, [r4, r7]\n        ldrh r2, [r2, #0x8]\n        sub r1, r2\n        asr r1, #0x4\n        and r1, r3\n        lsl r1, #0x6\n        orr r0, r1\n        mov r1, #0x1\n        bl sub_080002E0\n        cmp r0, #0x0\n        bne _code0_3\n        ldr r1, _data0_0+0x4\n        mov r0, r4\n        mov r2, #0x10\n        mov r3, #0x10\n        bl sub_080041A0\n        cmp r0, #0x0\n        beq _code0_5\n        ldrb r0, [r5, #0xf]\n        cmp r0, #0x50\n        bhi _code0_5\n        mov r0, r8\n        strb r0, [r6]\n        b _code0_5\n_data0_0:\n        .4byte gRoomControls\n        .4byte gPlayerEntity\n_code0_3:\n        ldrb r0, [r5, #0xf]\n        cmp r0, #0x13\n        bhi _code0_5\n        mov r1, r8\n        strb r1, [r6]\n        b _code0_5\n_code0_4:\n        mov r1, #0x4\n        strb r1, [r4, #0xc]\n        mov r0, #0xc0\n        strb r0, [r4, #0xe]\n        strb r1, [r4, #0xf]\n        mov r2, r4\n        add r2, #0x80\n        ldrb r0, [r2]\n        mov r1, #0x1\n        eor r0, r1\n        strb r0, [r2]\n        mov r0, r4\n        mov r1, #0x0\n        bl InitializeAnimation\n_code0_5:\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "101",
      "id": 53
    },
    {
      "name": "sub_0802AB40",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802AB40(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0802AB40\nsub_0802AB40:\n        push {r4, lr}\n        mov r4, r0\n        bl sub_0802AC40\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        mov r2, #0xff\n        lsl r0, #0x18\n        lsr r1, r0, #0x18\n        cmp r1, #0x0\n        bne _code0_1\n        mov r0, r4\n        add r0, #0x7a\n        ldrb r0, [r0]\n        cmp r0, #0x4\n        bhi _code0_0\n        mov r0, #0x5\n        strb r0, [r4, #0xc]\n        strh r1, [r4, #0x24]\n        ldrb r1, [r4, #0xa]\n        add r1, #0x1\n        mov r0, r4\n        bl InitializeAnimation\n        b _code0_2\n_code0_0:\n        mov r0, #0xc0\n        strb r0, [r4, #0xe]\n        mov r0, #0x4\n        strb r0, [r4, #0xf]\n        mov r2, r4\n        add r2, #0x80\n        ldrb r0, [r2]\n        mov r1, #0x1\n        eor r0, r1\n        strb r0, [r2]\n        b _code0_2\n_code0_1:\n        ldrb r0, [r4, #0xf]\n        sub r0, #0x1\n        strb r0, [r4, #0xf]\n        and r0, r2\n        cmp r0, #0x0\n        bne _code0_2\n        mov r0, r4\n        mov r1, #0x4\n        bl sub_0802ACDC\n_code0_2:\n        pop {r4, pc}",
      "score": "50",
      "id": 54
    },
    {
      "name": "sub_0802AC40",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802AC40(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0802AC40\nsub_0802AC40:\n        push {r4, r5, lr}\n        mov r4, r0\n        bl GetNextFrame\n        mov r0, r4\n        bl sub_0806F69C\n        mov r5, r4\n        add r5, #0x7a\n        ldrb r0, [r5]\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r4\n        bl sub_0802B234\n        cmp r0, #0x0\n        bne _code0_2\n        strb r0, [r5]\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        b _code0_1\n_code0_0:\n        mov r0, r4\n        bl sub_0802B234\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, #0x1\n        strb r0, [r5]\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        sub r0, #0x3a\n        and r0, r1\n        mov r1, #0x18\n        orr r0, r1\n_code0_1:\n        strb r0, [r2]\n_code0_2:\n        pop {r4, r5, pc}",
      "score": "42",
      "id": 55
    },
    {
      "name": "sub_0802ADDC",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802ADDC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0802ADDC\nsub_0802ADDC:\n        push {r4, r5, lr}\n        mov r5, r0\n        ldrb r1, [r5, #0xa]\n        add r1, #0x2\n        mov r0, #0x1b\n        bl CreateEnemy\n        mov r4, r0\n        cmp r4, #0x0\n        beq _code0_0\n        mov r0, r5\n        bl sub_0802B234\n        neg r1, r0\n        orr r1, r0\n        lsr r1, #0x1f\n        strb r1, [r4, #0xb]\n        str r5, [r4, #0x50]\n        str r4, [r5, #0x54]\n        mov r0, r5\n        mov r1, r4\n        bl CopyPosition\n        ldrh r0, [r4, #0x36]\n        add r0, #0x8\n        strh r0, [r4, #0x36]\n        mov r1, r5\n        add r1, #0x81\n        mov r0, #0x1\n        strb r0, [r1]\n        ldrb r0, [r5, #0xa]\n        cmp r0, #0x0\n        bne _code0_0\n        sub r1, #0x7\n        ldrb r0, [r1]\n        add r0, #0x1\n        strb r0, [r1]\n_code0_0:\n        pop {r4, r5, pc}",
      "score": "38",
      "id": 56
    },
    {
      "name": "sub_0802AE68",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802AE68(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0802AE68\nsub_0802AE68:\n        push {r4, lr}\n        mov r4, r0\n        ldr r2, [r4, #0x50]\n        cmp r2, #0x0\n        bne _code0_0\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x7\n        and r0, r1\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x18]\n        mov r1, r4\n        add r1, #0x80\n        mov r0, #0x1\n        strb r0, [r1]\n_code0_0:\n        mov r0, r2\n        add r0, #0x81\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_1\n        mov r0, r2\n        mov r1, r4\n        bl CopyPosition\n        ldrh r0, [r4, #0x36]\n        add r0, #0x8\n        strh r0, [r4, #0x36]\n        ldrb r1, [r4, #0x18]\n        mov r0, #0x4\n        neg r0, r0\n        and r0, r1\n        strb r0, [r4, #0x18]\n        b _code0_4\n_code0_1:\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        mov r1, r4\n        add r1, #0x80\n        mov r2, #0x1\n        mov r0, #0x1\n        strb r0, [r1]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x5\n        and r0, r1\n        orr r0, r2\n        strb r0, [r4, #0x18]\n        mov r0, r4\n        bl sub_0802B234\n        cmp r0, #0x0\n        beq _code0_2\n        mov r2, r4\n        add r2, #0x29\n        ldrb r0, [r2]\n        mov r1, #0x39\n        neg r1, r1\n        and r1, r0\n        mov r0, #0x18\n        orr r1, r0\n        strb r1, [r2]\n        b _code0_3\n_code0_2:\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        strb r0, [r2]\n_code0_3:\n        mov r0, r4\n        bl GetNextFrame\n_code0_4:\n        pop {r4, pc}",
      "score": "77",
      "id": 57
    },
    {
      "name": "sub_0802B1BC",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"player.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void sub_08078954(Entity*);\nextern void sub_08078930(Entity*);\nextern s32 sub_080012DC(Entity*);\nextern Entity* sub_08049DF4(u32);\nextern void sub_08079BD8(Entity*);\n\nvoid sub_0802AD1C(Entity*, u32);\nvoid sub_0802AD54(Entity*);\nvoid sub_0802B048(Entity*);\nvoid sub_0802ACDC(Entity*, u32);\nvoid sub_0802ADDC(Entity*);\nvoid sub_0802AC40(Entity*);\nbool32 sub_0802B234(Entity*);\nEntity* sub_0802B250(Entity*);\nvoid sub_0802B264(Entity*);\n\nextern void (*const gUnk_080012C8[])(Entity*);\n\nextern void (*const gUnk_080CD0F0[])(Entity*);\nextern void (*const gUnk_080CD108[])(Entity*);\nextern void (*const gUnk_080CD120[])(Entity*);\nextern void (*const gUnk_080CD134[])(Entity*);\nextern void (*const gUnk_080CD140[])(Entity*);\nextern void (*const gUnk_080CD158[])(Entity*);\n\nextern const Hitbox gUnk_080CD16C;\nextern const Hitbox gUnk_080CD174;\nextern const Hitbox gUnk_080CD17C;\n\n// end of existing headers\n\nvoid sub_0802B1BC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0802B1BC\nsub_0802B1BC:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xe]\n        cmp r0, #0x0\n        beq _code0_0\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n_code0_0:\n        ldr r2, [r4, #0x50]\n        cmp r2, #0x0\n        bne _code0_1\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x6\n        and r0, r1\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x18]\n_code0_1:\n        mov r0, r2\n        add r0, #0x81\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, r2\n        mov r1, r4\n        bl CopyPosition\n        ldrh r0, [r4, #0x36]\n        add r0, #0x8\n        strh r0, [r4, #0x36]\n        b _code0_5\n_code0_2:\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x6\n        and r0, r1\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x18]\n        mov r0, r4\n        bl sub_0802B234\n        cmp r0, #0x0\n        beq _code0_3\n        mov r2, r4\n        add r2, #0x29\n        ldrb r0, [r2]\n        mov r1, #0x39\n        neg r1, r1\n        and r1, r0\n        mov r0, #0x18\n        orr r1, r0\n        strb r1, [r2]\n        b _code0_4\n_code0_3:\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        strb r0, [r2]\n_code0_4:\n        mov r0, r4\n        bl GetNextFrame\n_code0_5:\n        pop {r4, pc}",
      "score": "70",
      "id": 58
    },
    {
      "name": "sub_0805457C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"menu.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    u8 filler[0xa8];\n    Stats stats;\n} SaveFile;\n\ntypedef struct {\n    u8 unk;\n    u8 filler[7];\n} struct_080FD5B4;\n\ntypedef struct {\n    u8 filler[0x2e];\n    u8 unk;\n} ScreenTransition;\n\nextern SaveFile gSave;\nextern struct_080FD5B4 gUnk_080FD5B4[];\nextern ScreenTransition gScreenTransition;\n\nextern u8 gUnk_0200AF13;\nextern u8 gUnk_0200AF14;\nextern u32 gUnk_080015BC;\nextern u8 gUnk_080FE1C6[];\nextern u32 gUnk_02034398;\nextern void (*const gUnk_080FE2A0[])();\n\nvoid ForceEquipItem(u32, u8);\nextern void sub_0807CAA0(u32, u32);\n\n// end of existing headers\n\nu32 sub_0805457C(u32 arg0, u32 arg1) {\n\n}",
      "asmCode": "thumb_func_start sub_0805457C\nsub_0805457C:\n        push {r4, r5, r6, r7, lr}\n        sub sp, #0x20\n        mov r6, r0\n        mov r3, r1\n        ldr r0, _data0_0\n        ldrb r1, [r0, #0x2]\n        mov r5, r0\n        cmp r1, #0x1\n        bne _code0_0\n        b _code0_13\n_code0_0:\n        ldr r2, _data0_0+0x4\n        mov r4, #0x0\n        cmp r3, #0x19\n        bhi _code0_1\n        lsl r0, r3, #0x2\n        ldr r1, _data0_0+0x8\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_0:\n        .4byte gRoomVars\n        .4byte gUnk_08001A1C\n        .4byte _other0_2\n        .4byte _code0_1\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _code0_1\n        .4byte _code0_1\n        .4byte _case0_3\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_2\n        .4byte _case0_1\n        .4byte _case0_1\n        lsl r1, r3, #0x5\n        ldr r0, _data0_1\n        add r4, r1, r0\n        b _code0_1\n_data0_1:\n        .4byte gUnk_0800137C\n        ldrb r0, [r5, #0xa]\n        ldr r4, _data0_2\n        cmp r0, #0x0\n        beq _code0_1\n        add r4, #0x20\n        b _code0_1\n_data0_2:\n        .4byte gUnk_0800191C\n        lsl r1, r3, #0x5\n        ldr r0, _data0_3\n        add r2, r1, r0\n        ldr r4, _data0_3+0x4\n_code0_1:\n        cmp r4, #0x0\n        bne _code0_2\n        b _code0_13\n_code0_2:\n        ldr r0, _data0_3+0x8\n        add r0, #0xb3\n        ldrb r1, [r0]\n        cmp r1, #0x0\n        bne _code0_3\n        ldr r3, _data0_3+0xc\n        b _code0_4\n_data0_3:\n        .4byte gUnk_0800161C\n        .4byte gUnk_02034398\n        .4byte gSave\n        .4byte gUnk_08001A1C\n_code0_3:\n        lsl r1, #0x5\n        ldr r0, _data0_4\n        add r3, r1, r0\n_code0_4:\n        mov r0, sp\n        mov r1, r4\n        bl sub_08000F14\n        ldr r4, _data0_4+0x4\n        mov r0, r4\n        add r0, #0xaa\n        ldrb r0, [r0]\n        cmp r0, #0x8\n        bhi _code0_5\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0x8]\n        add r0, #0x5\n        strh r0, [r1, #0x8]\n_code0_5:\n        mov r0, r4\n        add r0, #0xac\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_6\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0xc]\n        add r0, #0x3\n        strh r0, [r1, #0xc]\n_code0_6:\n        mov r0, r4\n        add r0, #0xad\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_7\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0xe]\n        add r0, #0x3\n        strh r0, [r1, #0xe]\n_code0_7:\n        mov r0, r4\n        add r0, #0xc0\n        ldrh r0, [r0]\n        cmp r0, #0xa\n        bhi _code0_8\n        mov r1, sp\n        mov r0, sp\n        ldrh r0, [r0, #0x4]\n        add r0, #0x1\n        strh r0, [r1, #0x4]\n_code0_8:\n        ldr r2, _data0_4+0x8\n        mov r0, r4\n        add r0, #0xbb\n        ldrb r0, [r0]\n        mov r3, r2\n        cmp r0, #0x0\n        beq _code0_9\n        add r2, #0x20\n_code0_9:\n        mov r1, #0x8b\n        lsl r1, #0x1\n        add r0, r4, r1\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_10\n        add r3, #0x40\n_code0_10:\n        mov r0, sp\n        mov r1, sp\n        bl sub_08000F2C\n        mov r4, r0\n        bl Random\n        mov r2, r0\n        asr r5, r2, #0x18\n        mov r0, #0xf\n        and r5, r0\n        mov r0, r2\n        mov r1, r4\n        bl __modsi3\n        mov r2, r0\n        mov r3, #0x0\n        lsl r0, r5, #0x1\n        add r0, sp\n        mov r4, #0x0\n        ldrsh r1, [r0, r4]\n        cmp r1, r2\n        bgt _code0_12\n        mov r4, #0xf\n_code0_11:\n        add r3, #0x1\n        add r5, #0x1\n        and r5, r4\n        cmp r3, #0xf\n        bhi _code0_12\n        lsl r0, r5, #0x1\n        add r0, sp\n        mov r7, #0x0\n        ldrsh r0, [r0, r7]\n        add r1, r0\n        cmp r1, r2\n        ble _code0_11\n_code0_12:\n        ldr r0, _data0_4+0xc\n        add r0, r5, r0\n        ldrb r1, [r0]\n        cmp r1, #0x0\n        beq _code0_13\n        mov r0, r6\n        mov r2, #0x0\n        bl CreateItemDrop\n        b _code0_14\n_data0_4:\n        .4byte gUnk_0800143C\n        .4byte gSave\n        .4byte gUnk_08001A1C\n        .4byte gUnk_080FE1B4\n_code0_13:\n        mov r0, #0x0\n_code0_14:\n        add sp, #0x20\n        pop {r4, r5, r6, r7, pc}",
      "score": "211",
      "id": 59
    },
    {
      "name": "sub_08057A18",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"manager.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n\nextern void (*gUnk_08107C70[])(Manager*);\n\n// end of existing headers\n\nvoid sub_08057A18(Manager* this, DiggingCaveEntrance* entr) {\n\n}",
      "asmCode": "thumb_func_start sub_08057A18\nsub_08057A18:\n        push {r4, r5, r6, lr}\n        mov r6, r8\n        push {r6}\n        mov r8, r0\n        mov r4, r1\n        bl sub_0805E5A8\n        ldr r5, _data0_0\n        ldrb r0, [r5, #0x9]\n        strb r0, [r5, #0xa]\n        ldr r3, _data0_0+0x4\n        ldrb r0, [r3, #0x4]\n        strb r0, [r5, #0x9]\n        ldr r1, _data0_0+0x8\n        ldrb r0, [r4, #0x4]\n        strb r0, [r1, #0xc]\n        ldrb r0, [r4, #0x5]\n        strb r0, [r1, #0xd]\n        ldrb r0, [r4, #0x4]\n        strb r0, [r3, #0x4]\n        ldrb r0, [r4, #0x5]\n        strb r0, [r3, #0x5]\n        str r4, [r5]\n        ldr r6, _data0_0+0xc\n        ldrh r1, [r6, #0x2e]\n        ldrh r0, [r3, #0x6]\n        sub r1, r0\n        ldrh r2, [r4]\n        mov r0, #0x3f\n        and r0, r2\n        lsl r0, #0x4\n        sub r1, r0\n        strh r1, [r5, #0x4]\n        ldrh r1, [r6, #0x32]\n        ldrh r0, [r3, #0x8]\n        sub r1, r0\n        ldrh r2, [r4]\n        mov r0, #0xfc\n        lsl r0, #0x4\n        and r0, r2\n        lsr r0, #0x2\n        sub r1, r0\n        strh r1, [r5, #0x6]\n        ldrb r0, [r4, #0x3]\n        bl sub_08080930\n        mov r0, r8\n        bl DeleteManager\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_03004030\n        .4byte gRoomControls\n        .4byte gScreenTransition\n        .4byte gPlayerEntity",
      "score": "56",
      "id": 60
    },
    {
      "name": "sub_08057E7C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"manager.h\"\n#include \"functions.h\"\n#include \"structures.h\"\n#include \"gba/gba.h\"\n\ntypedef struct {\n    Manager manager;\n    u8 unk_20;\n    u8 unk_21[0x1F];\n} Manager7;\n\nvoid sub_08057E30();\nu32 sub_08057E40();\nvoid sub_08057E7C(u32);\n\nextern u32 sub_08056300(const u16*);\n\nextern const u8 gGlobalGfxAndPalettes[];\n\n// end of existing headers\n\nvoid sub_08057E7C(u32 unk1) {\n\n}",
      "asmCode": "thumb_func_start sub_08057E7C\nsub_08057E7C:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        ldr r0, _data0_0\n        add r0, r4, r0\n        ldrb r0, [r0]\n        bl LoadPaletteGroup\n        lsl r1, r4, #0x6\n        ldr r0, _data0_0+0x4\n        add r1, r0\n        mov r3, #0x0\n        ldr r2, _data0_0+0x8\n        ldr r6, _data0_0+0xc\n        ldr r5, _data0_0+0x10\n_code0_0:\n        ldr r0, [r1]\n        add r0, r6\n        str r0, [r2]\n        ldr r0, [r1, #0x4]\n        str r0, [r2, #0x4]\n        str r5, [r2, #0x8]\n        ldr r0, [r2, #0x8]\n        add r3, #0x1\n        add r1, #0x8\n        cmp r3, #0x7\n        bls _code0_0\n        ldr r0, _data0_0+0x14\n        strb r4, [r0, #0x10]\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_081081E4\n        .4byte gUnk_081080A4\n        .4byte 0x40000d4\n        .4byte gGlobalGfxAndPalettes\n        .4byte 0x84000400\n        .4byte gRoomVars",
      "score": "37",
      "id": 61
    },
    {
      "name": "sub_0806EABC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"fileScreen.h\"\n#include \"screen.h\"\n\nextern void sub_08057044(u32, struct_020227E8*, u32);\nextern u32 gUnk_081146B8;\n\nextern u16 gBG0Settings[];\n\n// end of existing headers\n\nvoid sub_0806EABC(Entity* this, u32 param) {\n\n}",
      "asmCode": "thumb_func_start sub_0806EABC\nsub_0806EABC:\n        push {r4, lr}\n        mov r4, r0\n        bl sub_08050384\n        add r4, #0x68\n        mov r1, #0x0\n        ldrsh r0, [r4, r1]\n        ldr r1, _data0_0\n        ldr r2, _data0_0+0x4\n        bl sub_08057044\n        ldr r0, _data0_0+0x8\n        ldr r1, _data0_0+0xc\n        bl sub_0805F46C\n        ldr r1, _data0_0+0x10\n        mov r0, #0x1\n        strh r0, [r1, #0xe]\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_020227E8\n        .4byte 0x202020\n        .4byte 0x3302\n        .4byte gUnk_081146B8\n        .4byte gScreen",
      "score": "24",
      "id": 62
    },
    {
      "name": "sub_080AA044",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"game.h\"\n\nextern void (*const gUnk_08129C7C[])(Entity*);\n\nextern void (*const gUnk_08129C90[])(Entity*);\nvoid sub_080AA1D8(Entity*);\n\nvoid sub_080AA270(Entity*);\n\nbool32 sub_080AA2E0(Entity*);\nvoid sub_080AA320(Entity*);\n\nvoid sub_080AA3E0(Entity*, u32);\nbool32 sub_080AA374(Entity*);\n\nextern u8 gUnk_08129CA4[];\nextern Hitbox* gUnk_08129CF4[];\nextern u8 gUnk_08129CAC[];\n\nextern Entity* sub_08049DF4(u32);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\n\nextern s32 sub_080AF090(Entity*);\n\nextern Hitbox gUnk_080FD150;\n\nextern s8 gUnk_08129D14[];\nextern u32 sub_0806F824(Entity*, Entity*, u32, u32);\n\n// end of existing headers\n\nvoid sub_080AA044(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AA044\nsub_080AA044:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldr r5, [r4, #0x54]\n        cmp r5, #0x0\n        bne _code0_0\n        bl DeleteThisEntity\n_code0_0:\n        ldr r0, [r5, #0x4]\n        cmp r0, #0x0\n        bne _code0_1\n        bl DeleteThisEntity\n        b _code0_3\n_code0_1:\n        ldrh r0, [r5, #0x12]\n        ldrb r1, [r5, #0x1e]\n        bl GetSpriteSubEntryOffsetDataPointer\n        mov r3, r0\n        ldrb r1, [r5, #0x14]\n        mov r0, #0x4\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_2\n        mov r2, #0x0\n        ldrsb r2, [r3, r2]\n        neg r2, r2\n        lsl r2, #0x10\n        ldrb r3, [r3, #0x1]\n        lsl r3, #0x18\n        asr r3, #0x18\n        lsl r3, #0x10\n        mov r0, r5\n        mov r1, r4\n        bl PositionRelative\n        b _code0_3\n_code0_2:\n        mov r2, #0x0\n        ldrsb r2, [r3, r2]\n        lsl r2, #0x10\n        ldrb r3, [r3, #0x1]\n        lsl r3, #0x18\n        asr r3, #0x18\n        lsl r3, #0x10\n        mov r0, r5\n        mov r1, r4\n        bl PositionRelative\n_code0_3:\n        mov r0, r5\n        add r0, #0x43\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_5\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        beq _code0_4\n        sub r0, #0x1\n        strb r0, [r4, #0xf]\n        b _code0_5\n_code0_4:\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_5\n        mov r0, #0x4\n        strb r0, [r4, #0xc]\n        mov r1, r4\n        add r1, #0x82\n        mov r0, #0x3\n        strb r0, [r1]\n        mov r2, #0x40\n        mov r0, #0x40\n        strb r0, [r4, #0xf]\n        ldrb r0, [r5, #0x14]\n        lsl r1, r0, #0x2\n        strb r1, [r4, #0x15]\n        lsl r0, #0x1a\n        lsr r0, #0x1a\n        strb r0, [r4, #0x14]\n        ldrb r1, [r4, #0x1b]\n        mov r0, #0x3f\n        and r0, r1\n        orr r0, r2\n        strb r0, [r4, #0x1b]\n        ldr r0, _data0_0\n        str r0, [r4, #0x48]\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_080AA3E0\n_code0_5:\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gUnk_080FD150",
      "score": "98",
      "id": 63
    },
    {
      "name": "sub_0802C334",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nvoid sub_0802C4B0(Entity*);\nvoid sub_0802C62C(Entity*);\n\nextern void (*const gUnk_080CD540[])(Entity*);\nextern void (*const gUnk_080CD558[])(Entity*);\nextern const u16 gUnk_080CD568[];\nextern const u8 gUnk_080CD580[];\nextern const s16 gUnk_080CD58C[];\n\nextern void sub_080AEFB4(Entity*);\n\n// end of existing headers\n\nvoid sub_0802C334(Entity* this) {\n    if ((u16)this->field_0x7c.HALF.LO == 0) {\n        u32 tmp = gRoomControls.roomOriginY;\n        if (&gPlayerEntity == NULL)\n            return;\n        if (tmp - gPlayerEntity.y.HALF.HI <= 0x38) {\n            return;\n        }\n        this->field_0x7c.HALF.LO = 1;\n        this->spriteSettings.b.draw = 1;\n    }\n    GetNextFrame(this);\n    this->field_0x7c.HALF.HI = COORD_TO_TILE(this);\n    if (sub_080044EC(this, *(u32*)&this->cutsceneBeh) == 1) {\n        EnqueueSFX(0x14c);\n        this->flags = this->flags | 0x80;\n        this->field_0x7a.HWORD = 0xc;\n        sub_0802C4B0(this);\n    } else {\n        s32 y;\n\n        if (this->field_0x7a.HWORD) {\n            u16 tmp = --this->field_0x7a.HWORD;\n            switch (tmp) {\n                case 0:\n                    this->flags &= ~0x80;\n                    break;\n                case 8:\n                    if (this->type2 != 0 && !sub_08049FA0(this)) {\n                        u32 diff = 0;\n                        s32 i;\n                        for (i = 1; i > -1; i--) {\n                            Entity* ent = CreateFx(this, 0x15, 0);\n                            if (ent) {\n                                ent->x.HALF.HI += 12;\n                                ent->x.HALF.HI -= diff;\n                            }\n                            diff += 0x18;\n                        }\n                        sub_0802C62C(this);\n                        this->field_0x7a.HWORD = (Random() & 0xff) | 0x100;\n                        return;\n                    }\n                    break;\n            }\n        }\n\n        y = gRoomControls.roomOriginY + gRoomControls.height - this->y.HALF.HI;\n        if (y >= 5) {\n            sub_080AEFB4(this);\n        } else {\n            sub_0806F69C(this);\n            if (this->height.HALF.HI - y > 0x38) {\n                sub_0802C62C(this);\n                this->field_0x7a.HWORD = (Random() & 0x7f) | 0x80;\n                if (this->type == 3) {\n                    this->action = 3;\n                }\n            }\n        }\n    }\n    this->collisionLayer = 3;\n    this->spritePriority.b0 = 1;\n    UpdateSpriteForCollisionLayer(this);\n}\n",
      "asmCode": "thumb_func_start sub_0802C334\nsub_0802C334:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        mov r3, r4\n        add r3, #0x7c\n        ldrh r0, [r3]\n        cmp r0, #0x0\n        bne _code0_2\n        ldr r0, _data0_0\n        ldrh r1, [r0, #0x8]\n        ldr r2, _data0_0+0x4\n        cmp r2, #0x0\n        bne _code0_0\n        b _code0_11\n_code0_0:\n        mov r5, #0x32\n        ldrsh r0, [r2, r5]\n        sub r0, r1\n        cmp r0, #0x38\n        bhi _code0_1\n        b _code0_11\n_code0_1:\n        mov r0, #0x1\n        strh r0, [r3]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x5\n        and r0, r1\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x18]\n_code0_2:\n        mov r0, r4\n        bl GetNextFrame\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        ldr r2, _data0_0\n        ldrh r0, [r2, #0x6]\n        sub r1, r0\n        asr r1, #0x4\n        mov r3, #0x3f\n        and r1, r3\n        mov r5, #0x32\n        ldrsh r0, [r4, r5]\n        ldrh r2, [r2, #0x8]\n        sub r0, r2\n        asr r0, #0x4\n        and r0, r3\n        lsl r0, #0x6\n        orr r1, r0\n        mov r0, r4\n        add r0, #0x7e\n        strh r1, [r0]\n        add r0, #0x6\n        ldr r1, [r0]\n        mov r0, r4\n        bl sub_080044EC\n        cmp r0, #0x1\n        bne _code0_3\n        mov r0, #0xa6\n        lsl r0, #0x1\n        bl EnqueueSFX\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x80\n        orr r0, r1\n        strb r0, [r4, #0x10]\n        mov r1, r4\n        add r1, #0x7a\n        mov r0, #0xc\n        strh r0, [r1]\n        mov r0, r4\n        bl sub_0802C4B0\n        b _code0_10\n_data0_0:\n        .4byte gRoomControls\n        .4byte gPlayerEntity\n_code0_3:\n        mov r0, r4\n        add r0, #0x7a\n        ldrh r1, [r0]\n        mov r7, r0\n        cmp r1, #0x0\n        beq _code0_8\n        sub r0, r1, #0x1\n        strh r0, [r7]\n        lsl r0, #0x10\n        lsr r0, #0x10\n        cmp r0, #0x0\n        beq _code0_4\n        cmp r0, #0x8\n        beq _code0_5\n        b _code0_8\n_code0_4:\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x10]\n        b _code0_8\n_code0_5:\n        ldrb r0, [r4, #0xb]\n        cmp r0, #0x0\n        beq _code0_8\n        mov r0, r4\n        bl sub_08049FA0\n        cmp r0, #0x0\n        bne _code0_8\n        mov r6, #0x0\n        mov r5, #0x1\n_code0_6:\n        mov r0, r4\n        mov r1, #0x15\n        mov r2, #0x0\n        bl CreateFx\n        mov r2, r0\n        cmp r2, #0x0\n        beq _code0_7\n        ldrh r0, [r2, #0x2e]\n        add r0, #0xc\n        sub r0, r6\n        strh r0, [r2, #0x2e]\n_code0_7:\n        add r6, #0x18\n        sub r5, #0x1\n        cmp r5, #0x0\n        bge _code0_6\n        mov r0, r4\n        bl sub_0802C62C\n        bl Random\n        mov r1, #0xff\n        and r0, r1\n        mov r2, #0x80\n        lsl r2, #0x1\n        mov r1, r2\n        orr r0, r1\n        strh r0, [r7]\n        b _code0_11\n_code0_8:\n        ldr r0, _data0_1\n        ldrh r1, [r0, #0x8]\n        ldrh r0, [r0, #0x20]\n        add r1, r0\n        mov r5, #0x32\n        ldrsh r0, [r4, r5]\n        sub r5, r1, r0\n        cmp r5, #0x4\n        ble _code0_9\n        mov r0, r4\n        bl sub_080AEFB4\n        b _code0_10\n_data0_1:\n        .4byte gRoomControls\n_code0_9:\n        mov r0, r4\n        bl sub_0806F69C\n        mov r1, #0x36\n        ldrsh r0, [r4, r1]\n        sub r0, r5\n        cmp r0, #0x38\n        ble _code0_10\n        mov r0, r4\n        bl sub_0802C62C\n        bl Random\n        mov r1, #0x7f\n        and r0, r1\n        mov r1, #0x80\n        orr r0, r1\n        strh r0, [r7]\n        ldrb r0, [r4, #0xa]\n        cmp r0, #0x3\n        bne _code0_10\n        strb r0, [r4, #0xc]\n_code0_10:\n        mov r1, r4\n        add r1, #0x38\n        mov r0, #0x3\n        strb r0, [r1]\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        sub r0, #0xb\n        and r0, r1\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r2]\n        mov r0, r4\n        bl UpdateSpriteForCollisionLayer\n_code0_11:\n        pop {r4, r5, r6, r7, pc}",
      "score": "188",
      "id": 64
    },
    {
      "name": "Farmers",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n\nextern Dialog gUnk_08113158[];\n\nextern void sub_0806F188(Entity*);\n\nextern SpriteLoadData gUnk_08113140[];\nvoid sub_0806BC58(Entity* this);\n\n// end of existing headers\n\nvoid Farmers(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start Farmers\nFarmers:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        bne _code0_2\n        ldrb r0, [r4, #0xa]\n        lsl r1, r0, #0x1\n        add r1, r0\n        lsl r1, #0x2\n        ldr r0, _data0_0\n        add r1, r0\n        mov r0, r4\n        bl LoadExtraSpriteData\n        cmp r0, #0x0\n        beq _code0_3\n        ldrb r0, [r4, #0xc]\n        add r0, #0x1\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0xe]\n        mov r0, #0x1\n        and r1, r0\n        lsl r1, #0x6\n        ldrb r2, [r4, #0x18]\n        mov r0, #0x41\n        neg r0, r0\n        and r0, r2\n        orr r0, r1\n        strb r0, [r4, #0x18]\n        lsl r0, #0x19\n        cmp r0, #0x0\n        blt _code0_0\n        mov r0, #0x6\n        b _code0_1\n_data0_0:\n        .4byte gUnk_08113140\n_code0_0:\n        mov r0, #0x2\n_code0_1:\n        strb r0, [r4, #0x14]\n        ldrb r0, [r4, #0x14]\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        bl sub_0806BC58\n        mov r0, r4\n        bl sub_0807DD64\n_code0_2:\n        mov r0, r4\n        mov r1, #0x0\n        bl ExecuteScriptForEntity\n        mov r0, r4\n        bl HandleEntity0x82Actions\n        mov r0, r4\n        bl GetNextFrame\n_code0_3:\n        pop {r4, pc}",
      "score": "57",
      "id": 65
    },
    {
      "name": "sub_0806BC94",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n\nextern Dialog gUnk_08113158[];\n\nextern void sub_0806F188(Entity*);\n\nextern SpriteLoadData gUnk_08113140[];\nvoid sub_0806BC58(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806BC94(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806BC94\nsub_0806BC94:\n        push {lr}\n        ldrb r3, [r0, #0x18]\n        lsl r3, #0x19\n        lsr r3, #0x1f\n        neg r2, r3\n        orr r2, r3\n        asr r2, #0x1f\n        mov r3, #0x8\n        and r2, r3\n        ldr r1, [r1, #0x4]\n        add r1, r2\n        ldrb r2, [r0, #0x14]\n        lsr r2, #0x1\n        add r1, r2\n        bl InitializeAnimation\n        pop {pc}",
      "score": "18",
      "id": 66
    },
    {
      "name": "sub_08050EF4",
      "projectId": "1",
      "cCode": "#include \"fileScreen.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"utils.h\"\n#include \"screen.h\"\n#include \"menu.h\"\n#include \"random.h\"\n#include \"textbox.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\n// copy, erase, start\n#define NUM_FILE_OPERATIONS 3\n\n// end of existing headers\n\nvoid sub_08050EF4(void) {\n    u8* p_option;\n    u32 option;\n    char column_idx;\n    int mode;\n\n    if (gUnk_02019EE0.isTransitioning)\n        return;\n\n    p_option = &gUnk_02019EE0.saves[gUnk_02019EE0.unk6].brightnessPref;\n    if (gMenu.column_idx == 0) {\n        p_option = &gUnk_02019EE0.saves[gUnk_02019EE0.unk6].messageSpeed;\n    }\n\n    mode = 0;\n    option = *p_option;\n    column_idx = gMenu.column_idx;\n    switch (gInput.newKeys) {\n        case DPAD_RIGHT:\n            if (*p_option < 2) {\n                option = *p_option + 1;\n            }\n            break;\n        case DPAD_LEFT:\n            if (*p_option != 0) {\n                option = *p_option - 1;\n            }\n            break;\n        case DPAD_UP:\n            column_idx = 0;\n            break;\n        case DPAD_DOWN:\n            column_idx = 1;\n            break;\n        case A_BUTTON:\n        case START_BUTTON:\n            mode = 2;\n            if (*(u16*)&gUnk_02019EE0.unk4 != *(u16*)&gUnk_02019EE0.saves[gUnk_02019EE0.unk6].messageSpeed)\n                mode = 3;\n            break;\n        case B_BUTTON:\n            mode = 2;\n            break;\n    }\n\n    switch (mode) {\n        case 3:\n            gUnk_02019EE0.saves[gUnk_02019EE0.unk6].messageSpeed = gUnk_02019EE0.unk4;\n            gUnk_02019EE0.saves[gUnk_02019EE0.unk6].brightnessPref = gUnk_02019EE0.unk5;\n            SoundReq(SFX_MENU_CANCEL);\n            sub_080A7114(mode);\n            SetActiveSave(gUnk_02019EE0.unk6);\n            break;\n        case 2:\n            CreateDialogBox(8, 0);\n            SoundReq(SFX_TEXTBOX_SELECT);\n        default:\n        case 1:\n            sub_080A7114(mode);\n            SetActiveSave(gUnk_02019EE0.unk6);\n            break;\n        case 0:\n            if (gMenu.column_idx != column_idx) {\n                gMenu.column_idx = column_idx;\n                SoundReq(SFX_TEXTBOX_CHOICE);\n            } else if (option != *p_option) {\n                *p_option = option;\n                LoadOptionsFromSave(gUnk_02019EE0.unk6);\n                SoundReq(SFX_TEXTBOX_CHOICE);\n            }\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08050EF4\nsub_08050EF4:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        ldr r0, _data0_0\n        ldrb r1, [r0]\n        mov r6, r0\n        cmp r1, #0x0\n        bne _code0_16\n        ldrb r1, [r6, #0x6]\n        ldr r0, _data0_0+0x4\n        mul r1, r0\n        mov r0, r6\n        add r0, #0xc\n        add r1, r0\n        ldr r0, _data0_0+0x8\n        ldrb r3, [r0, #0x1]\n        add r4, r1, #0x3\n        mov r12, r0\n        cmp r3, #0x0\n        bne _code0_0\n        add r4, r1, #0x2\n_code0_0:\n        ldrb r2, [r4]\n        mov r5, #0x0\n        ldr r0, _data0_0+0xc\n        ldrh r0, [r0, #0x2]\n        mov r8, r2\n        cmp r0, #0x10\n        beq _code0_7\n        cmp r0, #0x10\n        bgt _code0_2\n        cmp r0, #0x2\n        beq _code0_9\n        cmp r0, #0x2\n        bgt _code0_1\n        cmp r0, #0x1\n        beq _code0_8\n        b _code0_10\n_data0_0:\n        .4byte gUnk_02019EE0\n        .4byte 0x4b4\n        .4byte gMenu\n        .4byte gInput\n_code0_1:\n        cmp r0, #0x8\n        beq _code0_8\n        b _code0_10\n_code0_2:\n        cmp r0, #0x40\n        beq _code0_4\n        cmp r0, #0x40\n        bgt _code0_3\n        cmp r0, #0x20\n        beq _code0_6\n        b _code0_10\n_code0_3:\n        cmp r0, #0x80\n        beq _code0_5\n        b _code0_10\n_code0_4:\n        mov r3, #0x0\n        b _code0_10\n_code0_5:\n        mov r3, #0x1\n        b _code0_10\n_code0_6:\n        cmp r2, #0x0\n        beq _code0_10\n        sub r2, #0x1\n        b _code0_10\n_code0_7:\n        cmp r2, #0x1\n        bhi _code0_10\n        add r2, #0x1\n        b _code0_10\n_code0_8:\n        ldrh r0, [r6, #0x4]\n        mov r5, #0x2\n        ldrh r7, [r1, #0x2]\n        cmp r0, r7\n        bne _code0_10\n_code0_9:\n        mov r5, #0x3\n_code0_10:\n        cmp r5, #0x0\n        beq _code0_14\n        cmp r5, #0x2\n        beq _code0_11\n        cmp r5, #0x3\n        beq _code0_12\n        b _code0_13\n_code0_11:\n        mov r0, #0x8\n        mov r1, #0x0\n        bl CreateDialogBox\n        mov r0, #0x6a\n        bl SoundReq\n        b _code0_13\n_code0_12:\n        ldrb r0, [r6, #0x4]\n        strb r0, [r1, #0x2]\n        ldrb r0, [r6, #0x5]\n        strb r0, [r1, #0x3]\n        mov r0, #0x6c\n        bl SoundReq\n_code0_13:\n        mov r0, r5\n        bl sub_080A7114\n        ldr r0, _data0_1\n        ldrb r0, [r0, #0x6]\n        bl SetActiveSave\n        b _code0_16\n_data0_1:\n        .4byte gUnk_02019EE0\n_code0_14:\n        mov r1, r12\n        ldrb r0, [r1, #0x1]\n        cmp r0, r3\n        beq _code0_15\n        strb r3, [r1, #0x1]\n        mov r0, #0x69\n        bl SoundReq\n        b _code0_16\n_code0_15:\n        cmp r2, r8\n        beq _code0_16\n        strb r2, [r4]\n        ldrb r0, [r6, #0x6]\n        bl LoadOptionsFromSave\n        mov r0, #0x69\n        bl SoundReq\n_code0_16:\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "137",
      "id": 67
    },
    {
      "name": "sub_08051738",
      "projectId": "1",
      "cCode": "#include \"fileScreen.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"utils.h\"\n#include \"screen.h\"\n#include \"menu.h\"\n#include \"random.h\"\n#include \"textbox.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\n// copy, erase, start\n#define NUM_FILE_OPERATIONS 3\n\n// end of existing headers\n\nvoid sub_08051738(void) {\n    s32 temp;\n    u32 i;\n    s32 uVar3;\n\n    gUnk_02019EE0.unk7 = 4;\n    uVar3 = 0;\n    for (i = 0; i < 3; i++) {\n        if (gUnk_02019EE0.saveStatus[i] == 1) {\n            temp = gUnk_02019EE0.unk6 ^ i;\n            uVar3 = BOOLCAST(temp) & 4;\n        } else {\n            uVar3++;\n        }\n        (&gMenu.selectMtx)[i] = uVar3;\n    }\n    if (uVar3 == 0) {\n        gMenu.transitionTimer = 0x3c;\n        CreateDialogBox(1, 0);\n        sub_080A7114(3);\n    } else {\n        sub_080A7114(1);\n    }\n    uVar3++;\n    gMenu.unk16 = uVar3;\n    gMenu.unk13 = 4;\n    gMenu.unk14 = uVar3;\n}\n",
      "asmCode": "thumb_func_start sub_08051738\nsub_08051738:\n        push {r4, r5, r6, r7, lr}\n        ldr r1, _data0_0\n        mov r0, #0x4\n        strb r0, [r1, #0x7]\n        mov r4, #0x0\n        mov r3, #0x0\n        mov r5, r1\n        mov r7, r5\n        add r7, #0x8\n        ldr r6, _data0_0+0x4\n_code0_0:\n        add r0, r3, r7\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        cmp r0, #0x1\n        bne _code0_1\n        ldrb r1, [r5, #0x6]\n        mov r2, #0x4\n        eor r1, r3\n        neg r0, r1\n        orr r0, r1\n        asr r0, #0x1f\n        and r2, r0\n        b _code0_2\n_data0_0:\n        .4byte gUnk_02019EE0\n        .4byte gUnk_02000090\n_code0_1:\n        add r4, #0x1\n        mov r2, r4\n_code0_2:\n        add r0, r3, r6\n        strb r2, [r0]\n        add r3, #0x1\n        cmp r3, #0x2\n        bls _code0_0\n        cmp r4, #0x0\n        bne _code0_3\n        ldr r1, _data0_1\n        mov r0, #0x3c\n        strh r0, [r1, #0x8]\n        mov r0, #0x1\n        mov r1, #0x0\n        bl CreateDialogBox\n        mov r0, #0x3\n        bl sub_080A7114\n        b _code0_4\n_data0_1:\n        .4byte gMenu\n_code0_3:\n        mov r0, #0x1\n        bl sub_080A7114\n_code0_4:\n        add r4, #0x1\n        ldr r0, _data0_2\n        strb r4, [r0, #0x16]\n        mov r1, #0x4\n        strb r1, [r0, #0x13]\n        strb r4, [r0, #0x14]\n        pop {r4, r5, r6, r7, pc}\n_data0_2:\n        .4byte gMenu",
      "score": "65",
      "id": 68
    },
    {
      "name": "sub_080517B4",
      "projectId": "1",
      "cCode": "#include \"fileScreen.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"utils.h\"\n#include \"screen.h\"\n#include \"menu.h\"\n#include \"random.h\"\n#include \"textbox.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\n// copy, erase, start\n#define NUM_FILE_OPERATIONS 3\n\n// end of existing headers\n\ns32 sub_080517B4(s32 a1) {\n    u32 i = gUnk_02019EE0.unk7;\n    if (a1 != 0) {\n        for (; i < 5; i += a1) {\n            if ((&gMenu.selectMtx)[i] != 0 && (&gMenu.selectMtx)[i] != 4)\n                return i;\n        }\n    }\n    return i;\n}\n",
      "asmCode": "thumb_func_start sub_080517B4\nsub_080517B4:\n        push {r4, lr}\n        mov r2, r0\n        ldr r0, _data0_0\n        ldrb r1, [r0, #0x7]\n        mov r4, r0\n        cmp r2, #0x0\n        beq _code0_3\n        add r1, r2\n        cmp r1, #0x4\n        bhi _code0_2\n        ldr r3, _data0_0+0x4\n_code0_0:\n        add r0, r1, r3\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_1\n        cmp r0, #0x4\n        bne _code0_3\n_code0_1:\n        add r1, r2\n        cmp r1, #0x4\n        bls _code0_0\n_code0_2:\n        ldrb r1, [r4, #0x7]\n_code0_3:\n        mov r0, r1\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_02019EE0\n        .4byte gUnk_02000090",
      "score": "32",
      "id": 69
    },
    {
      "name": "sub_080610B8",
      "projectId": "1",
      "cCode": "#include \"fileScreen.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"utils.h\"\n#include \"screen.h\"\n#include \"menu.h\"\n#include \"random.h\"\n#include \"textbox.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\n// copy, erase, start\n#define NUM_FILE_OPERATIONS 3\n\n// end of existing headers\n\nvoid sub_080610B8(void) {\n}\n",
      "asmCode": "thumb_func_start sub_080610B8\nsub_080610B8:\n        push {r4, r5, r6, r7, lr}\n        ldr r0, _data0_0\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_0\n        b _code0_33\n_code0_0:\n        mov r7, #0x0\n        ldr r0, _data0_0+0x4\n        ldrh r1, [r0, #0x2]\n        mov r2, r0\n        cmp r1, #0x8\n        bne _code0_1\n        b _code0_18\n_code0_1:\n        cmp r1, #0x8\n        bgt _code0_3\n        cmp r1, #0x1\n        bne _code0_2\n        b _code0_21\n_code0_2:\n        cmp r1, #0x2\n        beq _code0_17\n        b _code0_5\n_data0_0:\n        .4byte gUnk_02019EE0\n        .4byte gInput\n_code0_3:\n        mov r0, #0x80\n        lsl r0, #0x1\n        cmp r1, r0\n        bne _code0_4\n        b _code0_25\n_code0_4:\n        mov r0, #0x80\n        lsl r0, #0x2\n        cmp r1, r0\n        bne _code0_5\n        b _code0_24\n_code0_5:\n        mov r6, #0x0\n        mov r5, #0x0\n        ldrh r0, [r2, #0x4]\n        cmp r0, #0x20\n        beq _code0_9\n        cmp r0, #0x20\n        bgt _code0_6\n        cmp r0, #0x10\n        beq _code0_10\n        b _code0_11\n_code0_6:\n        cmp r0, #0x40\n        beq _code0_7\n        cmp r0, #0x80\n        beq _code0_8\n        b _code0_11\n_code0_7:\n        mov r5, #0x1\n        neg r5, r5\n        b _code0_11\n_code0_8:\n        mov r5, #0x1\n        b _code0_11\n_code0_9:\n        mov r6, #0x1\n        neg r6, r6\n        b _code0_11\n_code0_10:\n        mov r6, #0x1\n_code0_11:\n        ldr r4, _data0_1\n        ldrb r0, [r4, #0x11]\n        add r0, r5\n        add r0, #0x6\n        mov r1, #0x6\n        bl __modsi3\n        strb r0, [r4, #0x11]\n        orr r5, r6\n        cmp r5, #0x0\n        beq _code0_12\n        mov r0, #0x67\n        bl SoundReq\n_code0_12:\n        cmp r6, #0x0\n        beq _code0_26\n        ldrb r0, [r4, #0x11]\n        cmp r0, #0x5\n        beq _code0_14\n        ldrb r0, [r4, #0x10]\n        add r0, r6\n        add r0, #0xd\n        mov r1, #0xd\n        bl __modsi3\n        strb r0, [r4, #0x10]\n        ldr r1, _data0_1+0x4\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        cmp r0, #0x0\n        beq _code0_13\n        add r1, #0x10\n_code0_13:\n        ldrb r0, [r4, #0x10]\n        add r0, r1, r0\n        ldrb r0, [r0]\n        strb r0, [r4, #0x12]\n        b _code0_26\n_data0_1:\n        .4byte gMenu\n        .4byte gUnk_080FC980\n_code0_14:\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        mov r5, r0\n        mov r1, #0x4\n        cmp r5, #0x0\n        bne _code0_15\n        mov r1, #0x5\n_code0_15:\n        ldrb r0, [r4, #0x12]\n        add r0, r6\n        add r0, r1\n        bl __modsi3\n        strb r0, [r4, #0x12]\n        ldr r1, _data0_2\n        cmp r5, #0x0\n        beq _code0_16\n        add r1, #0x8\n_code0_16:\n        ldrb r0, [r4, #0x12]\n        add r0, r1, r0\n        ldrb r0, [r0]\n        strb r0, [r4, #0x10]\n        b _code0_26\n_data0_2:\n        .4byte gUnk_080FC9A0\n_code0_17:\n        ldr r0, _data0_3\n        ldrb r0, [r0, #0x13]\n        cmp r0, #0x0\n        beq _code0_20\n        mov r7, #0x5\n        b _code0_26\n_data0_3:\n        .4byte gMenu\n_code0_18:\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        mov r1, #0x3\n        cmp r0, #0x0\n        bne _code0_19\n        mov r1, #0x4\n_code0_19:\n        ldr r2, _data0_4\n        ldrb r0, [r2, #0x11]\n        cmp r0, #0x5\n        bne _code0_20\n        ldrb r2, [r2, #0x12]\n        cmp r1, r2\n        bne _code0_20\n        mov r7, #0x8\n        b _code0_26\n_data0_4:\n        .4byte gMenu\n_code0_20:\n        bl sub_08051358\n        b _code0_26\n_code0_21:\n        ldr r1, _data0_5\n        ldrb r0, [r1, #0x11]\n        cmp r0, #0x5\n        bne _code0_23\n        ldr r2, _data0_5+0x4\n        ldrb r1, [r1, #0x12]\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        cmp r0, #0x0\n        beq _code0_22\n        add r1, #0x8\n_code0_22:\n        add r0, r1, r2\n        ldrb r7, [r0]\n        b _code0_26\n_data0_5:\n        .4byte gMenu\n        .4byte gUnk_080FC970\n_code0_23:\n        mov r7, #0x6\n        b _code0_26\n_code0_24:\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        mov r7, #0x1\n        cmp r0, #0x0\n        bne _code0_26\n        mov r7, #0x4\n        b _code0_26\n_code0_25:\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        mov r7, #0x2\n        cmp r0, #0x0\n        bne _code0_26\n        mov r7, #0x7\n_code0_26:\n        ldr r0, _data0_6\n        ldrb r4, [r0, #0x1]\n        sub r0, r7, #0x1\n        cmp r0, #0x7\n        bhi _code0_31\n        lsl r0, #0x2\n        ldr r1, _data0_6+0x4\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_6:\n        .4byte gMenu\n        .4byte _other0_4\n        .4byte _case0_0\n        .4byte _case0_1\n        .4byte _case0_2\n        .4byte _case0_3\n        .4byte _case0_4\n        .4byte _case0_6\n        .4byte _case0_5\n        .4byte _case0_7\n        mov r4, #0x0\n        b _code0_31\n        mov r4, #0x1\n        b _code0_31\n        mov r4, #0x2\n        b _code0_31\n        add r4, #0x1\n        b _code0_31\n        ldr r3, _data0_7\n        ldrb r0, [r3, #0x13]\n        cmp r0, #0x0\n        beq _code0_31\n        sub r0, #0x1\n        mov r2, #0x0\n        strb r0, [r3, #0x13]\n        ldr r1, _data0_7+0x4\n        ldrb r0, [r3, #0x13]\n        add r1, #0x80\n        add r0, r1\n        strb r2, [r0]\n        ldrb r0, [r3, #0x13]\n        add r0, #0x1\n        add r0, r1\n        strb r2, [r0]\n        mov r0, #0x6c\n        bl sub_08051574\n        b _code0_31\n_data0_7:\n        .4byte gMenu\n        .4byte gSave\n        mov r0, #0x0\n        bl sub_08051480\n        b _code0_31\n        ldr r2, _data0_8\n        ldr r0, _data0_8+0x4\n        ldrb r1, [r0, #0x10]\n        lsl r1, #0x1\n        ldrb r0, [r0, #0x11]\n        lsl r0, #0x6\n        add r0, #0xc3\n        add r1, r0\n        lsl r1, #0x1\n        add r1, r2\n        ldrh r0, [r1]\n        lsr r0, #0x1\n        lsl r0, #0x18\n        lsr r0, #0x18\n        bl sub_08051480\n        b _code0_31\n_data0_8:\n        .4byte gBG3Buffer\n        .4byte gMenu\n        mov r3, #0x5\n        ldr r0, _data0_9\n        mov r6, r0\n        add r6, #0x80\n        mov r5, #0x0\n_code0_27:\n        add r2, r3, r6\n        ldrb r1, [r2]\n        cmp r1, #0x0\n        beq _code0_28\n        cmp r1, #0x20\n        bne _code0_29\n_code0_28:\n        strb r5, [r2]\n        sub r3, #0x1\n        cmp r3, #0x0\n        bge _code0_27\n_code0_29:\n        add r0, #0x80\n        ldrb r0, [r0]\n        mov r7, #0x3\n        cmp r0, #0x0\n        beq _code0_30\n        mov r7, #0x2\n_code0_30:\n        mov r0, #0x6a\n        bl sub_08051574\n        mov r0, r7\n        bl sub_080A7114\n_code0_31:\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x7]\n        mov r1, #0x2\n        cmp r0, #0x0\n        bne _code0_32\n        mov r1, #0x3\n_code0_32:\n        add r0, r4, r1\n        bl __modsi3\n        mov r4, r0\n        ldr r1, _data0_9+0x4\n        ldrb r0, [r1, #0x1]\n        cmp r0, r4\n        beq _code0_33\n        strb r4, [r1, #0x1]\n        bl sub_08051458\n        mov r0, #0x68\n        bl SoundReq\n_code0_33:\n        pop {r4, r5, r6, r7, pc}\n_data0_9:\n        .4byte gSave\n        .4byte gMenu",
      "score": "339",
      "id": 70
    },
    {
      "name": "sub_08052418",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"screen.h\"\n#include \"screen.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"main.h\"\n#include \"flags.h\"\n#include \"save.h\"\n#include \"utils.h\"\n#include \"fileScreen.h\"\n#include \"menu.h\"\n#include \"functions.h\"\n#include \"structures.h\"\n\nextern u8 gArea;\nextern Entity gPlayerEntity;\nextern u32 gUnk_03003FC0;\n\nextern u16 gWalletSizes[4];\nextern u8 gUnk_080FCA84[];\nextern u8 gUnk_080FCAC8[];\nextern u8 gUnk_08127D30[];\n\nvoid sub_080520C4();\nvoid sub_08052418();\n\ntypedef struct {\n    u8 _0[8];\n    u8 _8[2];\n    u16 _a[13];\n} struct_080FCAA4;\nstatic_assert(sizeof(struct_080FCAA4) == 0x24);\n\ntypedef struct {\n    void* _0;\n    void* _4;\n    void* _8;\n    u32 _c;\n    u8 _10;\n    u8 _11;\n    u8 _12;\n    u8 _13;\n    u32 _14;\n} struct_080FCA8C;\nstatic_assert(sizeof(struct_080FCA8C) == 0x18);\n\nextern struct_080FCA8C gUnk_080FCA8C;\nextern struct_080FCAA4 gUnk_080FCAA4;\n\nextern void CreateDialogBox();\n\n// end of existing headers\n\nvoid sub_08052418(int param_1, int param_2) {\n    int i;\n    struct_080FCA8C temp;\n\n    MemClear(&gBG1Buffer, 0x800);\n    gUnk_020227E8._0[0].WORD = 0xf;\n    gUnk_020227E8._0[2].WORD = 0xf;\n    gUnk_020227E8._0[4].WORD = 0xf;\n    gUnk_020227E8._0[6].WORD = 0xf;\n    gUnk_020227E8._0[param_2 * 2].BYTES.byte1 = 1;\n    MemCopy(&gUnk_080FCA8C, &temp, sizeof(temp));\n    i = param_1 * 0xc;\n    // temp._0 = gBG1Buffer[gUnk_080FCAA4._8[param_1]][gUnk_080FCAA4._0[gUnk_02000000->gameLanguage + i]] * 2;\n    temp._13 = ((temp._13 & 0xfe) | gUnk_080FCAA4._8[i + 1]) & 1;\n    sub_0805F46C(gUnk_080FCAA4._a[param_1], &temp);\n    gScreen.bg.bg1xOffset = 1;\n}\n",
      "asmCode": "thumb_func_start sub_08052418\nsub_08052418:\n        push {r4, r5, r6, lr}\n        sub sp, #0x18\n        mov r6, r0\n        mov r4, r1\n        ldr r0, _data0_0\n        mov r1, #0x80\n        lsl r1, #0x4\n        bl MemClear\n        ldr r0, _data0_0+0x4\n        mov r1, #0xf\n        str r1, [r0]\n        str r1, [r0, #0x8]\n        str r1, [r0, #0x10]\n        str r1, [r0, #0x18]\n        lsl r4, #0x3\n        add r0, #0x1\n        add r4, r0\n        mov r5, #0x1\n        strb r5, [r4]\n        ldr r4, _data0_0+0x8\n        mov r0, r4\n        mov r1, sp\n        mov r2, #0x18\n        bl MemCopy\n        lsl r2, r6, #0x1\n        add r2, r6\n        lsl r2, #0x2\n        ldr r0, _data0_0+0xc\n        add r2, r0\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r1, [r0, #0x7]\n        add r1, r2, r1\n        ldrb r0, [r2, #0x8]\n        lsl r0, #0x5\n        ldrb r1, [r1]\n        add r0, r1\n        lsl r0, #0x1\n        ldr r1, [r4]\n        add r1, r0\n        str r1, [sp]\n        mov r4, sp\n        ldrb r0, [r2, #0x9]\n        mov r1, r5\n        and r1, r0\n        ldrb r3, [r4, #0x13]\n        mov r0, #0x2\n        neg r0, r0\n        and r0, r3\n        orr r0, r1\n        strb r0, [r4, #0x13]\n        ldrh r0, [r2, #0xa]\n        mov r1, sp\n        bl sub_0805F46C\n        ldr r0, _data0_0+0x10\n        strh r5, [r0, #0x1a]\n        add sp, #0x18\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gBG1Buffer\n        .4byte gUnk_020227E8\n        .4byte gUnk_080FCA8C\n        .4byte gUnk_080FCAA4\n        .4byte gScreen",
      "score": "66",
      "id": 71
    },
    {
      "name": "GhostBrothers",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n\nextern void (*const gUnk_0811017C[])(Entity*);\n\nextern void (*const gUnk_08110274[])(Entity*);\n\nextern Dialog gUnk_08110280[];\n\nextern u32 gUnk_0811022E;\n\nextern u32 gUnk_0811033C[];\n\nextern u32 gUnk_08110188;\n\n// end of existing headers\n\nvoid GhostBrothers(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start GhostBrothers\nGhostBrothers:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x2\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r4\n        bl sub_08065C0C\n        b _code0_1\n_code0_0:\n        ldr r1, _data0_0\n        ldrb r0, [r4, #0xa]\n        lsl r0, #0x2\n        add r0, r1\n        ldr r1, [r0]\n        mov r0, r4\n        bl _call_via_r1\n        ldrb r0, [r4, #0xa]\n        cmp r0, #0x2\n        bhi _code0_1\n        ldr r2, _data0_0+0x4\n        ldrb r0, [r4, #0xf]\n        add r1, r0, #0x1\n        strb r1, [r4, #0xf]\n        lsl r0, #0x18\n        lsr r0, #0x1b\n        mov r1, #0x7\n        and r0, r1\n        add r0, r2\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        strh r0, [r4, #0x36]\n_code0_1:\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_08110164\n        .4byte gUnk_0811015C",
      "score": "41",
      "id": 72
    },
    {
      "name": "sub_08065C0C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n\nextern void (*const gUnk_0811017C[])(Entity*);\n\nextern void (*const gUnk_08110274[])(Entity*);\n\nextern Dialog gUnk_08110280[];\n\nextern u32 gUnk_0811022E;\n\nextern u32 gUnk_0811033C[];\n\nextern u32 gUnk_08110188;\n\n// end of existing headers\n\nvoid sub_08065C0C(Entity* this) {\n    u8 bVar1;\n    u32 uVar2;\n    u16* puVar3;\n\n    switch (this->action) {\n        case 0:\n            this->action = 1;\n            this->spriteSettings.b.draw = 1;\n            sub_0807DD50(this);\n            break;\n        case 1:\n            if (this->interactType == 2) {\n                this->action = 2;\n                this->interactType = 0;\n                InitAnimationForceUpdate(this, sub_0806F5A4(GetFacingDirection(this, &gPlayerEntity)));\n                sub_0806F118(this);\n            } else {\n                sub_0807DD94(this, NULL);\n            }\n            break;\n        case 2:\n            if (UpdateFuseInteraction(this) == 0) {\n                return;\n            }\n\n            this->action = 1;\n            break;\n        case 3:\n            if (--this->actionDelay != 0) {\n                return;\n            }\n            // TODO this is still wrong!\n            puVar3 = *(u16**)&this->field_0x6c.HWORD;\n            if (*puVar3 != 0xffff) {\n                gScreen.controls.alphaBlend = *puVar3;\n                this->actionDelay = (u8)puVar3[1];\n                *(u16**)&this->field_0x6c = puVar3 + 2;\n                return;\n            }\n\n            this->spriteSettings.b.draw = 0;\n\n            this->action = 1;\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08065C0C\nsub_08065C0C:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x1\n        beq _code0_2\n        cmp r0, #0x1\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_8\n_code0_0:\n        cmp r0, #0x2\n        beq _code0_4\n        cmp r0, #0x3\n        beq _code0_5\n        b _code0_8\n_code0_1:\n        mov r2, #0x1\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x5\n        and r0, r1\n        orr r0, r2\n        strb r0, [r4, #0x18]\n        mov r0, r4\n        bl sub_0807DD50\n        b _code0_8\n_code0_2:\n        mov r2, r4\n        add r2, #0x39\n        mov r1, #0x0\n        ldrsb r1, [r2, r1]\n        cmp r1, #0x2\n        bne _code0_3\n        mov r0, #0x0\n        strb r1, [r4, #0xc]\n        strb r0, [r2]\n        ldr r1, _data0_0\n        mov r0, r4\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        mov r1, r0\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        mov r0, r4\n        bl sub_0806F118\n        b _code0_8\n_data0_0:\n        .4byte gPlayerEntity\n_code0_3:\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_0807DD94\n        b _code0_8\n_code0_4:\n        mov r0, r4\n        bl UpdateFuseInteraction\n        cmp r0, #0x0\n        beq _code0_8\n        b _code0_7\n_code0_5:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_8\n        ldr r1, [r4, #0x6c]\n        ldrh r2, [r1]\n        ldr r0, _data0_1\n        cmp r2, r0\n        beq _code0_6\n        ldr r0, _data0_1+0x4\n        add r0, #0x68\n        strh r2, [r0]\n        add r1, #0x2\n        ldrh r0, [r1]\n        strb r0, [r4, #0xe]\n        add r1, #0x2\n        str r1, [r4, #0x6c]\n        b _code0_8\n_data0_1:\n        .4byte 0xffff\n        .4byte gScreen\n_code0_6:\n        ldrb r0, [r4, #0x18]\n        mov r1, #0x4\n        neg r1, r1\n        and r1, r0\n        strb r1, [r4, #0x18]\n_code0_7:\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n_code0_8:\n        pop {r4, pc}",
      "score": "98",
      "id": 73
    },
    {
      "name": "sub_08065D74",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n\nextern void (*const gUnk_0811017C[])(Entity*);\n\nextern void (*const gUnk_08110274[])(Entity*);\n\nextern Dialog gUnk_08110280[];\n\nextern u32 gUnk_0811022E;\n\nextern u32 gUnk_0811033C[];\n\nextern u32 gUnk_08110188;\n\n// end of existing headers\n\nvoid sub_08065D74(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08065D74\nsub_08065D74:\n        push {lr}\n        mov r1, r0\n        ldrb r0, [r1, #0xe]\n        sub r0, #0x1\n        strb r0, [r1, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_1\n        ldr r2, [r1, #0x6c]\n        ldrh r3, [r2]\n        ldr r0, _data0_0\n        cmp r3, r0\n        beq _code0_0\n        ldr r0, _data0_0+0x4\n        add r0, #0x68\n        strh r3, [r0]\n        ldrh r0, [r2, #0x2]\n        strb r0, [r1, #0xe]\n        add r0, r2, #0x4\n        str r0, [r1, #0x6c]\n        b _code0_1\n_data0_0:\n        .4byte 0xffff\n        .4byte gScreen\n_code0_0:\n        ldrb r0, [r1, #0xc]\n        add r0, #0x1\n        strb r0, [r1, #0xc]\n        mov r0, #0x0\n        bl TextboxNoOverlapFollow\n_code0_1:\n        pop {pc}",
      "score": "34",
      "id": 74
    },
    {
      "name": "sub_08065DB8",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n\nextern void (*const gUnk_0811017C[])(Entity*);\n\nextern void (*const gUnk_08110274[])(Entity*);\n\nextern Dialog gUnk_08110280[];\n\nextern u32 gUnk_0811022E;\n\nextern u32 gUnk_0811033C[];\n\nextern u32 gUnk_08110188;\n\n// end of existing headers\n\nvoid sub_08065DB8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08065DB8\nsub_08065DB8:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xd]\n        cmp r0, #0x4\n        bhi _code0_0\n        lsl r0, #0x2\n        ldr r1, _data0_0\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_0:\n        .4byte _other0_0\n_other0_0:\n        .4byte _case0_0\n        .4byte _case0_1\n        .4byte _code0_2\n        .4byte _case0_2\n        .4byte _case0_3\n_case0_0:\n        ldr r0, _data0_1\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_2\n        ldrb r0, [r4, #0xd]\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        mov r0, #0x3c\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        mov r1, #0x4\n        bl InitAnimationForceUpdate\n        b _code0_2\n_data0_1:\n        .4byte gTextBox\n_case0_1:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_2\n        ldrb r0, [r4, #0xd]\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        mov r0, #0xb4\n        strb r0, [r4, #0xe]\n        ldr r1, _data0_2\n        ldrb r0, [r1, #0x1]\n        add r0, #0x1\n        strb r0, [r1, #0x1]\n        mov r0, r4\n        mov r1, #0x2\n        bl InitAnimationForceUpdate\n        b _code0_2\n_data0_2:\n        .4byte gUnk_02018EB0\n_case0_2:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_2\n        mov r0, #0x0\n        bl TextboxNoOverlapFollow\n        ldrb r0, [r4, #0xd]\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        b _code0_2\n_case0_3:\n        ldr r0, _data0_3\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_2\n        ldrb r0, [r4, #0xd]\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        mov r0, #0x1e\n        strb r0, [r4, #0xe]\n        ldr r0, _data0_3+0x4\n        str r0, [r4, #0x6c]\n        b _code0_2\n_data0_3:\n        .4byte gTextBox\n        .4byte gUnk_0811022E\n_code0_0:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_2\n        ldr r1, [r4, #0x6c]\n        ldrh r2, [r1]\n        ldr r0, _data0_4\n        cmp r2, r0\n        beq _code0_1\n        ldr r0, _data0_4+0x4\n        add r0, #0x68\n        strh r2, [r0]\n        ldrh r0, [r1, #0x2]\n        strb r0, [r4, #0xe]\n        add r0, r1, #0x4\n        str r0, [r4, #0x6c]\n        b _code0_2\n_data0_4:\n        .4byte 0xffff\n        .4byte gScreen\n_code0_1:\n        ldr r1, _data0_5\n        ldrb r0, [r1]\n        add r0, #0x1\n        strb r0, [r1]\n        bl DeleteThisEntity\n_code0_2:\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        pop {r4, pc}\n_data0_5:\n        .4byte gUnk_02018EB0",
      "score": "126",
      "id": 75
    },
    {
      "name": "sub_08065EDC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"screen.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n\nextern void (*const gUnk_0811017C[])(Entity*);\n\nextern void (*const gUnk_08110274[])(Entity*);\n\nextern Dialog gUnk_08110280[];\n\nextern u32 gUnk_0811022E;\n\nextern u32 gUnk_0811033C[];\n\nextern u32 gUnk_08110188;\n\n// end of existing headers\n\nvoid sub_08065EDC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08065EDC\nsub_08065EDC:\n        push {lr}\n        mov r2, r0\n        ldrb r0, [r2, #0xe]\n        sub r0, #0x1\n        strb r0, [r2, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_1\n        ldr r1, [r2, #0x6c]\n        ldrh r3, [r1]\n        ldr r0, _data0_0\n        cmp r3, r0\n        beq _code0_0\n        ldr r0, _data0_0+0x4\n        add r0, #0x68\n        strh r3, [r0]\n        add r1, #0x2\n        ldrh r0, [r1]\n        strb r0, [r2, #0xe]\n        add r1, #0x2\n        str r1, [r2, #0x6c]\n        b _code0_1\n_data0_0:\n        .4byte 0xffff\n        .4byte gScreen\n_code0_0:\n        ldrb r0, [r2, #0xc]\n        add r0, #0x1\n        strb r0, [r2, #0xc]\n        mov r0, r2\n        bl sub_08078778\n_code0_1:\n        pop {pc}",
      "score": "35",
      "id": 76
    },
    {
      "name": "sub_080374A4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"sprite.h\"\n#include \"enemy.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n// Gibudo\nvoid sub_08037794();\nvoid sub_08037B10();\nvoid sub_0803797C();\nvoid sub_080379BC();\nvoid sub_08037C0C();\nu32 sub_08037810();\nvoid sub_080377B0();\nu32 sub_080378B0();\nu32 sub_08037914();\nu32 sub_080379EC();\nvoid sub_08037A58();\nvoid sub_08037ACC();\nvoid sub_08037B48();\nvoid sub_08037A14();\n\nextern void sub_0804A4E4(Entity*, Entity*);\nextern Entity* sub_08049DF4(u32);\nu32 sub_0804A044(Entity*, Entity*, u32);\nextern void sub_0800449C(Entity*, u32);\n\nextern void (*const gGibdo[6])(Entity*);\nextern void (*const gUnk_080CF2AC[9])(Entity*);\nextern Entity* gUnk_020000B0;\n\n// end of existing headers\n\nvoid sub_080374A4(Entity* this) {\n    u8 x;\n    if (this->bitfield == 0x87) {\n        if (this->action == 0x6) {\n            sub_08037ACC(this);\n        }\n        this->action = 0x8;\n        this->actionDelay = 0x3c;\n        this->flags &= 0x7F;\n        sub_08037B48(this);\n    } else {\n        if (this->action != 0x6) {\n            if (this->damageType == 0x27) {\n                if (this->bitfield == 0x80) {\n                    sub_08037A14(this);\n                }\n            } else {\n                if ((u8)(this->action - 1) < 2) {\n                    this->action = 1;\n                    x = DirectionTurnAround(this->field_0x3e);\n                    this->direction = x;\n                    this->animationState = x >> 3;\n                    InitAnimationForceUpdate(this, this->animationState);\n                    if (sub_08037810(this) != 0) {\n                        this->actionDelay = 4;\n                    }\n                }\n            }\n        } else {\n            sub_08037A58(this);\n        }\n    }\n    if (this->field_0x43 != 0) {\n        sub_0804A9FC(this, 0x1c);\n    }\n    sub_0804AA30(this, gGibdo);\n}\n",
      "asmCode": "thumb_func_start sub_080374A4\nsub_080374A4:\n        push {r4, lr}\n        mov r4, r0\n        add r0, #0x41\n        ldrb r2, [r0]\n        cmp r2, #0x87\n        bne _code0_1\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x6\n        bne _code0_0\n        mov r0, r4\n        bl sub_08037ACC\n_code0_0:\n        mov r0, #0x8\n        strb r0, [r4, #0xc]\n        mov r0, #0x3c\n        strb r0, [r4, #0xe]\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x10]\n        mov r0, r4\n        bl sub_08037B48\n        b _code0_4\n_code0_1:\n        ldrb r0, [r4, #0xc]\n        mov r1, r0\n        cmp r1, #0x6\n        beq _code0_3\n        mov r0, r4\n        add r0, #0x3f\n        ldrb r0, [r0]\n        cmp r0, #0x27\n        bne _code0_2\n        cmp r2, #0x80\n        bne _code0_2\n        mov r0, r4\n        bl sub_08037A14\n        b _code0_4\n_code0_2:\n        sub r0, r1, #0x1\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x1\n        bhi _code0_4\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        add r0, #0x3e\n        ldrb r0, [r0]\n        mov r1, #0x10\n        eor r0, r1\n        add r0, #0x4\n        mov r1, #0x18\n        and r0, r1\n        strb r0, [r4, #0x15]\n        lsr r0, #0x3\n        strb r0, [r4, #0x14]\n        ldrb r1, [r4, #0x14]\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        mov r0, r4\n        bl sub_08037810\n        cmp r0, #0x0\n        beq _code0_4\n        mov r0, #0x4\n        strb r0, [r4, #0xe]\n        b _code0_4\n_code0_3:\n        mov r0, r4\n        bl sub_08037A58\n_code0_4:\n        mov r0, r4\n        add r0, #0x43\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_5\n        mov r0, r4\n        mov r1, #0x1c\n        bl sub_0804A9FC\n_code0_5:\n        ldr r1, _data0_0\n        mov r0, r4\n        bl sub_0804AA30\n        pop {r4, pc}\n_data0_0:\n        .4byte gGibdo",
      "score": "88",
      "id": 77
    },
    {
      "name": "sub_080376D0",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"sprite.h\"\n#include \"enemy.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n// Gibudo\nvoid sub_08037794();\nvoid sub_08037B10();\nvoid sub_0803797C();\nvoid sub_080379BC();\nvoid sub_08037C0C();\nu32 sub_08037810();\nvoid sub_080377B0();\nu32 sub_080378B0();\nu32 sub_08037914();\nu32 sub_080379EC();\nvoid sub_08037A58();\nvoid sub_08037ACC();\nvoid sub_08037B48();\nvoid sub_08037A14();\n\nextern void sub_0804A4E4(Entity*, Entity*);\nextern Entity* sub_08049DF4(u32);\nu32 sub_0804A044(Entity*, Entity*, u32);\nextern void sub_0800449C(Entity*, u32);\n\nextern void (*const gGibdo[6])(Entity*);\nextern void (*const gUnk_080CF2AC[9])(Entity*);\nextern Entity* gUnk_020000B0;\n\n// end of existing headers\n\nvoid sub_080376D0(Entity* this) {\n    u8* x;\n    if (sub_080379EC(this) == 0) {\n        ResetPlayer();\n        gPlayerState.field_0x1a[0] = gPlayerState.field_0x1a[0] | 0x80;\n        gPlayerState.field_0xa = gPlayerState.field_0xa | 0x80;\n        CopyPositionAndSpriteOffset(&gPlayerEntity, this);\n        UpdateAnimationSingleFrame(this);\n        x = &this->frames.all;\n        if ((*x & 0x1) != 0) {\n            if (!(--this->field_0x7c.BYTES.byte0)) {\n                sub_08037A58(this);\n            }\n        } else {\n            *x = *x ^ 1;\n            sub_08037B10(this);\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080376D0\nsub_080376D0:\n        push {r4, lr}\n        mov r4, r0\n        bl sub_080379EC\n        cmp r0, #0x0\n        bne _code0_1\n        bl ResetPlayer\n        ldr r2, _data0_0\n        ldrb r1, [r2, #0x1a]\n        mov r0, #0x80\n        orr r1, r0\n        strb r1, [r2, #0x1a]\n        ldrb r1, [r2, #0xa]\n        orr r0, r1\n        strb r0, [r2, #0xa]\n        ldr r0, _data0_0+0x4\n        mov r1, r4\n        bl CopyPositionAndSpriteOffset\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        mov r2, r4\n        add r2, #0x5a\n        ldrb r1, [r2]\n        mov r0, #0x1\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_1\n        mov r1, r4\n        add r1, #0x7c\n        ldrb r0, [r1]\n        sub r0, #0x1\n        strb r0, [r1]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, r4\n        bl sub_08037A58\n        b _code0_1\n_data0_0:\n        .4byte gPlayerState\n        .4byte gPlayerEntity\n_code0_0:\n        ldrb r0, [r2]\n        mov r1, #0x1\n        eor r0, r1\n        strb r0, [r2]\n        mov r0, r4\n        bl sub_08037B10\n_code0_1:\n        pop {r4, pc}",
      "score": "51",
      "id": 78
    },
    {
      "name": "sub_0803797C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"sprite.h\"\n#include \"enemy.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n// Gibudo\nvoid sub_08037794();\nvoid sub_08037B10();\nvoid sub_0803797C();\nvoid sub_080379BC();\nvoid sub_08037C0C();\nu32 sub_08037810();\nvoid sub_080377B0();\nu32 sub_080378B0();\nu32 sub_08037914();\nu32 sub_080379EC();\nvoid sub_08037A58();\nvoid sub_08037ACC();\nvoid sub_08037B48();\nvoid sub_08037A14();\n\nextern void sub_0804A4E4(Entity*, Entity*);\nextern Entity* sub_08049DF4(u32);\nu32 sub_0804A044(Entity*, Entity*, u32);\nextern void sub_0800449C(Entity*, u32);\n\nextern void (*const gGibdo[6])(Entity*);\nextern void (*const gUnk_080CF2AC[9])(Entity*);\nextern Entity* gUnk_020000B0;\n\n// end of existing headers\n\nvoid sub_0803797C(Entity* this) {\n    u32 z;\n    u32 m;\n    this->actionDelay = 0x18;\n    this->field_0xf = 0x8;\n    z = sub_080045D4(this->x.HALF.HI, this->y.HALF.HI, this->field_0x78.HWORD, this->field_0x7a.HWORD);\n    m = (z + 4) & 0x18;\n    this->direction = m;\n    m = m / 8;\n    if (m != this->animationState) {\n        this->animationState = m;\n        InitAnimationForceUpdate(this, m + 4);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0803797C\nsub_0803797C:\n        push {r4, r5, lr}\n        mov r5, r0\n        mov r4, #0x18\n        mov r0, #0x18\n        strb r0, [r5, #0xe]\n        mov r0, #0x8\n        strb r0, [r5, #0xf]\n        mov r1, #0x2e\n        ldrsh r0, [r5, r1]\n        mov r2, #0x32\n        ldrsh r1, [r5, r2]\n        mov r2, r5\n        add r2, #0x78\n        ldrh r2, [r2]\n        mov r3, r5\n        add r3, #0x7a\n        ldrh r3, [r3]\n        bl sub_080045D4\n        add r0, #0x4\n        and r0, r4\n        strb r0, [r5, #0x15]\n        lsr r0, #0x3\n        ldrb r1, [r5, #0x14]\n        cmp r0, r1\n        beq _code0_0\n        strb r0, [r5, #0x14]\n        add r1, r0, #0x4\n        mov r0, r5\n        bl InitAnimationForceUpdate\n_code0_0:\n        pop {r4, r5, pc}",
      "score": "33",
      "id": 79
    },
    {
      "name": "sub_08037B48",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"sprite.h\"\n#include \"enemy.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n// Gibudo\nvoid sub_08037794();\nvoid sub_08037B10();\nvoid sub_0803797C();\nvoid sub_080379BC();\nvoid sub_08037C0C();\nu32 sub_08037810();\nvoid sub_080377B0();\nu32 sub_080378B0();\nu32 sub_08037914();\nu32 sub_080379EC();\nvoid sub_08037A58();\nvoid sub_08037ACC();\nvoid sub_08037B48();\nvoid sub_08037A14();\n\nextern void sub_0804A4E4(Entity*, Entity*);\nextern Entity* sub_08049DF4(u32);\nu32 sub_0804A044(Entity*, Entity*, u32);\nextern void sub_0800449C(Entity*, u32);\n\nextern void (*const gGibdo[6])(Entity*);\nextern void (*const gUnk_080CF2AC[9])(Entity*);\nextern Entity* gUnk_020000B0;\n\n// end of existing headers\n\nvoid sub_08037B48(Entity* this) {\n    Entity* E;\n    E = CreateObject(OBJECT_2A, 3, 0);\n    if (E != 0) {\n        E->type2 = this->actionDelay;\n        E->spritePriority.b0 = (E->spritePriority.b0 & 0xf8) | 3;\n        E->spriteOffsetX = 0;\n        E->spriteOffsetY = 0xfc;\n        E->parent = this;\n    }\n    *(Entity**)&this->field_0x80.HWORD = E;\n    E = CreateObject(OBJECT_2A, 3, 0);\n    if (E != 0) {\n        E->type2 = this->actionDelay;\n        E->spritePriority.b0 = (E->spritePriority.b0 & 0xf8) | 3;\n        E->spriteOffsetX = 0xfd;\n        E->spriteOffsetY = 0xf8;\n        E->parent = this;\n    }\n    *(Entity**)&this->cutsceneBeh.HWORD = E;\n    E = CreateObject(OBJECT_2A, 3, 0);\n    if (E != 0) {\n        E->type2 = this->actionDelay;\n        E->spritePriority.b0 = (E->spritePriority.b0 & 0xf8) | 3;\n        E->spriteOffsetX = 0x5;\n        E->spriteOffsetY = 0xf5;\n        E->parent = this;\n    }\n    this->attachedEntity = E;\n}\n",
      "asmCode": "thumb_func_start sub_08037B48\nsub_08037B48:\n        push {r4, lr}\n        mov r4, r0\n        mov r0, #0x2a\n        mov r1, #0x3\n        mov r2, #0x0\n        bl CreateObject\n        mov r3, r0\n        cmp r3, #0x0\n        beq _code0_0\n        ldrb r0, [r4, #0xe]\n        mov r2, #0x0\n        strb r0, [r3, #0xb]\n        mov r0, #0x29\n        add r0, r3\n        mov r12, r0\n        ldrb r1, [r0]\n        mov r0, #0x8\n        neg r0, r0\n        and r0, r1\n        mov r1, #0x3\n        orr r0, r1\n        mov r1, r12\n        strb r0, [r1]\n        mov r0, r3\n        add r0, #0x62\n        strb r2, [r0]\n        mov r1, r3\n        add r1, #0x63\n        mov r0, #0xfc\n        strb r0, [r1]\n        str r4, [r3, #0x50]\n_code0_0:\n        mov r0, r4\n        add r0, #0x80\n        str r3, [r0]\n        mov r0, #0x2a\n        mov r1, #0x3\n        mov r2, #0x0\n        bl CreateObject\n        mov r3, r0\n        cmp r3, #0x0\n        beq _code0_1\n        ldrb r0, [r4, #0xe]\n        strb r0, [r3, #0xb]\n        mov r0, #0x29\n        add r0, r3\n        mov r12, r0\n        ldrb r1, [r0]\n        mov r2, #0x8\n        neg r2, r2\n        mov r0, r2\n        and r0, r1\n        mov r1, #0x3\n        orr r0, r1\n        mov r1, r12\n        strb r0, [r1]\n        mov r1, r3\n        add r1, #0x62\n        mov r0, #0xfd\n        strb r0, [r1]\n        mov r0, r3\n        add r0, #0x63\n        strb r2, [r0]\n        str r4, [r3, #0x50]\n_code0_1:\n        mov r0, r4\n        add r0, #0x84\n        str r3, [r0]\n        mov r0, #0x2a\n        mov r1, #0x3\n        mov r2, #0x0\n        bl CreateObject\n        mov r3, r0\n        cmp r3, #0x0\n        beq _code0_2\n        ldrb r0, [r4, #0xe]\n        strb r0, [r3, #0xb]\n        mov r2, r3\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x8\n        neg r0, r0\n        and r0, r1\n        mov r1, #0x3\n        orr r0, r1\n        strb r0, [r2]\n        mov r1, r3\n        add r1, #0x62\n        mov r0, #0x5\n        strb r0, [r1]\n        add r1, #0x1\n        mov r0, #0xf5\n        strb r0, [r1]\n        str r4, [r3, #0x50]\n_code0_2:\n        str r3, [r4, #0x54]\n        pop {r4, pc}",
      "score": "99",
      "id": 80
    },
    {
      "name": "sub_08037C0C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"sprite.h\"\n#include \"enemy.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n// Gibudo\nvoid sub_08037794();\nvoid sub_08037B10();\nvoid sub_0803797C();\nvoid sub_080379BC();\nvoid sub_08037C0C();\nu32 sub_08037810();\nvoid sub_080377B0();\nu32 sub_080378B0();\nu32 sub_08037914();\nu32 sub_080379EC();\nvoid sub_08037A58();\nvoid sub_08037ACC();\nvoid sub_08037B48();\nvoid sub_08037A14();\n\nextern void sub_0804A4E4(Entity*, Entity*);\nextern Entity* sub_08049DF4(u32);\nu32 sub_0804A044(Entity*, Entity*, u32);\nextern void sub_0800449C(Entity*, u32);\n\nextern void (*const gGibdo[6])(Entity*);\nextern void (*const gUnk_080CF2AC[9])(Entity*);\nextern Entity* gUnk_020000B0;\n\n// end of existing headers\n\nvoid sub_08037C0C(Entity* this, Entity* that) {\n    if (this->field_0x80.HWORD != 0) {\n        this->actionDelay = 0xf;\n        this->parent = that;\n    }\n    if (this->cutsceneBeh.HWORD != 0) {\n        this->actionDelay = 0xf;\n        this->parent = that;\n    }\n    if (this->attachedEntity != 0) {\n        this->actionDelay = 0xf;\n        this->parent = that;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08037C0C\nsub_08037C0C:\n        push {lr}\n        mov r3, r0\n        add r0, #0x80\n        ldr r2, [r0]\n        cmp r2, #0x0\n        beq _code0_0\n        mov r0, #0xf\n        strb r0, [r2, #0xe]\n        str r1, [r2, #0x50]\n_code0_0:\n        mov r0, r3\n        add r0, #0x84\n        ldr r2, [r0]\n        cmp r2, #0x0\n        beq _code0_1\n        mov r0, #0xf\n        strb r0, [r2, #0xe]\n        str r1, [r2, #0x50]\n_code0_1:\n        ldr r2, [r3, #0x54]\n        cmp r2, #0x0\n        beq _code0_2\n        mov r0, #0xf\n        strb r0, [r2, #0xe]\n        str r1, [r2, #0x50]\n_code0_2:\n        pop {pc}",
      "score": "29",
      "id": 81
    },
    {
      "name": "sub_0806991C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_08111C48[])(Entity*);\n\nvoid sub_080697A4(Entity* this);\nvoid sub_08069838(Entity* this);\n\nextern SpriteLoadData gUnk_08111C3C;\n\nextern u8 gUnk_08111C9C[];\n\nextern u8 gUnk_08111CA8[];\n\nextern u8 gUnk_08111CB4[];\n\nextern u8 gUnk_08111CB8[];\n\nvoid sub_08069888(Entity* this);\n\nextern u16 gUnk_08111C50[];\n\n// end of existing headers\n\nvoid sub_0806991C(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806991C\nsub_0806991C:\n        push {r4, r5, r6, lr}\n        mov r5, r0\n        mov r4, r1\n        bl Random\n        mov r1, #0x1f\n        and r0, r1\n        add r0, #0x3c\n        mov r1, r5\n        add r1, #0x68\n        mov r3, #0x0\n        strb r0, [r1]\n        mov r0, r5\n        add r0, #0x69\n        mov r1, #0x0\n        ldrsb r1, [r0, r1]\n        lsl r1, #0x2\n        ldr r0, _data0_0\n        add r1, r0\n        ldr r2, _data0_0+0x4\n        ldrh r0, [r1]\n        ldrh r6, [r2, #0x6]\n        add r0, r6\n        strh r0, [r4, #0x1e]\n        ldrh r0, [r1, #0x2]\n        ldrh r2, [r2, #0x8]\n        add r0, r2\n        strh r0, [r4, #0x22]\n        mov r0, #0x8\n        strb r0, [r4, #0x19]\n        ldr r0, [r4, #0x8]\n        mov r1, #0x2\n        orr r0, r1\n        str r0, [r4, #0x8]\n        str r3, [r4, #0x14]\n        mov r1, #0x1e\n        ldrsh r0, [r4, r1]\n        mov r2, #0x2e\n        ldrsh r1, [r5, r2]\n        sub r0, r1\n        mov r3, #0x22\n        ldrsh r1, [r4, r3]\n        mov r6, #0x32\n        ldrsh r2, [r5, r6]\n        sub r1, r2\n        bl sub_080045DA\n        strb r0, [r5, #0x15]\n        ldrb r2, [r5, #0x14]\n        mov r1, #0x80\n        and r1, r2\n        ldr r2, _data0_0+0x8\n        lsl r0, #0x18\n        lsr r0, #0x1c\n        add r0, r2\n        ldrb r0, [r0]\n        orr r1, r0\n        strb r1, [r5, #0x14]\n        ldr r2, _data0_0+0xc\n        ldrb r1, [r2, #0x7]\n        mov r0, #0x1\n        orr r0, r1\n        strb r0, [r2, #0x7]\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_08111C5C\n        .4byte gRoomControls\n        .4byte gUnk_08111C74\n        .4byte gActiveScriptInfo",
      "score": "69",
      "id": 82
    },
    {
      "name": "sub_080699AC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_08111C48[])(Entity*);\n\nvoid sub_080697A4(Entity* this);\nvoid sub_08069838(Entity* this);\n\nextern SpriteLoadData gUnk_08111C3C;\n\nextern u8 gUnk_08111C9C[];\n\nextern u8 gUnk_08111CA8[];\n\nextern u8 gUnk_08111CB4[];\n\nextern u8 gUnk_08111CB8[];\n\nvoid sub_08069888(Entity* this);\n\nextern u16 gUnk_08111C50[];\n\n// end of existing headers\n\nvoid sub_080699AC(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_080699AC\nsub_080699AC:\n        push {r4, r5, r6, lr}\n        mov r5, r0\n        mov r4, r1\n        bl Random\n        mov r1, #0x1f\n        and r0, r1\n        add r0, #0x3c\n        mov r1, r5\n        add r1, #0x68\n        mov r3, #0x0\n        strb r0, [r1]\n        mov r0, r5\n        add r0, #0x69\n        mov r1, #0x0\n        ldrsb r1, [r0, r1]\n        lsl r1, #0x2\n        ldr r0, _data0_0\n        add r1, r0\n        ldr r2, _data0_0+0x4\n        ldrh r0, [r1]\n        ldrh r6, [r2, #0x6]\n        add r0, r6\n        strh r0, [r4, #0x1e]\n        ldrh r0, [r1, #0x2]\n        ldrh r2, [r2, #0x8]\n        add r0, r2\n        strh r0, [r4, #0x22]\n        mov r0, #0x8\n        strb r0, [r4, #0x19]\n        ldr r0, [r4, #0x8]\n        mov r1, #0x2\n        orr r0, r1\n        str r0, [r4, #0x8]\n        str r3, [r4, #0x14]\n        mov r1, #0x1e\n        ldrsh r0, [r4, r1]\n        mov r2, #0x2e\n        ldrsh r1, [r5, r2]\n        sub r0, r1\n        mov r3, #0x22\n        ldrsh r1, [r4, r3]\n        mov r6, #0x32\n        ldrsh r2, [r5, r6]\n        sub r1, r2\n        bl sub_080045DA\n        strb r0, [r5, #0x15]\n        ldrb r2, [r5, #0x14]\n        mov r1, #0x80\n        and r1, r2\n        ldr r2, _data0_0+0x8\n        lsl r0, #0x18\n        lsr r0, #0x1c\n        add r0, r2\n        ldrb r0, [r0]\n        orr r1, r0\n        strb r1, [r5, #0x14]\n        ldr r2, _data0_0+0xc\n        ldrb r1, [r2, #0x7]\n        mov r0, #0x1\n        orr r0, r1\n        strb r0, [r2, #0x7]\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_08111C84\n        .4byte gRoomControls\n        .4byte gUnk_08111C8C\n        .4byte gActiveScriptInfo",
      "score": "69",
      "id": 83
    },
    {
      "name": "sub_0806407C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n\n// end of existing headers\n\n\n         void sub_0806407C(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806407C\nsub_0806407C:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        mov r5, r1\n        ldrb r0, [r5, #0x18]\n        cmp r0, #0x0\n        bne _code0_6\n        add r0, #0x1\n        strb r0, [r5, #0x18]\n        bl Random\n        mov r1, #0x3f\n        and r0, r1\n        add r0, #0x20\n        strh r0, [r5, #0x12]\n        bl Random\n        mov r1, r0\n        mov r0, #0x18\n        and r1, r0\n        ldrb r0, [r4, #0x15]\n        cmp r0, #0x8\n        beq _code0_2\n        cmp r0, #0x8\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_5\n_code0_0:\n        cmp r0, #0x10\n        beq _code0_3\n        cmp r0, #0x18\n        beq _code0_4\n        b _code0_5\n_code0_1:\n        cmp r1, #0x10\n        bne _code0_5\n        mov r1, #0x8\n        b _code0_5\n_code0_2:\n        cmp r1, #0x18\n        bne _code0_5\n        mov r1, #0x10\n        b _code0_5\n_code0_3:\n        cmp r1, #0x0\n        bne _code0_5\n        mov r1, #0x18\n        b _code0_5\n_code0_4:\n        cmp r1, #0x8\n        bne _code0_5\n        mov r1, #0x0\n_code0_5:\n        strb r1, [r4, #0x15]\n        mov r0, r1\n        bl sub_0806F5B0\n        strb r0, [r4, #0x14]\n        mov r0, #0x80\n        strh r0, [r4, #0x24]\n_code0_6:\n        ldrb r0, [r4, #0x14]\n        lsr r2, r0, #0x1\n        add r1, r2, #0x4\n        mov r0, r4\n        add r0, #0x58\n        ldrb r0, [r0]\n        cmp r1, r0\n        beq _code0_7\n        mov r0, r4\n        add r0, #0x70\n        mov r1, #0x0\n        ldrsb r1, [r0, r1]\n        add r1, #0x4\n        add r1, r2, r1\n        mov r0, r4\n        bl InitializeAnimation\n_code0_7:\n        mov r0, r4\n        bl ProcessMovement\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        mov r2, r4\n        add r2, #0x68\n        mov r3, #0x0\n        ldrsh r0, [r2, r3]\n        sub r1, r0\n        cmp r1, #0x10\n        ble _code0_8\n        ldrh r0, [r2]\n        add r0, #0x10\n        strh r0, [r4, #0x2e]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_8:\n        mov r3, #0x10\n        neg r3, r3\n        cmp r1, r3\n        bge _code0_9\n        ldrh r0, [r2]\n        sub r0, #0x10\n        strh r0, [r4, #0x2e]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_9:\n        mov r6, #0x32\n        ldrsh r1, [r4, r6]\n        mov r2, r4\n        add r2, #0x6a\n        mov r6, #0x0\n        ldrsh r0, [r2, r6]\n        sub r1, r0\n        cmp r1, #0x10\n        ble _code0_10\n        ldrh r0, [r2]\n        add r0, #0x10\n        strh r0, [r4, #0x32]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_10:\n        cmp r1, r3\n        bge _code0_11\n        ldrh r0, [r2]\n        sub r0, #0x10\n        strh r0, [r4, #0x32]\n        mov r0, #0x1\n        strh r0, [r5, #0x12]\n_code0_11:\n        ldrh r0, [r5, #0x12]\n        sub r0, #0x1\n        strh r0, [r5, #0x12]\n        lsl r0, #0x10\n        cmp r0, #0x0\n        beq _code0_12\n        ldr r1, _data0_0\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_12:\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gActiveScriptInfo",
      "score": "140",
      "id": 84
    },
    {
      "name": "sub_08064198",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n\n// end of existing headers\n\nvoid sub_08064198(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08064198\nsub_08064198:\n        push {r4, r5, r6, lr}\n        mov r5, r0\n        mov r4, r5\n        add r4, #0x71\n        ldrb r1, [r4]\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        cmp r0, #0x0\n        ble _code0_0\n        sub r0, r1, #0x1\n        strb r0, [r4]\n_code0_0:\n        ldr r0, _data0_0\n        mov r2, #0x32\n        ldrsh r1, [r0, r2]\n        mov r2, #0x32\n        ldrsh r0, [r5, r2]\n        sub r1, r0\n        cmp r1, #0x2\n        ble _code0_1\n        mov r1, #0x2\n_code0_1:\n        mov r0, #0x2\n        neg r0, r0\n        cmp r1, r0\n        bge _code0_2\n        mov r1, r0\n_code0_2:\n        mov r6, r4\n        cmp r1, #0x0\n        beq _code0_7\n        cmp r1, #0x0\n        ble _code0_3\n        mov r0, #0x10\n        b _code0_4\n_data0_0:\n        .4byte gPlayerEntity\n_code0_3:\n        mov r0, #0x0\n_code0_4:\n        strb r0, [r5, #0x15]\n        cmp r1, #0x0\n        bge _code0_5\n        neg r1, r1\n_code0_5:\n        lsl r0, r1, #0x8\n        strh r0, [r5, #0x24]\n        mov r0, #0x32\n        ldrsh r4, [r5, r0]\n        mov r0, r5\n        bl ProcessMovement\n        mov r1, #0x32\n        ldrsh r0, [r5, r1]\n        mov r6, r5\n        add r6, #0x71\n        cmp r4, r0\n        beq _code0_7\n        ldr r0, _data0_1\n        mov r2, #0x24\n        ldrsh r1, [r0, r2]\n        mov r0, #0xa0\n        lsl r0, #0x1\n        cmp r1, r0\n        ble _code0_6\n        ldr r0, _data0_1+0x4\n        ldr r0, [r0]\n        mov r1, #0x6\n        bl __modsi3\n        cmp r0, #0x0\n        bne _code0_6\n        mov r0, r5\n        bl CreateDustSmall\n_code0_6:\n        mov r4, r5\n        add r4, #0x71\n        mov r0, #0xa\n        strb r0, [r4]\n        ldrb r0, [r5, #0x15]\n        bl sub_0806F5B0\n        strb r0, [r5, #0x14]\n        lsl r0, #0x18\n        lsr r0, #0x19\n        mov r1, r5\n        add r1, #0x70\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        add r1, #0x4\n        add r1, r0, r1\n        mov r0, r5\n        add r0, #0x58\n        mov r6, r4\n        ldrb r0, [r0]\n        cmp r1, r0\n        beq _code0_7\n        mov r0, r5\n        bl InitializeAnimation\n_code0_7:\n        mov r0, #0x0\n        ldrsb r0, [r6, r0]\n        cmp r0, #0x0\n        bne _code0_8\n        ldr r1, _data0_1\n        mov r0, r5\n        bl GetFacingDirection\n        bl sub_0806F5B0\n        strb r0, [r5, #0x14]\n        lsl r0, #0x18\n        lsr r0, #0x19\n        mov r1, r5\n        add r1, #0x70\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        add r1, r0, r1\n        mov r0, r5\n        add r0, #0x58\n        ldrb r0, [r0]\n        cmp r1, r0\n        beq _code0_8\n        mov r0, r5\n        bl InitializeAnimation\n_code0_8:\n        mov r0, r5\n        bl sub_0806ED78\n        mov r0, #0x36\n        ldrsh r4, [r5, r0]\n        ldr r0, _data0_1\n        ldrh r0, [r0, #0x36]\n        strh r0, [r5, #0x36]\n        cmp r4, #0x0\n        bge _code0_9\n        lsl r0, #0x10\n        cmp r0, #0x0\n        bne _code0_9\n        mov r0, r5\n        bl CreateDustSmall\n_code0_9:\n        pop {r4, r5, r6, pc}\n_data0_1:\n        .4byte gPlayerEntity\n        .4byte gScreenTransition",
      "score": "144",
      "id": 85
    },
    {
      "name": "sub_080642B8",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n\n// end of existing headers\n\nvoid sub_080642B8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080642B8\nsub_080642B8:\n        push {r4, r5, r6, lr}\n        mov r5, r0\n        mov r4, r5\n        add r4, #0x71\n        ldrb r1, [r4]\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        cmp r0, #0x0\n        ble _code0_0\n        sub r0, r1, #0x1\n        strb r0, [r4]\n_code0_0:\n        ldr r0, _data0_0\n        mov r2, #0x2e\n        ldrsh r1, [r0, r2]\n        mov r2, #0x2e\n        ldrsh r0, [r5, r2]\n        sub r1, r0\n        cmp r1, #0x2\n        ble _code0_1\n        mov r1, #0x2\n_code0_1:\n        mov r0, #0x2\n        neg r0, r0\n        cmp r1, r0\n        bge _code0_2\n        mov r1, r0\n_code0_2:\n        mov r6, r4\n        cmp r1, #0x0\n        beq _code0_7\n        cmp r1, #0x0\n        ble _code0_3\n        mov r0, #0x8\n        b _code0_4\n_data0_0:\n        .4byte gPlayerEntity\n_code0_3:\n        mov r0, #0x18\n_code0_4:\n        strb r0, [r5, #0x15]\n        cmp r1, #0x0\n        bge _code0_5\n        neg r1, r1\n_code0_5:\n        lsl r0, r1, #0x8\n        strh r0, [r5, #0x24]\n        mov r0, #0x2e\n        ldrsh r4, [r5, r0]\n        mov r0, r5\n        bl ProcessMovement\n        mov r1, #0x2e\n        ldrsh r0, [r5, r1]\n        mov r6, r5\n        add r6, #0x71\n        cmp r4, r0\n        beq _code0_7\n        ldr r0, _data0_1\n        mov r2, #0x24\n        ldrsh r1, [r0, r2]\n        mov r0, #0xa0\n        lsl r0, #0x1\n        cmp r1, r0\n        ble _code0_6\n        ldr r0, _data0_1+0x4\n        ldr r0, [r0]\n        mov r1, #0x6\n        bl __modsi3\n        cmp r0, #0x0\n        bne _code0_6\n        mov r0, r5\n        bl CreateDustSmall\n_code0_6:\n        mov r4, r5\n        add r4, #0x71\n        mov r0, #0xa\n        strb r0, [r4]\n        ldrb r0, [r5, #0x15]\n        bl sub_0806F5B0\n        strb r0, [r5, #0x14]\n        lsl r0, #0x18\n        lsr r0, #0x19\n        mov r1, r5\n        add r1, #0x70\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        add r1, #0x4\n        add r1, r0, r1\n        mov r0, r5\n        add r0, #0x58\n        mov r6, r4\n        ldrb r0, [r0]\n        cmp r1, r0\n        beq _code0_7\n        mov r0, r5\n        bl InitializeAnimation\n_code0_7:\n        mov r0, #0x0\n        ldrsb r0, [r6, r0]\n        cmp r0, #0x0\n        bne _code0_8\n        ldr r1, _data0_1\n        mov r0, r5\n        bl GetFacingDirection\n        bl sub_0806F5B0\n        strb r0, [r5, #0x14]\n        lsl r0, #0x18\n        lsr r0, #0x19\n        mov r1, r5\n        add r1, #0x70\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        add r1, r0, r1\n        mov r0, r5\n        add r0, #0x58\n        ldrb r0, [r0]\n        cmp r1, r0\n        beq _code0_8\n        mov r0, r5\n        bl InitializeAnimation\n_code0_8:\n        mov r0, r5\n        bl sub_0806ED78\n        mov r0, #0x36\n        ldrsh r4, [r5, r0]\n        ldr r0, _data0_1\n        ldrh r0, [r0, #0x36]\n        strh r0, [r5, #0x36]\n        cmp r4, #0x0\n        bge _code0_9\n        lsl r0, #0x10\n        cmp r0, #0x0\n        bne _code0_9\n        mov r0, r5\n        bl CreateDustSmall\n_code0_9:\n        pop {r4, r5, r6, pc}\n_data0_1:\n        .4byte gPlayerEntity\n        .4byte gScreenTransition",
      "score": "144",
      "id": 86
    },
    {
      "name": "sub_080643D8",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n\n// end of existing headers\n\nvoid sub_080643D8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080643D8\nsub_080643D8:\n        push {r4, lr}\n        mov r4, r0\n        mov r0, #0x2\n        bl CheckGlobalFlag\n        cmp r0, #0x0\n        bne _code0_0\n        mov r3, #0x0\n        b _code0_2\n_code0_0:\n        mov r0, #0x2\n        bl GetInventoryValue\n        cmp r0, #0x0\n        bne _code0_1\n        mov r3, #0x1\n        b _code0_2\n_code0_1:\n        mov r0, #0x3\n        bl GetInventoryValue\n        mov r3, #0x3\n        cmp r0, #0x0\n        bne _code0_2\n        mov r3, #0x2\n_code0_2:\n        ldrb r1, [r4, #0xb]\n        neg r0, r1\n        orr r0, r1\n        lsr r0, #0x1f\n        ldr r2, _data0_0\n        lsl r1, r3, #0x1\n        lsl r0, #0x3\n        add r1, r0\n        add r1, r2\n        ldrh r0, [r1]\n        mov r1, r4\n        bl TextboxNoOverlap\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_0810F6D4",
      "score": "40",
      "id": 87
    },
    {
      "name": "sub_08064428",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n\n// end of existing headers\n\nvoid sub_08064428(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08064428\nsub_08064428:\n        push {lr}\n        mov r3, r0\n        ldr r0, _data0_0\n        ldrb r0, [r0, #0x8]\n        sub r1, r0, #0x2\n        cmp r1, #0x0\n        bge _code0_0\n        mov r1, #0x0\n_code0_0:\n        ldrb r2, [r3, #0xb]\n        mov r0, #0x80\n        and r0, r2\n        cmp r0, #0x0\n        bne _code0_1\n        ldrb r0, [r3, #0xb]\n        lsl r0, #0x3\n        ldr r1, _data0_0+0x4\n        b _code0_2\n_data0_0:\n        .4byte gSave\n        .4byte gUnk_0810CF4C\n_code0_1:\n        mov r0, #0x7f\n        and r0, r2\n        lsl r0, #0x6\n        lsl r1, #0x3\n        ldr r2, _data0_1\n        add r1, r2\n_code0_2:\n        add r1, r0, r1\n        mov r0, r3\n        bl ShowNPCDialogue\n        pop {pc}\n_data0_1:\n        .4byte gUnk_0810D0A4",
      "score": "37",
      "id": 88
    },
    {
      "name": "sub_080644C8",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n\n// end of existing headers\n\nvoid sub_080644C8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080644C8\nsub_080644C8:\n        push {r4, lr}\n        mov r2, r0\n        mov r1, #0x2e\n        ldrsh r0, [r2, r1]\n        ldr r3, _data0_0\n        mov r4, #0xa\n        ldrsh r1, [r3, r4]\n        sub r1, r0, r1\n        mov r0, r1\n        add r0, #0x8\n        cmp r0, #0x0\n        blt _code0_0\n        mov r0, r1\n        sub r0, #0x8\n        cmp r0, #0xf0\n        bgt _code0_0\n        mov r0, #0x32\n        ldrsh r1, [r2, r0]\n        mov r2, #0xc\n        ldrsh r0, [r3, r2]\n        sub r0, r1, r0\n        cmp r0, #0x0\n        blt _code0_0\n        sub r0, #0x18\n        cmp r0, #0xa0\n        bgt _code0_0\n        mov r0, #0x1\n        b _code0_1\n_data0_0:\n        .4byte gRoomControls\n_code0_0:\n        mov r0, #0x0\n_code0_1:\n        pop {r4, pc}",
      "score": "36",
      "id": 89
    },
    {
      "name": "Kid_Head",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid Kid_Head(Entity* this) {\n    s32 iVar1;\n    u32 uVar2;\n    u32 uVar3;\n    u32 uVar4;\n\n    iVar1 = (u32)this->type * 4;\n    uVar3 = ((u8)this->frames.all & 0x1f) + (u32)gUnk_0810C0A0[iVar1];\n    uVar4 = (this->frameIndex & 0x1f) + (u32)gUnk_0810C0A0[iVar1 + 1];\n    switch (this->type) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n            uVar2 = (this->frameSpriteSettings & 0x30) >> 4;\n            if (uVar2 != 0) {\n                uVar2 = uVar2 + 0x50;\n            }\n            SetExtraSpriteFrame(this, 0, uVar3);\n            SetExtraSpriteFrame(this, 1, uVar4);\n            SetExtraSpriteFrame(this, 2, uVar2 - 1);\n            SetSpriteSubEntryOffsetData1(this, 1, 0);\n            SetSpriteSubEntryOffsetData2(this, 1, 2);\n            sub_0807000C(this);\n            break;\n        case 6:\n            uVar2 = this->frameSpriteSettings & 0xf;\n            if ((this->frameSpriteSettings & 0xf) != 0) {\n                uVar2 = uVar2 + 0x93;\n            }\n            SetExtraSpriteFrame(this, 0, uVar2 - 1);\n            SetExtraSpriteFrame(this, 1, uVar3);\n            SetExtraSpriteFrame(this, 2, uVar4);\n            SetSpriteSubEntryOffsetData1(this, 2, 1);\n            SetSpriteSubEntryOffsetData2(this, 1, 0);\n            sub_0807000C(this);\n            break;\n        case 7:\n        case 8:\n            SetExtraSpriteFrame(this, 0, uVar3);\n            SetExtraSpriteFrame(this, 1, uVar4);\n            SetSpriteSubEntryOffsetData1(this, 1, 0);\n            sub_0807000C(this);\n            break;\n        default:\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start Kid_Head\nKid_Head:\n        push {r4, r5, r6, r7, lr}\n        mov r5, r0\n        ldrb r4, [r5, #0xa]\n        lsl r0, r4, #0x2\n        mov r12, r0\n        ldr r2, _data0_0\n        add r2, r12\n        mov r0, r5\n        add r0, #0x5a\n        ldrb r3, [r0]\n        mov r1, #0x1f\n        mov r0, r1\n        and r0, r3\n        ldrb r3, [r2]\n        add r6, r0, r3\n        ldrb r0, [r5, #0x1e]\n        and r1, r0\n        ldrb r2, [r2, #0x1]\n        add r7, r1, r2\n        cmp r4, #0x8\n        bhi _code0_3\n        ldr r0, _data0_0+0x4\n        add r0, r12\n        ldr r0, [r0]\n        mov pc, r0\n_data0_0:\n        .4byte gUnk_0810C0A0\n        .4byte _other0_1\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_0\n        .4byte _case0_1\n        .4byte _case0_2\n        .4byte _case0_2\n        mov r0, r5\n        add r0, #0x5b\n        ldrb r1, [r0]\n        mov r0, #0x30\n        and r0, r1\n        lsr r4, r0, #0x4\n        cmp r4, #0x0\n        beq _code0_0\n        add r4, #0x50\n_code0_0:\n        sub r4, #0x1\n        mov r0, r5\n        mov r1, #0x0\n        mov r2, r6\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, r7\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, r4\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x0\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x2\n        b _code0_2\n        mov r0, r5\n        add r0, #0x5b\n        ldrb r0, [r0]\n        mov r2, #0xf\n        and r2, r0\n        cmp r2, #0x0\n        beq _code0_1\n        add r2, #0x93\n_code0_1:\n        sub r2, #0x1\n        mov r0, r5\n        mov r1, #0x0\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, r6\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, r7\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, #0x1\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x0\n_code0_2:\n        bl SetSpriteSubEntryOffsetData2\n        mov r0, r5\n        bl sub_0807000C\n        b _code0_3\n        mov r0, r5\n        mov r1, #0x0\n        mov r2, r6\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, r7\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x0\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r5\n        bl sub_0807000C\n_code0_3:\n        pop {r4, r5, r6, r7, pc}",
      "score": "119",
      "id": 90
    },
    {
      "name": "sub_080621AC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_080621AC(Entity* this) {\n    u32 tmp;\n\n    switch (this->action) {\n        case 0:\n            if (LoadExtraSpriteData(this, gUnk_0810BDC4[this->type]) != 0) {\n                this->action = 1;\n                this->animationState = this->actionDelay;\n                this->actionDelay = 0;\n                this->field_0x68.HALF.LO = 0;\n                this->field_0x68.HALF.HI = 0;\n                this->field_0x6a.HALF.HI = 0xff;\n                tmp = sub_0805ACC0(this);\n                if (tmp == 0) {\n                    this->field_0x6c.HWORD = this->x.HALF.HI;\n                    this->field_0x6e.HWORD = this->y.HALF.HI;\n                } else {\n                    this->field_0x6c.HWORD = tmp >> 0x10;\n                    this->field_0x6e.HWORD = tmp;\n                }\n                sub_0807DD50(this);\n            }\n            break;\n        case 1:\n            if (this->interactType == 2) {\n                this->action = 3;\n                this->interactType = 0;\n                sub_0806F118(this);\n            } else {\n                if ((s8)this->field_0x68.HALF.LO != 0) {\n                    if (this->interactType != 0) {\n                        this->action = 2;\n                        this->interactType = 0;\n                    } else {\n                        sub_080622F4(this);\n                        return;\n                    }\n                } else {\n                    sub_0807DD94(this, NULL);\n                    if (this->interactType != 0) {\n                        this->action = 2;\n                        this->interactType = 0;\n                    } else {\n                        return;\n                    }\n                }\n                sub_0806265C(this, *(ScriptExecutionContext**)&this->cutsceneBeh);\n            }\n            // TODO this needs to be moved up somehow?\n            this->field_0x6a.HALF.HI = this->animIndex;\n            if (this->animIndex < 8) {\n                InitializeAnimation(this, (this->animIndex & 0xfffffffc) +\n                                              sub_0806F5A4(GetFacingDirection(this, &gPlayerEntity)));\n            }\n            break;\n        case 2:\n            GetNextFrame(this);\n            if ((gTextBox.doTextBox & 0x7f) == 0) {\n                this->action = 1;\n            }\n            break;\n        case 3:\n            if (UpdateFuseInteraction(this) != 0) {\n                this->action = 1;\n            }\n            break;\n        default:\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080621AC\nsub_080621AC:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        ldrb r5, [r4, #0xc]\n        cmp r5, #0x1\n        beq _code0_7\n        cmp r5, #0x1\n        bgt _code0_0\n        cmp r5, #0x0\n        beq _code0_3\n        b _code0_16\n_code0_0:\n        cmp r5, #0x2\n        bne _code0_1\n        b _code0_13\n_code0_1:\n        cmp r5, #0x3\n        bne _code0_2\n        b _code0_14\n_code0_2:\n        b _code0_16\n_code0_3:\n        ldr r1, _data0_0\n        ldrb r0, [r4, #0xa]\n        lsl r0, #0x2\n        add r0, r1\n        ldr r1, [r0]\n        mov r0, r4\n        bl LoadExtraSpriteData\n        cmp r0, #0x0\n        bne _code0_4\n        b _code0_16\n_code0_4:\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldrb r0, [r4, #0xe]\n        strb r0, [r4, #0x14]\n        strb r5, [r4, #0xe]\n        mov r0, r4\n        add r0, #0x68\n        strb r5, [r0]\n        add r0, #0x1\n        strb r5, [r0]\n        mov r1, r4\n        add r1, #0x6b\n        mov r0, #0xff\n        strb r0, [r1]\n        mov r0, r4\n        bl sub_0805ACC0\n        mov r2, r0\n        cmp r2, #0x0\n        bne _code0_5\n        ldrh r0, [r4, #0x2e]\n        mov r1, r4\n        add r1, #0x6c\n        strh r0, [r1]\n        ldrh r0, [r4, #0x32]\n        add r1, #0x2\n        strh r0, [r1]\n        b _code0_6\n_data0_0:\n        .4byte gUnk_0810BDC4\n_code0_5:\n        lsr r1, r2, #0x10\n        mov r0, r4\n        add r0, #0x6c\n        strh r1, [r0]\n        add r0, #0x2\n        strh r2, [r0]\n_code0_6:\n        mov r0, r4\n        bl sub_0807DD50\n        b _code0_16\n_code0_7:\n        mov r5, r4\n        add r5, #0x39\n        mov r1, #0x0\n        ldrsb r1, [r5, r1]\n        cmp r1, #0x2\n        bne _code0_8\n        mov r1, #0x0\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        strb r1, [r5]\n        mov r0, r4\n        bl sub_0806F118\n        add r5, #0x1f\n        b _code0_12\n_code0_8:\n        mov r0, r4\n        add r0, #0x68\n        mov r6, #0x0\n        ldrsb r6, [r0, r6]\n        cmp r6, #0x0\n        beq _code0_10\n        cmp r1, #0x0\n        beq _code0_9\n        mov r1, #0x0\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        strb r1, [r5]\n        b _code0_11\n_code0_9:\n        mov r0, r4\n        bl sub_080622F4\n        b _code0_16\n_code0_10:\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_0807DD94\n        mov r0, #0x0\n        ldrsb r0, [r5, r0]\n        cmp r0, #0x0\n        beq _code0_16\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        strb r6, [r5]\n_code0_11:\n        mov r0, r4\n        add r0, #0x84\n        ldr r1, [r0]\n        mov r0, r4\n        bl sub_0806265C\n        mov r5, r4\n        add r5, #0x58\n_code0_12:\n        ldrb r0, [r5]\n        mov r1, r4\n        add r1, #0x6b\n        strb r0, [r1]\n        ldrb r0, [r5]\n        cmp r0, #0x7\n        bhi _code0_16\n        ldr r1, _data0_1\n        mov r0, r4\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        ldrb r1, [r5]\n        mov r2, #0x4\n        neg r2, r2\n        and r1, r2\n        add r1, r0\n        mov r0, r4\n        bl InitializeAnimation\n        b _code0_16\n_data0_1:\n        .4byte gPlayerEntity\n_code0_13:\n        mov r0, r4\n        bl GetNextFrame\n        ldr r0, _data0_2\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_16\n        b _code0_15\n_data0_2:\n        .4byte gTextBox\n_code0_14:\n        mov r0, r4\n        bl UpdateFuseInteraction\n        cmp r0, #0x0\n        beq _code0_16\n_code0_15:\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n_code0_16:\n        pop {r4, r5, r6, pc}",
      "score": "170",
      "id": 91
    },
    {
      "name": "sub_080622F4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_080622F4(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080622F4\nsub_080622F4:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r7, r0\n        ldr r0, _data0_0\n        mov r8, r0\n        ldrh r1, [r0, #0x2e]\n        ldr r3, _data0_0+0x4\n        mov r0, r3\n        and r0, r5\n        orr r0, r1\n        mov r2, r8\n        ldrh r1, [r2, #0x32]\n        lsl r1, #0x10\n        ldr r2, _data0_0+0x8\n        and r0, r2\n        mov r5, r0\n        orr r5, r1\n        mov r1, r8\n        ldrh r0, [r1, #0x36]\n        and r3, r6\n        orr r3, r0\n        ldr r0, _data0_0+0xc\n        add r0, #0xa8\n        ldrb r0, [r0]\n        lsl r0, #0x10\n        ldr r2, _data0_0+0x10\n        and r2, r3\n        orr r2, r0\n        ldrb r1, [r1, #0x14]\n        mov r0, #0x3f\n        and r1, r0\n        lsl r1, #0x18\n        ldr r0, _data0_0+0x14\n        and r0, r2\n        orr r0, r1\n        mov r1, r8\n        add r1, #0x38\n        ldrb r1, [r1]\n        lsl r1, #0x1e\n        ldr r2, _data0_0+0x18\n        and r0, r2\n        mov r6, r0\n        orr r6, r1\n        ldr r4, [r7, #0x64]\n        ldrb r0, [r4, #0x6]\n        cmp r0, #0x16\n        bne _code0_4\n        lsr r0, r6, #0x10\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x16\n        beq _code0_4\n        mov r2, #0x2e\n        ldrsh r1, [r7, r2]\n        mov r3, r8\n        mov r2, #0x2e\n        ldrsh r0, [r3, r2]\n        sub r2, r1, r0\n        mov r0, #0x32\n        ldrsh r3, [r7, r0]\n        mov r9, r3\n        mov r1, r8\n        mov r3, #0x32\n        ldrsh r0, [r1, r3]\n        mov r3, r9\n        sub r1, r3, r0\n        cmp r2, #0x0\n        bge _code0_0\n        neg r2, r2\n_code0_0:\n        cmp r1, #0x0\n        bge _code0_1\n        neg r1, r1\n_code0_1:\n        cmp r2, #0x78\n        bgt _code0_2\n        cmp r1, #0x50\n        ble _code0_3\n_code0_2:\n        mov r1, r7\n        add r1, #0x68\n        mov r0, #0x0\n        strb r0, [r1]\n        b _code0_18\n_data0_0:\n        .4byte gPlayerEntity\n        .4byte 0xffff0000\n        .4byte 0xffff\n        .4byte gPlayerState\n        .4byte 0xff00ffff\n        .4byte 0xc0ffffff\n        .4byte 0x3fffffff\n_code0_3:\n        mov r0, r7\n        bl sub_0806252C\n_code0_4:\n        mov r0, #0x0\n        mov r9, r0\n        ldr r0, [r4]\n        cmp r5, r0\n        bne _code0_5\n        ldr r0, [r4, #0x4]\n        cmp r6, r0\n        beq _code0_7\n_code0_5:\n        ldr r4, [r7, #0x64]\n        add r4, #0x90\n        mov r1, #0x69\n        add r1, r7\n        mov r8, r1\n        mov r3, r7\n        add r3, #0x38\n        mov r2, #0x58\n        add r2, r7\n        mov r12, r2\n        mov r2, #0x12\n_code0_6:\n        ldr r0, [r4]\n        ldr r1, [r4, #0x4]\n        str r0, [r4, #0x8]\n        str r1, [r4, #0xc]\n        sub r4, #0x8\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_6\n        ldr r4, [r7, #0x64]\n        str r5, [r4]\n        str r6, [r4, #0x4]\n        mov r0, #0x4\n        mov r9, r0\n        mov r2, r8\n        ldrb r1, [r2]\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        cmp r0, #0x0\n        ble _code0_12\n        sub r0, r1, #0x1\n        strb r0, [r2]\n        b _code0_12\n_code0_7:\n        add r4, #0x98\n        mov r3, #0x4\n        ldrsh r0, [r4, r3]\n        cmp r0, #0x0\n        bge _code0_9\n        ldr r4, [r7, #0x64]\n        add r4, #0x90\n        mov r0, #0x69\n        add r0, r7\n        mov r8, r0\n        mov r3, r7\n        add r3, #0x38\n        mov r1, #0x58\n        add r1, r7\n        mov r12, r1\n        mov r2, #0x12\n_code0_8:\n        ldr r0, [r4]\n        ldr r1, [r4, #0x4]\n        str r0, [r4, #0x8]\n        str r1, [r4, #0xc]\n        sub r4, #0x8\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_8\n        b _code0_11\n_code0_9:\n        ldr r1, _data0_1\n        mov r3, #0x2e\n        ldrsh r0, [r1, r3]\n        mov r2, #0x32\n        ldrsh r1, [r1, r2]\n        ldrh r2, [r4]\n        ldrh r3, [r4, #0x2]\n        bl sub_080041E8\n        lsr r0, #0x4\n        mov r3, #0x69\n        add r3, r7\n        mov r8, r3\n        mov r3, r7\n        add r3, #0x38\n        mov r1, #0x58\n        add r1, r7\n        mov r12, r1\n        cmp r0, #0x18\n        ble _code0_12\n        ldr r4, [r7, #0x64]\n        add r4, #0x90\n        mov r2, #0x12\n_code0_10:\n        ldr r0, [r4]\n        ldr r1, [r4, #0x4]\n        str r0, [r4, #0x8]\n        str r1, [r4, #0xc]\n        sub r4, #0x8\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_10\n_code0_11:\n        mov r2, #0x4\n        mov r9, r2\n_code0_12:\n        ldr r4, [r7, #0x64]\n        add r4, #0x98\n        ldrh r0, [r4]\n        strh r0, [r7, #0x2e]\n        ldrh r0, [r4, #0x2]\n        strh r0, [r7, #0x32]\n        ldrh r0, [r4, #0x4]\n        strh r0, [r7, #0x36]\n        ldrb r0, [r4, #0x7]\n        lsl r0, #0x1a\n        lsr r0, #0x1a\n        strb r0, [r7, #0x14]\n        ldrb r0, [r4, #0x7]\n        lsr r0, #0x6\n        strb r0, [r3]\n        mov r1, r8\n        ldrb r2, [r1]\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        ble _code0_13\n        sub r0, r2, #0x1\n        strb r0, [r1]\n_code0_13:\n        mov r2, r9\n        ldrb r0, [r7, #0x14]\n        lsr r0, #0x1\n        add r9, r0\n        ldrb r0, [r7, #0xa]\n        cmp r0, #0x6\n        bne _code0_14\n        mov r3, #0x10\n        add r9, r3\n_code0_14:\n        mov r0, r12\n        ldrb r0, [r0]\n        cmp r9, r0\n        beq _code0_16\n        cmp r2, #0x0\n        bne _code0_15\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        bgt _code0_16\n_code0_15:\n        mov r0, r7\n        mov r1, r9\n        bl InitAnimationForceUpdate\n        mov r0, #0x1e\n        mov r1, r8\n        strb r0, [r1]\n        b _code0_17\n_data0_1:\n        .4byte gPlayerEntity\n_code0_16:\n        mov r0, r7\n        bl UpdateAnimationSingleFrame\n_code0_17:\n        mov r0, r7\n        bl sub_0800451C\n_code0_18:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}",
      "score": "271",
      "id": 92
    },
    {
      "name": "sub_0806252C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_0806252C(Entity* this) {\n    s16 sVar1;\n    s16 sVar2;\n    u16 uVar3;\n    u8 uVar4;\n    s16 r0;\n    s16 sVar5;\n    s16 sVar6;\n    u8 bVar7;\n    KidHeap* heapObj;\n    s32 loopVar;\n    s32 iVar10;\n    s32 iVar11;\n\n    uVar4 = gPlayerState.field_0xa8;\n    uVar3 = gPlayerEntity.height.HALF.HI;\n    sVar2 = gPlayerEntity.y.HALF.HI;\n    sVar1 = gPlayerEntity.x.HALF.HI;\n    r0 = gPlayerEntity.y.HALF.HI - this->y.HALF.HI;\n    sVar5 = FixedDiv(gPlayerEntity.x.HALF.HI - this->x.HALF.HI, 0x14);\n    sVar6 = FixedDiv(r0, 0x14);\n    heapObj = (KidHeap*)this->myHeap;\n    iVar10 = 0;\n    iVar11 = 0;\n    loopVar = 0x13;\n    while (loopVar > -1) {\n        heapObj->unk_0 = sVar1 - (s16)((u32)iVar11 >> 8);\n        heapObj->unk_2 = sVar2 - (s16)((u32)iVar10 >> 8);\n        heapObj->unk_4 = uVar3;\n        heapObj->unk_6 = uVar4;\n        bVar7 = this->animationState & 0x3f;\n        heapObj->unk_7 = (heapObj->unk_7 & 0xc0) | bVar7;\n        heapObj->unk_7 = bVar7 | this->collisionLayer << 6;\n        heapObj = heapObj + 1;\n        iVar10 = iVar10 + sVar6;\n        iVar11 = iVar11 + sVar5;\n        loopVar = loopVar - 1;\n    };\n}\n",
      "asmCode": "thumb_func_start sub_0806252C\nsub_0806252C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        mov r7, r0\n        ldr r4, _data0_0\n        ldrh r1, [r4, #0x2e]\n        ldr r3, _data0_0+0x4\n        mov r0, r3\n        and r0, r5\n        orr r0, r1\n        ldrh r1, [r4, #0x32]\n        lsl r1, #0x10\n        ldr r2, _data0_0+0x8\n        and r0, r2\n        mov r5, r0\n        orr r5, r1\n        ldrh r0, [r4, #0x36]\n        and r3, r6\n        orr r3, r0\n        ldr r0, _data0_0+0xc\n        add r0, #0xa8\n        ldrb r0, [r0]\n        lsl r0, #0x10\n        ldr r2, _data0_0+0x10\n        and r2, r3\n        orr r2, r0\n        ldrb r1, [r4, #0x14]\n        mov r0, #0x3f\n        and r1, r0\n        lsl r1, #0x18\n        ldr r0, _data0_0+0x14\n        and r0, r2\n        orr r0, r1\n        mov r1, r4\n        add r1, #0x38\n        ldrb r1, [r1]\n        lsl r1, #0x1e\n        ldr r2, _data0_0+0x18\n        and r0, r2\n        mov r6, r0\n        orr r6, r1\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        mov r2, #0x2e\n        ldrsh r0, [r7, r2]\n        sub r1, r0\n        mov r10, r1\n        mov r0, #0x32\n        ldrsh r1, [r4, r0]\n        mov r2, #0x32\n        ldrsh r0, [r7, r2]\n        sub r1, r0\n        mov r8, r1\n        mov r1, r10\n        lsl r0, r1, #0x10\n        asr r0, #0x10\n        mov r1, #0x14\n        bl FixedDiv\n        lsl r0, #0x10\n        asr r0, #0x10\n        mov r10, r0\n        mov r2, r8\n        lsl r0, r2, #0x10\n        asr r0, #0x10\n        mov r1, #0x14\n        bl FixedDiv\n        lsl r0, #0x10\n        asr r0, #0x10\n        mov r8, r0\n        ldr r3, [r7, #0x64]\n        mov r0, #0x0\n        mov r9, r0\n        mov r12, r0\n        mov r4, #0x13\n_code0_0:\n        mov r1, r12\n        asr r0, r1, #0x8\n        sub r0, r5, r0\n        strh r0, [r3]\n        lsr r0, r5, #0x10\n        mov r2, r9\n        asr r1, r2, #0x8\n        sub r0, r1\n        strh r0, [r3, #0x2]\n        strh r6, [r3, #0x4]\n        lsr r0, r6, #0x10\n        strb r0, [r3, #0x6]\n        ldrb r0, [r7, #0x14]\n        mov r1, #0x3f\n        and r1, r0\n        ldrb r2, [r3, #0x7]\n        mov r0, #0x40\n        neg r0, r0\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x7]\n        mov r1, r7\n        add r1, #0x38\n        ldrb r1, [r1]\n        lsl r1, #0x6\n        mov r2, #0x3f\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x7]\n        add r3, #0x8\n        add r9, r8\n        add r12, r10\n        sub r4, #0x1\n        cmp r4, #0x0\n        bge _code0_0\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gPlayerEntity\n        .4byte 0xffff0000\n        .4byte 0xffff\n        .4byte gPlayerState\n        .4byte 0xff00ffff\n        .4byte 0xc0ffffff\n        .4byte 0x3fffffff",
      "score": "127",
      "id": 93
    },
    {
      "name": "sub_08062634",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_08062634(Entity* this) {\n    u32 a = this->type2;\n    u32 b = (Random() & 1);\n    TextboxNoOverlap(*((u16*)gUnk_0810BDE8 + b + a * 2), this);\n}\n",
      "asmCode": "thumb_func_start sub_08062634\nsub_08062634:\n        push {r4, r5, lr}\n        mov r5, r0\n        ldrb r4, [r5, #0xb]\n        bl Random\n        mov r1, #0x1\n        and r1, r0\n        ldr r0, _data0_0\n        lsl r1, #0x1\n        lsl r4, #0x2\n        add r1, r4\n        add r1, r0\n        ldrh r0, [r1]\n        mov r1, r5\n        bl TextboxNoOverlap\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gUnk_0810BDE8",
      "score": "19",
      "id": 94
    },
    {
      "name": "sub_0806265C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_0806265C(Entity* this, ScriptExecutionContext* context) {\n    if (gSave.unk8 == 0) {\n        TextboxNoOverlap(0, this);\n    } else {\n        ShowNPCDialogue(this, &gUnk_0810BE10[this->type * 9 + gSave.unk8]);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0806265C\nsub_0806265C:\n        push {lr}\n        mov r2, r0\n        ldr r3, _data0_0\n        ldrb r0, [r3, #0x8]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0x0\n        mov r1, r2\n        bl TextboxNoOverlap\n        b _code0_1\n_data0_0:\n        .4byte gSave\n_code0_0:\n        ldrb r0, [r2, #0xa]\n        lsl r1, r0, #0x3\n        add r1, r0\n        lsl r1, #0x3\n        ldr r0, _data0_1\n        add r1, r0\n        ldrb r0, [r3, #0x8]\n        lsl r0, #0x3\n        add r1, r0\n        mov r0, r2\n        bl ShowNPCDialogue\n_code0_1:\n        pop {pc}\n_data0_1:\n        .4byte gUnk_0810BE10",
      "score": "30",
      "id": 95
    },
    {
      "name": "sub_080626E0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_080626E0(Entity* this, ScriptExecutionContext* context) {\n    // TODO second parameter might be anything as this function does not seem to be called?\n    s16 sVar1;\n    u8 bVar2;\n    u8 cVar3;\n    s32 uVar4;\n\n    if (context->unk_18 == 0) {\n        context->unk_18 += 1;\n        context->unk_19 = 10;\n        context->postScriptActions |= 2;\n        sVar1 = *(s16*)&context->intVariable;\n        context->x.HALF.HI = *((u16*)&context->intVariable + 2) + gRoomControls.roomOriginX;\n        context->y.HALF.HI = gRoomControls.roomOriginY + sVar1;\n    }\n    bVar2 = context->unk_19 - 1;\n    context->unk_19 = bVar2;\n    if (bVar2 == 0) {\n        context->unk_19 = 10;\n        uVar4 = sub_080045DA(context->x.HALF.HI - this->x.HALF.HI, context->y.HALF.HI - this->y.HALF.HI);\n        this->direction = (u8)uVar4;\n        uVar4 = Random();\n        cVar3 = uVar4 % 0xb;\n        this->direction = (this->direction + cVar3) - 5;\n    }\n    sub_0806F62C(this, (s32)this->speed, (u32)this->direction);\n    if ((u32)(s32)this->speed <\n        (u32)((this->x.HALF.HI - context->x.HALF.HI) * 0x100 + ((s32)((u32)(u16)this->speed << 0x10) >> 0x11))) {\n        gActiveScriptInfo.commandSize = 0;\n    } else {\n        this->x.HALF.HI = context->x.HALF.HI;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080626E0\nsub_080626E0:\n        push {r4, r5, lr}\n        mov r5, r0\n        mov r4, r1\n        ldrb r0, [r4, #0x18]\n        cmp r0, #0x0\n        bne _code0_0\n        add r0, #0x1\n        strb r0, [r4, #0x18]\n        mov r0, #0xa\n        strb r0, [r4, #0x19]\n        ldr r0, [r4, #0x8]\n        mov r1, #0x2\n        orr r0, r1\n        str r0, [r4, #0x8]\n        ldrh r2, [r4, #0x4]\n        ldr r1, _data0_0\n        ldrh r0, [r4, #0x6]\n        ldrh r3, [r1, #0x6]\n        add r0, r3\n        strh r0, [r4, #0x1e]\n        ldrh r0, [r1, #0x8]\n        add r0, r2\n        strh r0, [r4, #0x22]\n_code0_0:\n        ldrb r0, [r4, #0x19]\n        sub r0, #0x1\n        strb r0, [r4, #0x19]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_1\n        mov r0, #0xa\n        strb r0, [r4, #0x19]\n        mov r1, #0x1e\n        ldrsh r0, [r4, r1]\n        mov r2, #0x2e\n        ldrsh r1, [r5, r2]\n        sub r0, r1\n        mov r3, #0x22\n        ldrsh r1, [r4, r3]\n        mov r3, #0x32\n        ldrsh r2, [r5, r3]\n        sub r1, r2\n        bl sub_080045DA\n        strb r0, [r5, #0x15]\n        bl Random\n        mov r1, #0xb\n        bl __modsi3\n        ldrb r1, [r5, #0x15]\n        add r1, r0\n        sub r1, #0x5\n        strb r1, [r5, #0x15]\n_code0_1:\n        mov r0, #0x24\n        ldrsh r1, [r5, r0]\n        ldrb r2, [r5, #0x15]\n        mov r0, r5\n        bl sub_0806F62C\n        mov r2, #0x2e\n        ldrsh r1, [r5, r2]\n        mov r3, #0x1e\n        ldrsh r0, [r4, r3]\n        sub r1, r0\n        lsl r1, #0x8\n        ldrh r0, [r5, #0x24]\n        lsl r0, #0x10\n        asr r0, #0x11\n        add r1, r0\n        mov r2, #0x24\n        ldrsh r0, [r5, r2]\n        cmp r1, r0\n        bhi _code0_2\n        ldrh r0, [r4, #0x1e]\n        strh r0, [r5, #0x2e]\n        b _code0_3\n_data0_0:\n        .4byte gRoomControls\n_code0_2:\n        ldr r1, _data0_1\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_3:\n        pop {r4, r5, pc}\n_data0_1:\n        .4byte gActiveScriptInfo",
      "score": "86",
      "id": 96
    },
    {
      "name": "sub_08062948",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"utils.h\"\n#include \"random.h\"\n#include \"save.h\"\n\nextern void (*const gUnk_0810BE0C[])(Entity*);\nvoid sub_080621AC(Entity*);\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\nvoid sub_080622F4(Entity*);\nvoid sub_0806265C(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806252C(Entity*);\n\ntypedef struct {\n    u16 unk_0; /* u16 */\n    u16 unk_2; /* u16 */\n    u16 unk_4; /* u16 */\n    u8 unk_6;\n    u8 unk_7;\n} KidHeap;\n\nextern u16 gUnk_0810BDE8[];\n\nextern Dialog gUnk_0810BE10[];\n\nextern u8 gUnk_0810C0A0[];\n\nextern SpriteLoadData* gUnk_0810BDC4[];\n\n// end of existing headers\n\nvoid sub_08062948(Entity* this, ScriptExecutionContext* context) {\n    u8 bVar1;\n    u16 uVar2;\n    u32 uVar3;\n    s32 iVar4;\n    s16* psVar5;\n\n    if (context->unk_18 == 0) {\n        context->unk_18 += 1;\n        context->unk_12 = (Random() & 0x3f) + 0x20;\n        uVar3 = Random() & 0x18;\n        bVar1 = this->direction;\n        if (bVar1 != 8) {\n            if (bVar1 >= 9) {\n                if (bVar1 == 0x10) {\n                    if (uVar3 == 0) {\n                        uVar3 = 0x18;\n                    }\n                } else {\n                    if ((bVar1 == 0x18) && (uVar3 == 8)) {\n                        uVar3 = 0;\n                    }\n                }\n            } else {\n                if ((bVar1 == 0) && (uVar3 == 0x10)) {\n                    uVar3 = 8;\n                }\n            }\n        } else {\n            if (uVar3 == 0x18) {\n                uVar3 = 0x10;\n            }\n        }\n        this->direction = (u8)uVar3;\n        uVar3 = sub_0806F5B0(uVar3);\n        this->animationState = (u8)uVar3;\n        this->speed = 0x80;\n    }\n    uVar3 = (this->animationState >> 1) + 4;\n    if (uVar3 != this->animIndex) {\n        InitializeAnimation(this, uVar3);\n        this->field_0x80.HALF.LO = (u16)this->animIndex;\n    }\n    ProcessMovement(this);\n    iVar4 = this->x.HALF.HI - this->field_0x6c.HALF.LO;\n    if (0x10 < iVar4) {\n        this->x.HALF.HI = this->field_0x6c.HALF.LO + 0x10;\n        context->unk_12 = 1;\n    }\n    if (iVar4 < -0x10) {\n        this->x.HALF.HI = this->field_0x6c.HALF.LO + -0x10;\n        context->unk_12 = 1;\n    }\n    iVar4 = this->y.HALF.HI - this->field_0x6e.HALF.LO;\n    if (0x10 < iVar4) {\n        this->y.HALF.HI = this->field_0x6e.HALF.LO + 0x10;\n        context->unk_12 = 1;\n    }\n    if (iVar4 < -0x10) {\n        this->y.HALF.HI = this->field_0x6e.HALF.LO + -0x10;\n        context->unk_12 = 1;\n    }\n    uVar2 = context->unk_12 - 1;\n    context->unk_12 = uVar2;\n    if (uVar2 != 0) {\n        gActiveScriptInfo.commandSize = 0;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08062948\nsub_08062948:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        mov r6, r1\n        ldrb r0, [r6, #0x18]\n        cmp r0, #0x0\n        bne _code0_6\n        add r0, #0x1\n        strb r0, [r6, #0x18]\n        bl Random\n        mov r1, #0x3f\n        and r0, r1\n        add r0, #0x20\n        strh r0, [r6, #0x12]\n        bl Random\n        mov r1, r0\n        mov r0, #0x18\n        and r1, r0\n        ldrb r0, [r4, #0x15]\n        cmp r0, #0x8\n        beq _code0_2\n        cmp r0, #0x8\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_5\n_code0_0:\n        cmp r0, #0x10\n        beq _code0_3\n        cmp r0, #0x18\n        beq _code0_4\n        b _code0_5\n_code0_1:\n        cmp r1, #0x10\n        bne _code0_5\n        mov r1, #0x8\n        b _code0_5\n_code0_2:\n        cmp r1, #0x18\n        bne _code0_5\n        mov r1, #0x10\n        b _code0_5\n_code0_3:\n        cmp r1, #0x0\n        bne _code0_5\n        mov r1, #0x18\n        b _code0_5\n_code0_4:\n        cmp r1, #0x8\n        bne _code0_5\n        mov r1, #0x0\n_code0_5:\n        strb r1, [r4, #0x15]\n        mov r0, r1\n        bl sub_0806F5B0\n        strb r0, [r4, #0x14]\n        mov r0, #0x80\n        strh r0, [r4, #0x24]\n_code0_6:\n        ldrb r0, [r4, #0x14]\n        lsr r0, #0x1\n        add r1, r0, #0x4\n        mov r5, r4\n        add r5, #0x58\n        ldrb r0, [r5]\n        cmp r1, r0\n        beq _code0_7\n        mov r0, r4\n        bl InitializeAnimation\n        ldrb r1, [r5]\n        mov r0, r4\n        add r0, #0x80\n        strh r1, [r0]\n_code0_7:\n        mov r0, r4\n        bl ProcessMovement\n        mov r3, #0x2e\n        ldrsh r1, [r4, r3]\n        mov r2, r4\n        add r2, #0x6c\n        mov r5, #0x0\n        ldrsh r0, [r2, r5]\n        sub r1, r0\n        cmp r1, #0x10\n        ble _code0_8\n        ldrh r0, [r2]\n        add r0, #0x10\n        strh r0, [r4, #0x2e]\n        mov r0, #0x1\n        strh r0, [r6, #0x12]\n_code0_8:\n        mov r3, #0x10\n        neg r3, r3\n        cmp r1, r3\n        bge _code0_9\n        ldrh r0, [r2]\n        sub r0, #0x10\n        strh r0, [r4, #0x2e]\n        mov r0, #0x1\n        strh r0, [r6, #0x12]\n_code0_9:\n        mov r0, #0x32\n        ldrsh r1, [r4, r0]\n        mov r2, r4\n        add r2, #0x6e\n        mov r5, #0x0\n        ldrsh r0, [r2, r5]\n        sub r1, r0\n        cmp r1, #0x10\n        ble _code0_10\n        ldrh r0, [r2]\n        add r0, #0x10\n        strh r0, [r4, #0x32]\n        mov r0, #0x1\n        strh r0, [r6, #0x12]\n_code0_10:\n        cmp r1, r3\n        bge _code0_11\n        ldrh r0, [r2]\n        sub r0, #0x10\n        strh r0, [r4, #0x32]\n        mov r0, #0x1\n        strh r0, [r6, #0x12]\n_code0_11:\n        ldrh r0, [r6, #0x12]\n        sub r0, #0x1\n        strh r0, [r6, #0x12]\n        lsl r0, #0x10\n        cmp r0, #0x0\n        beq _code0_12\n        ldr r1, _data0_0\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_12:\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gActiveScriptInfo",
      "score": "138",
      "id": 97
    },
    {
      "name": "Librarians",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n#include \"audio.h\"\n\nextern u16 gUnk_08113078[];\n\nextern void sub_08095BE0(Entity*, u32);\n\n// end of existing headers\n\nvoid Librarians(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start Librarians\nLibrarians:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        bl sub_0807DD50\n        ldr r1, _data0_0\n        ldrb r2, [r4, #0x19]\n        lsr r0, r2, #0x6\n        add r0, r1\n        ldrb r1, [r0]\n        lsl r1, #0x6\n        mov r0, #0x3f\n        and r0, r2\n        orr r0, r1\n        strb r0, [r4, #0x19]\n_code0_0:\n        mov r0, r4\n        mov r1, #0x0\n        bl ExecuteScriptForEntity\n        mov r0, r4\n        bl HandleEntity0x82Actions\n        mov r0, r4\n        bl GetNextFrame\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_08114F30",
      "score": "32",
      "id": 98
    },
    {
      "name": "sub_0806BA34",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n#include \"audio.h\"\n\nextern u16 gUnk_08113078[];\n\nextern void sub_08095BE0(Entity*, u32);\n\n// end of existing headers\n\n\n         void sub_0806BA34(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806BA34\nsub_0806BA34:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r9, r0\n        mov r4, r1\n        ldr r0, _data0_0\n        mov r8, r0\n        mov r0, #0x0\n        str r0, [r4, #0x14]\n        mov r0, #0x73\n        bl CheckLocalFlag\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r0, _data0_0+0x4\n        mov r8, r0\n        b _code0_9\n_data0_0:\n        .4byte 0x4912\n        .4byte 0x4913\n_code0_0:\n        mov r0, #0x39\n        bl GetInventoryValue\n        mov r7, r0\n        mov r0, #0x3a\n        bl GetInventoryValue\n        mov r6, r0\n        mov r0, #0x3b\n        bl GetInventoryValue\n        mov r5, r0\n        cmp r7, #0x1\n        bne _code0_1\n        ldr r0, _data0_1\n        mov r8, r0\n        str r7, [r4, #0x14]\n        b _code0_3\n_data0_1:\n        .4byte 0x4906\n_code0_1:\n        cmp r6, #0x1\n        bne _code0_2\n        ldr r0, _data0_2\n        mov r8, r0\n        str r6, [r4, #0x14]\n        b _code0_3\n_data0_2:\n        .4byte 0x4907\n_code0_2:\n        cmp r5, #0x1\n        bne _code0_4\n        ldr r0, _data0_3\n        mov r8, r0\n        str r5, [r4, #0x14]\n_code0_3:\n        mov r0, #0x6b\n        bl SetLocalFlag\n        mov r0, #0x6a\n        bl SetLocalFlag\n        b _code0_9\n_data0_3:\n        .4byte 0x4908\n_code0_4:\n        mov r0, #0x6a\n        bl CheckLocalFlag\n        cmp r0, #0x0\n        beq _code0_9\n        mov r0, #0x6b\n        bl CheckLocalFlag\n        cmp r0, #0x0\n        bne _code0_5\n        ldr r0, _data0_4\n        b _code0_6\n_data0_4:\n        .4byte 0x4901\n_code0_5:\n        cmp r7, #0x0\n        bne _code0_7\n        ldr r0, _data0_5\n_code0_6:\n        mov r8, r0\n        mov r0, #0x6b\n        bl SetLocalFlag\n        b _code0_9\n_data0_5:\n        .4byte 0x4902\n_code0_7:\n        cmp r6, #0x0\n        bne _code0_8\n        ldr r0, _data0_6\n        mov r8, r0\n        mov r0, #0x6d\n        bl SetLocalFlag\n        b _code0_9\n_data0_6:\n        .4byte 0x4903\n_code0_8:\n        cmp r5, #0x0\n        bne _code0_9\n        ldr r0, _data0_7\n        mov r8, r0\n        mov r0, #0x70\n        bl SetLocalFlag\n_code0_9:\n        mov r0, r8\n        mov r1, r9\n        bl TextboxNoOverlap\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}\n_data0_7:\n        .4byte 0x4904",
      "score": "114",
      "id": 99
    },
    {
      "name": "sub_0802810C",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"textbox.h\"\n#include \"save.h\"\n#include \"random.h\"\n#include \"createObject.h\"\n#include \"functions.h\"\n\nextern bool32 sub_080544B4(u32);\n\nvoid sub_0802810C(Entity*);\nvoid sub_080281A0(Entity*);\nbool32 sub_080281E0(u32);\nvoid sub_08028224(u32);\n\nextern void (*const gUnk_080CC6FC[])(Entity*);\nextern void (*const gUnk_080CC714[])(Entity*);\n\n// end of existing headers\n\nvoid sub_0802810C(Entity* this) {\n    gPlayerState.jumpStatus = 0x41;\n    gPlayerState.field_0xa = 0;\n    gPlayerState.flags.all &= 0xffffffef;\n    gPlayerEntity.flags |= 0x80;\n    gPlayerEntity.field_0x20 = 0x18000;\n    gPlayerEntity.iframes = -60;\n    gPlayerEntity.direction = gPlayerEntity.animationState << 2;\n    gPlayerEntity.spritePriority.b1 = this->field_0x82.HALF.HI;\n    gPlayerEntity.height.HALF.HI = gPlayerEntity.spriteOffsetY;\n    gPlayerEntity.spriteOffsetY = 0;\n    this->action = 4;\n    this->actionDelay = 0x50;\n    this->field_0xf = 0;\n    this->flags2 |= 2;\n    if (this->iframes == 0) {\n        this->iframes = -18;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0802810C\nsub_0802810C:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldr r2, _data0_0\n        mov r1, #0x0\n        mov r0, #0x41\n        strb r0, [r2, #0x2]\n        strb r1, [r2, #0xa]\n        ldr r0, [r2, #0x30]\n        sub r1, #0x11\n        and r0, r1\n        str r0, [r2, #0x30]\n        ldr r0, _data0_0+0x4\n        mov r12, r0\n        ldrb r0, [r0, #0x10]\n        mov r1, #0x80\n        orr r0, r1\n        mov r1, r12\n        strb r0, [r1, #0x10]\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r1, #0x20]\n        add r1, #0x3d\n        mov r0, #0xc4\n        strb r0, [r1]\n        mov r3, #0x0\n        mov r2, r12\n        ldrb r0, [r2, #0x14]\n        lsl r0, #0x2\n        strb r0, [r2, #0x15]\n        mov r0, r4\n        add r0, #0x83\n        ldrb r0, [r0]\n        mov r5, r12\n        add r5, #0x29\n        mov r1, #0x7\n        and r1, r0\n        lsl r1, #0x3\n        ldrb r2, [r5]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r2\n        orr r0, r1\n        strb r0, [r5]\n        mov r1, r12\n        add r1, #0x63\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        mov r2, r12\n        strh r0, [r2, #0x36]\n        strb r3, [r1]\n        mov r0, #0x4\n        strb r0, [r4, #0xc]\n        mov r0, #0x50\n        strb r0, [r4, #0xe]\n        strb r3, [r4, #0xf]\n        mov r2, r4\n        add r2, #0x3b\n        ldrb r1, [r2]\n        mov r0, #0x2\n        orr r0, r1\n        strb r0, [r2]\n        mov r1, r4\n        add r1, #0x3d\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0xee\n        strb r0, [r1]\n_code0_0:\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gPlayerState\n        .4byte gPlayerEntity",
      "score": "76",
      "id": 100
    },
    {
      "name": "CgbSound",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"gba/m4a.h\"\n#include \"gba/gba.h\"\n\n// ASCII encoding of 'Smsh' in reverse\n// This is presumably short for SMASH, the developer of MKS4AGB.\n#define ID_NUMBER 'hsmS'\n\n#define C_V 0x40 // center value for PAN, BEND, and TUNE\n\n#define SOUND_MODE_REVERB_VAL 0x0000007F\n#define SOUND_MODE_REVERB_SET 0x00000080\n#define SOUND_MODE_MAXCHN 0x00000F00\n#define SOUND_MODE_MAXCHN_SHIFT 8\n#define SOUND_MODE_MASVOL 0x0000F000\n#define SOUND_MODE_MASVOL_SHIFT 12\n#define SOUND_MODE_FREQ_05734 0x00010000\n#define SOUND_MODE_FREQ_07884 0x00020000\n#define SOUND_MODE_FREQ_10512 0x00030000\n#define SOUND_MODE_FREQ_13379 0x00040000\n#define SOUND_MODE_FREQ_15768 0x00050000\n#define SOUND_MODE_FREQ_18157 0x00060000\n#define SOUND_MODE_FREQ_21024 0x00070000\n#define SOUND_MODE_FREQ_26758 0x00080000\n#define SOUND_MODE_FREQ_31536 0x00090000\n#define SOUND_MODE_FREQ_36314 0x000A0000\n#define SOUND_MODE_FREQ_40137 0x000B0000\n#define SOUND_MODE_FREQ_42048 0x000C0000\n#define SOUND_MODE_FREQ 0x000F0000\n#define SOUND_MODE_FREQ_SHIFT 16\n#define SOUND_MODE_DA_BIT_9 0x00800000\n#define SOUND_MODE_DA_BIT_8 0x00900000\n#define SOUND_MODE_DA_BIT_7 0x00A00000\n#define SOUND_MODE_DA_BIT_6 0x00B00000\n#define SOUND_MODE_DA_BIT 0x00B00000\n#define SOUND_MODE_DA_BIT_SHIFT 20\n\ntypedef void (*MPlayFunc)();\ntypedef void (*PlyNoteFunc)(u32, MusicPlayerInfo*, MusicPlayerTrack*);\ntypedef void (*CgbSoundFunc)(void);\ntypedef void (*CgbOscOffFunc)(u8);\ntypedef u32 (*MidiKeyToCgbFreqFunc)(u8, u8, u8);\ntypedef void (*ExtVolPitFunc)(void);\ntypedef void (*XcmdFunc)(MusicPlayerInfo*, MusicPlayerTrack*);\n\ntypedef struct CgbChannel {\n    u8 statusFlags;\n    u8 type;\n    u8 rightVolume;\n    u8 leftVolume;\n    u8 attack;\n    u8 decay;\n    u8 sustain;\n    u8 release;\n    u8 key;\n    u8 envelopeVolume;\n    u8 envelopeGoal;\n    u8 envelopeCounter;\n    u8 echoVolume;\n    u8 echoLength;\n    u8 unk0;\n    u8 unk1;\n    u8 gateTime;\n    u8 midiKey;\n    u8 velocity;\n    u8 priority;\n    u8 rhythmPan;\n    u8 unk2[3];\n    u8 unk3;\n    u8 sustainGoal;\n    u8 n4; // NR[1-4]4 register (initial, length bit)\n    u8 pan;\n    u8 panMask;\n    u8 modify;\n    u8 length;\n    u8 sweep;\n    u32 frequency;\n    u32* nextWave;\n    u32* currentWave;\n    u32 track;\n    u32 prev;\n    u32 next;\n    u8 unk4[8];\n} CgbChannel;\n\n#define MAX_DIRECTSOUND_CHANNELS 12\n\n#define PCM_DMA_BUF_SIZE 1584 // size of Direct Sound buffer\n\ntypedef struct SoundInfo {\n    // This field is normally equal to ID_NUMBER but it is set to other\n    // values during sensitive operations for locking purposes.\n    // This field should be volatile but isn't. This could potentially cause\n    // race conditions.\n    u32 ident;\n\n    vu8 pcmDmaCounter;\n\n    // Direct Sound\n    u8 reverb;\n    u8 maxChannels;\n    u8 masterVolume;\n    u8 frequency;\n\n    u8 mode;\n    u8 c15;          // periodically counts from 14 down to 0 (15 states)\n    u8 pcmDmaPeriod; // number of V-blanks per PCM DMA\n    u8 maxLines;\n    u8 gap[3];\n    s32 pcmSamplesPerVBlank;\n    s32 pcmFreqency;\n    s32 divFreq;\n    CgbChannel* cgbChannels;\n    MPlayMainFunc MPlayMainHead;\n    void* intp;\n    void (*CgbSound)(void);\n    void (*CgbOscOff)(u8);\n    u32 (*MidiKeyToCgbFreq)(u8, u8, u8);\n    void* MPlayJumpTable;\n    void* plynote;\n    void (*ExtVolPit)(void);\n    u8 gap2[16];\n    SoundChannel chans[MAX_DIRECTSOUND_CHANNELS];\n    s8 pcmBuffer[PCM_DMA_BUF_SIZE];\n} SoundInfo;\n\n#define MUSICPLAYER_STATUS_TRACK 0x0000ffff\n#define MUSICPLAYER_STATUS_PAUSE 0x80000000\n\n#define MAX_MUSICPLAYER_TRACKS 16\n\n#define TEMPORARY_FADE 0x0001\n#define FADE_IN 0x0002\n#define FADE_VOL_MAX 64\n#define FADE_VOL_SHIFT 2\n\nextern u8 gMPlayMemAccArea[];\n\nextern char SoundMainRAM[];\n\nextern void* gMPlayJumpTable[];\n\nextern CgbChannel gCgbChans[];\n\nextern char gNumMusicPlayers[];\nextern char gMaxLines[];\n\n#define NUM_MUSIC_PLAYERS ((u16)gNumMusicPlayers)\n#define MAX_LINES ((u32)gMaxLines)\n\nu32 umul3232H32(u32 multiplier, u32 multiplicand);\nvoid SoundMain(void);\nvoid SoundMainBTM(void);\nvoid TrackStop(MusicPlayerInfo* mplayInfo, MusicPlayerTrack* track);\nvoid MPlayMain();\nvoid RealClearChain(void* x);\n\nvoid MPlayContinue(MusicPlayerInfo* mplayInfo);\nvoid MPlayStart(MusicPlayerInfo* mplayInfo, const SongHeader* songHeader);\nvoid MPlayStop(MusicPlayerInfo* mplayInfo);\nvoid FadeOutBody(MusicPlayerInfo* mplayInfo);\nvoid TrkVolPitSet(MusicPlayerInfo* mplayInfo, MusicPlayerTrack* track);\nvoid MPlayFadeOut(MusicPlayerInfo* mplayInfo, u16 speed);\nvoid ClearChain(void* x);\nvoid Clear64byte(void* addr);\nvoid SoundInit(SoundInfo* soundInfo);\nvoid MPlayExtender(CgbChannel* cgbChans);\nvoid m4aSoundMode(u32 mode);\nvoid MPlayOpen(MusicPlayerInfo* mplayInfo, MusicPlayerTrack* track, u8 trackCount);\nvoid CgbSound(void);\nvoid CgbOscOff(u8);\nu32 MidiKeyToCgbFreq(u8, u8, u8);\nvoid nullsub_141(void);\nvoid MPlayJumpTableCopy(void** mplayJumpTable);\nvoid SampleFreqSet(u32 freq);\n\nvoid m4aMPlayVolumeControl(MusicPlayerInfo* mplayInfo, u16 trackBits, u16 volume);\nvoid m4aMPlayPitchControl(MusicPlayerInfo* mplayInfo, u16 trackBits, s16 pitch);\nvoid m4aMPlayPanpotControl(MusicPlayerInfo* mplayInfo, u16 trackBits, s8 pan);\nvoid ClearModM(MusicPlayerTrack* track);\nvoid m4aMPlayModDepthSet(MusicPlayerInfo* mplayInfo, u16 trackBits, u8 modDepth);\nvoid m4aMPlayLFOSpeedSet(MusicPlayerInfo* mplayInfo, u16 trackBits, u8 lfoSpeed);\n\n// sound command handler functions\nvoid ply_fine(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_goto(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_patt(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_pend(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_rept(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_memacc(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_prio(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_tempo(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_keysh(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_voice(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_vol(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_pan(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_bend(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_bendr(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_lfos(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_lfodl(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_mod(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_modt(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_tune(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_port(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xcmd(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_endtie(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_note(MusicPlayerInfo*, MusicPlayerTrack*);\n\n// extended sound command handler functions\nvoid ply_xxx(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xwave(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xtype(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xatta(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xdeca(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xsust(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xrele(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xiecv(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xiecl(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xleng(MusicPlayerInfo*, MusicPlayerTrack*);\nvoid ply_xswee(MusicPlayerInfo*, MusicPlayerTrack*);\n\nu8 SoundMainRAM_Buffer[0x380];\nextern SoundInfo gSoundInfo;\n\n#define SOUND_CHANNEL_SF_START 0x80\n#define SOUND_CHANNEL_SF_STOP 0x40\n#define SOUND_CHANNEL_SF_LOOP 0x10\n#define SOUND_CHANNEL_SF_IEC 0x04\n#define SOUND_CHANNEL_SF_ENV 0x03\n#define SOUND_CHANNEL_SF_ENV_ATTACK 0x03\n#define SOUND_CHANNEL_SF_ENV_DECAY 0x02\n#define SOUND_CHANNEL_SF_ENV_SUSTAIN 0x01\n#define SOUND_CHANNEL_SF_ENV_RELEASE 0x00\n#define SOUND_CHANNEL_SF_ON \\\n    (SOUND_CHANNEL_SF_START | SOUND_CHANNEL_SF_STOP | SOUND_CHANNEL_SF_IEC | SOUND_CHANNEL_SF_ENV)\n\n#define CGB_CHANNEL_MO_PIT 0x02\n#define CGB_CHANNEL_MO_VOL 0x01\n\n#define CGB_NRx2_ENV_DIR_DEC 0x00\n#define CGB_NRx2_ENV_DIR_INC 0x08\n\n// end of existing headers\n\nvoid CgbSound(void) {\n    s32 ch;\n    CgbChannel* channels;\n    s32 envelopeStepTimeAndDir;\n    s32 prevC15;\n    SoundInfo* soundInfo = SOUND_INFO_PTR;\n    vu8* nrx0ptr;\n    vu8* nrx1ptr;\n    vu8* nrx2ptr;\n    vu8* nrx3ptr;\n    vu8* nrx4ptr;\n\n    // Most comparision operations that cast to s8 perform 'and' by 0xFF.\n    int mask = 0xff;\n\n    if (soundInfo->c15)\n        soundInfo->c15--;\n    else\n        soundInfo->c15 = 14;\n\n    for (ch = 1, channels = soundInfo->cgbChannels; ch <= 4; ch++, channels++) {\n        if (!(channels->statusFlags & SOUND_CHANNEL_SF_ON))\n            continue;\n\n        /* 1. determine hardware channel registers */\n        switch (ch) {\n            case 1:\n                nrx0ptr = (vu8*)(REG_ADDR_NR10);\n                nrx1ptr = (vu8*)(REG_ADDR_NR11);\n                nrx2ptr = (vu8*)(REG_ADDR_NR12);\n                nrx3ptr = (vu8*)(REG_ADDR_NR13);\n                nrx4ptr = (vu8*)(REG_ADDR_NR14);\n                break;\n            case 2:\n                nrx0ptr = (vu8*)(REG_ADDR_NR10 + 1);\n                nrx1ptr = (vu8*)(REG_ADDR_NR21);\n                nrx2ptr = (vu8*)(REG_ADDR_NR22);\n                nrx3ptr = (vu8*)(REG_ADDR_NR23);\n                nrx4ptr = (vu8*)(REG_ADDR_NR24);\n                break;\n            case 3:\n                nrx0ptr = (vu8*)(REG_ADDR_NR30);\n                nrx1ptr = (vu8*)(REG_ADDR_NR31);\n                nrx2ptr = (vu8*)(REG_ADDR_NR32);\n                nrx3ptr = (vu8*)(REG_ADDR_NR33);\n                nrx4ptr = (vu8*)(REG_ADDR_NR34);\n                break;\n            default:\n                nrx0ptr = (vu8*)(REG_ADDR_NR30 + 1);\n                nrx1ptr = (vu8*)(REG_ADDR_NR41);\n                nrx2ptr = (vu8*)(REG_ADDR_NR42);\n                nrx3ptr = (vu8*)(REG_ADDR_NR43);\n                nrx4ptr = (vu8*)(REG_ADDR_NR44);\n                break;\n        }\n\n        prevC15 = soundInfo->c15;\n        envelopeStepTimeAndDir = *nrx2ptr;\n\n        /* 2. calculate envelope volume */\n        if (channels->statusFlags & SOUND_CHANNEL_SF_START) {\n            if (!(channels->statusFlags & SOUND_CHANNEL_SF_STOP)) {\n                channels->statusFlags = SOUND_CHANNEL_SF_ENV_ATTACK;\n                channels->modify = CGB_CHANNEL_MO_PIT | CGB_CHANNEL_MO_VOL;\n                CgbModVol(channels);\n                switch (ch) {\n                    case 1:\n                        *nrx0ptr = channels->sweep;\n                        // fallthrough\n                    case 2:\n                        *nrx1ptr = ((u32)channels->nextWave << 6) + channels->length;\n                        goto init_env_step_time_dir;\n                    case 3:\n                        if (channels->nextWave != channels->currentWave) {\n                            *nrx0ptr = 0x40;\n                            REG_WAVE_RAM0 = channels->nextWave[0];\n                            REG_WAVE_RAM1 = channels->nextWave[1];\n                            REG_WAVE_RAM2 = channels->nextWave[2];\n                            REG_WAVE_RAM3 = channels->nextWave[3];\n                            channels->currentWave = channels->nextWave;\n                        }\n                        *nrx0ptr = 0;\n                        *nrx1ptr = channels->length;\n                        if (channels->length)\n                            channels->n4 = 0xC0;\n                        else\n                            channels->n4 = 0x80;\n                        break;\n                    default:\n                        *nrx1ptr = channels->length;\n                        *nrx3ptr = (u32)channels->nextWave << 3;\n                    init_env_step_time_dir:\n                        envelopeStepTimeAndDir = channels->attack + CGB_NRx2_ENV_DIR_INC;\n                        if (channels->length)\n                            channels->n4 = 0x40;\n                        else\n                            channels->n4 = 0x00;\n                        break;\n                }\n                channels->envelopeCounter = channels->attack;\n                if ((s8)(channels->attack & mask)) {\n                    channels->envelopeVolume = 0;\n                    goto envelope_step_complete;\n                } else {\n                    // skip attack phase if attack is instantaneous (=0)\n                    goto envelope_decay_start;\n                }\n            } else {\n                goto oscillator_off;\n            }\n        } else if (channels->statusFlags & SOUND_CHANNEL_SF_IEC) {\n            channels->echoLength--;\n            if ((s8)(channels->echoLength & mask) <= 0) {\n            oscillator_off:\n                CgbOscOff(ch);\n                channels->statusFlags = 0;\n                goto channel_complete;\n            }\n            goto envelope_complete;\n        } else if ((channels->statusFlags & SOUND_CHANNEL_SF_STOP) && (channels->statusFlags & SOUND_CHANNEL_SF_ENV)) {\n            channels->statusFlags &= ~SOUND_CHANNEL_SF_ENV;\n            channels->envelopeCounter = channels->release;\n            if ((s8)(channels->release & mask)) {\n                channels->modify |= CGB_CHANNEL_MO_VOL;\n                if (ch != 3)\n                    envelopeStepTimeAndDir = channels->release | CGB_NRx2_ENV_DIR_DEC;\n                goto envelope_step_complete;\n            } else {\n                goto envelope_pseudoecho_start;\n            }\n        } else {\n        envelope_step_repeat:\n            if (channels->envelopeCounter == 0) {\n                if (ch == 3)\n                    channels->modify |= CGB_CHANNEL_MO_VOL;\n\n                CgbModVol(channels);\n                if ((channels->statusFlags & SOUND_CHANNEL_SF_ENV) == SOUND_CHANNEL_SF_ENV_RELEASE) {\n                    channels->envelopeVolume--;\n                    if ((s8)(channels->envelopeVolume & mask) <= 0) {\n                    envelope_pseudoecho_start:\n                        channels->envelopeVolume = ((channels->envelopeGoal * channels->echoVolume) + 0xFF) >> 8;\n                        if (channels->envelopeVolume) {\n                            channels->statusFlags |= SOUND_CHANNEL_SF_IEC;\n                            channels->modify |= CGB_CHANNEL_MO_VOL;\n                            if (ch != 3)\n                                envelopeStepTimeAndDir = 0 | CGB_NRx2_ENV_DIR_INC;\n                            goto envelope_complete;\n                        } else {\n                            goto oscillator_off;\n                        }\n                    } else {\n                        channels->envelopeCounter = channels->release;\n                    }\n                } else if ((channels->statusFlags & SOUND_CHANNEL_SF_ENV) == SOUND_CHANNEL_SF_ENV_SUSTAIN) {\n                envelope_sustain:\n                    channels->envelopeVolume = channels->sustainGoal;\n                    channels->envelopeCounter = 7;\n                } else if ((channels->statusFlags & SOUND_CHANNEL_SF_ENV) == SOUND_CHANNEL_SF_ENV_DECAY) {\n                    int envelopeVolume, sustainGoal;\n\n                    channels->envelopeVolume--;\n                    envelopeVolume = (s8)(channels->envelopeVolume & mask);\n                    sustainGoal = (s8)(channels->sustainGoal);\n                    if (envelopeVolume <= sustainGoal) {\n                    envelope_sustain_start:\n                        if (channels->sustain == 0) {\n                            channels->statusFlags &= ~SOUND_CHANNEL_SF_ENV;\n                            goto envelope_pseudoecho_start;\n                        } else {\n                            channels->statusFlags--;\n                            channels->modify |= CGB_CHANNEL_MO_VOL;\n                            if (ch != 3)\n                                envelopeStepTimeAndDir = 0 | CGB_NRx2_ENV_DIR_INC;\n                            goto envelope_sustain;\n                        }\n                    } else {\n                        channels->envelopeCounter = channels->decay;\n                    }\n                } else {\n                    channels->envelopeVolume++;\n                    if ((u8)(channels->envelopeVolume & mask) >= channels->envelopeGoal) {\n                    envelope_decay_start:\n                        channels->statusFlags--;\n                        channels->envelopeCounter = channels->decay;\n                        if ((u8)(channels->envelopeCounter & mask)) {\n                            channels->modify |= CGB_CHANNEL_MO_VOL;\n                            channels->envelopeVolume = channels->envelopeGoal;\n                            if (ch != 3)\n                                envelopeStepTimeAndDir = channels->decay | CGB_NRx2_ENV_DIR_DEC;\n                        } else {\n                            goto envelope_sustain_start;\n                        }\n                    } else {\n                        channels->envelopeCounter = channels->attack;\n                    }\n                }\n            }\n        }\n\n    envelope_step_complete:\n        // every 15 frames, envelope calculation has to be done twice\n        // to keep up with the hardware envelope rate (1/64 s)\n        channels->envelopeCounter--;\n        if (prevC15 == 0) {\n            prevC15--;\n            goto envelope_step_repeat;\n        }\n\n    envelope_complete:\n        /* 3. apply pitch to HW registers */\n        if (channels->modify & CGB_CHANNEL_MO_PIT) {\n            if (ch < 4 && (channels->type & TONEDATA_TYPE_FIX)) {\n                int dac_pwm_rate = REG_SOUNDBIAS_H;\n\n                if (dac_pwm_rate < 0x40) // if PWM rate = 32768 Hz\n                    channels->frequency = (channels->frequency + 2) & 0x7fc;\n                else if (dac_pwm_rate < 0x80) // if PWM rate = 65536 Hz\n                    channels->frequency = (channels->frequency + 1) & 0x7fe;\n            }\n\n            if (ch != 4)\n                *nrx3ptr = channels->frequency;\n            else\n                *nrx3ptr = (*nrx3ptr & 0x08) | channels->frequency;\n            channels->n4 = (channels->n4 & 0xC0) + (*((u8*)(&channels->frequency) + 1));\n            *nrx4ptr = (s8)(channels->n4 & mask);\n        }\n\n        /* 4. apply envelope & volume to HW registers */\n        if (channels->modify & CGB_CHANNEL_MO_VOL) {\n            REG_NR51 = (REG_NR51 & ~channels->panMask) | channels->pan;\n            if (ch == 3) {\n                *nrx2ptr = gCgb3Vol[channels->envelopeVolume];\n                if (channels->n4 & 0x80) {\n                    *nrx0ptr = 0x80;\n                    *nrx4ptr = channels->n4;\n                    channels->n4 &= 0x7f;\n                }\n            } else {\n                envelopeStepTimeAndDir &= 0xf;\n                *nrx2ptr = (channels->envelopeVolume << 4) + envelopeStepTimeAndDir;\n                *nrx4ptr = channels->n4 | 0x80;\n                if (ch == 1 && !(*nrx0ptr & 0x08))\n                    *nrx4ptr = channels->n4 | 0x80;\n            }\n        }\n\n    channel_complete:\n        channels->modify = 0;\n    }\n}\n",
      "asmCode": "thumb_func_start CgbSound\nCgbSound:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x24\n        ldr r0, _data0_0\n        ldr r0, [r0]\n        str r0, [sp, #0x8]\n        ldrb r0, [r0, #0xa]\n        cmp r0, #0x0\n        beq _code0_0\n        sub r0, #0x1\n        ldr r1, [sp, #0x8]\n        strb r0, [r1, #0xa]\n        b _code0_1\n_data0_0:\n        .4byte 0x3007ff0\n_code0_0:\n        mov r0, #0xe\n        ldr r3, [sp, #0x8]\n        strb r0, [r3, #0xa]\n_code0_1:\n        mov r6, #0x1\n        ldr r0, [sp, #0x8]\n        ldr r4, [r0, #0x1c]\n        mov r1, sp\n        str r1, [sp, #0x1c]\n_code0_2:\n        ldrb r1, [r4]\n        mov r0, #0xc7\n        and r0, r1\n        add r3, r6, #0x1\n        mov r10, r3\n        mov r1, #0x40\n        add r1, r4\n        mov r9, r1\n        cmp r0, #0x0\n        bne _code0_3\n        b _code0_50\n_code0_3:\n        cmp r6, #0x2\n        beq _code0_6\n        cmp r6, #0x2\n        bgt _code0_4\n        cmp r6, #0x1\n        beq _code0_5\n        b _code0_8\n_code0_4:\n        cmp r6, #0x3\n        beq _code0_7\n        b _code0_8\n_code0_5:\n        ldr r3, _data0_1\n        str r3, [sp, #0xc]\n        add r3, #0x2\n        ldr r0, _data0_1+0x4\n        str r0, [sp, #0x10]\n        ldr r1, _data0_1+0x8\n        str r1, [sp, #0x14]\n        add r0, #0x2\n        str r0, [sp, #0x18]\n        mov r0, #0x0\n        b _code0_9\n_data0_1:\n        .4byte 0x4000060\n        .4byte 0x4000063\n        .4byte 0x4000064\n_code0_6:\n        ldr r3, _data0_2\n        str r3, [sp, #0xc]\n        add r3, #0x7\n        ldr r0, _data0_2+0x4\n        str r0, [sp, #0x10]\n        ldr r1, _data0_2+0x8\n        str r1, [sp, #0x14]\n        add r0, #0x4\n        str r0, [sp, #0x18]\n        mov r0, #0x1\n        b _code0_9\n_data0_2:\n        .4byte 0x4000061\n        .4byte 0x4000069\n        .4byte 0x400006c\n_code0_7:\n        ldr r3, _data0_3\n        str r3, [sp, #0xc]\n        add r3, #0x2\n        ldr r0, _data0_3+0x4\n        str r0, [sp, #0x10]\n        ldr r1, _data0_3+0x8\n        str r1, [sp, #0x14]\n        add r0, #0x2\n        str r0, [sp, #0x18]\n        mov r0, #0x2\n        b _code0_9\n_data0_3:\n        .4byte 0x4000070\n        .4byte 0x4000073\n        .4byte 0x4000074\n_code0_8:\n        ldr r3, _data0_4\n        str r3, [sp, #0xc]\n        add r3, #0x7\n        ldr r0, _data0_4+0x4\n        str r0, [sp, #0x10]\n        ldr r1, _data0_4+0x8\n        str r1, [sp, #0x14]\n        add r0, #0x4\n        str r0, [sp, #0x18]\n        mov r0, #0x3\n_code0_9:\n        ldr r1, [sp, #0x1c]\n        strb r0, [r1]\n        ldr r0, [sp, #0x8]\n        ldrb r0, [r0, #0xa]\n        str r0, [sp, #0x4]\n        ldr r1, [sp, #0x10]\n        ldrb r0, [r1]\n        mov r8, r0\n        ldrb r2, [r4]\n        mov r0, #0x80\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_22\n        mov r7, #0x40\n        mov r0, r7\n        and r0, r2\n        lsl r0, #0x18\n        lsr r5, r0, #0x18\n        add r0, r6, #0x1\n        mov r10, r0\n        mov r1, #0x40\n        add r1, r4\n        mov r9, r1\n        cmp r5, #0x0\n        beq _code0_10\n        b _code0_24\n_code0_10:\n        mov r0, #0x3\n        strb r0, [r4]\n        strb r0, [r4, #0x1d]\n        mov r0, r4\n        str r3, [sp, #0x20]\n        bl CgbModVol\n        ldr r3, [sp, #0x20]\n        cmp r6, #0x2\n        beq _code0_13\n        cmp r6, #0x2\n        bgt _code0_11\n        cmp r6, #0x1\n        beq _code0_12\n        b _code0_17\n_data0_4:\n        .4byte 0x4000071\n        .4byte 0x4000079\n        .4byte 0x400007c\n_code0_11:\n        cmp r6, #0x3\n        beq _code0_14\n        b _code0_17\n_code0_12:\n        ldrb r0, [r4, #0x1f]\n        ldr r1, [sp, #0xc]\n        strb r0, [r1]\n_code0_13:\n        ldr r0, [r4, #0x24]\n        lsl r0, #0x6\n        ldrb r1, [r4, #0x1e]\n        add r0, r1\n        strb r0, [r3]\n        b _code0_18\n_code0_14:\n        ldr r1, [r4, #0x24]\n        ldr r0, [r4, #0x28]\n        cmp r1, r0\n        beq _code0_15\n        ldr r0, [sp, #0xc]\n        strb r7, [r0]\n        ldr r1, _data0_5\n        ldr r2, [r4, #0x24]\n        ldr r0, [r2]\n        str r0, [r1]\n        add r1, #0x4\n        ldr r0, [r2, #0x4]\n        str r0, [r1]\n        add r1, #0x4\n        ldr r0, [r2, #0x8]\n        str r0, [r1]\n        add r1, #0x4\n        ldr r0, [r2, #0xc]\n        str r0, [r1]\n        str r2, [r4, #0x28]\n_code0_15:\n        ldr r1, [sp, #0xc]\n        strb r5, [r1]\n        ldrb r0, [r4, #0x1e]\n        strb r0, [r3]\n        ldrb r0, [r4, #0x1e]\n        cmp r0, #0x0\n        beq _code0_16\n        mov r0, #0xc0\n        b _code0_19\n_data0_5:\n        .4byte 0x4000090\n_code0_16:\n        mov r3, #0x80\n        neg r3, r3\n        strb r3, [r4, #0x1a]\n        b _code0_20\n_code0_17:\n        ldrb r0, [r4, #0x1e]\n        strb r0, [r3]\n        ldr r0, [r4, #0x24]\n        lsl r0, #0x3\n        ldr r1, [sp, #0x14]\n        strb r0, [r1]\n_code0_18:\n        ldrb r0, [r4, #0x4]\n        add r0, #0x8\n        mov r8, r0\n        ldrb r0, [r4, #0x1e]\n        cmp r0, #0x0\n        beq _code0_19\n        mov r0, #0x40\n_code0_19:\n        strb r0, [r4, #0x1a]\n_code0_20:\n        ldrb r1, [r4, #0x4]\n        mov r2, #0x0\n        strb r1, [r4, #0xb]\n        mov r0, #0xff\n        and r0, r1\n        add r3, r6, #0x1\n        mov r10, r3\n        mov r1, #0x40\n        add r1, r4\n        mov r9, r1\n        cmp r0, #0x0\n        bne _code0_21\n        b _code0_37\n_code0_21:\n        strb r2, [r4, #0x9]\n        b _code0_40\n_code0_22:\n        mov r0, #0x4\n        and r0, r2\n        cmp r0, #0x0\n        bne _code0_23\n        ldr r0, _data0_6\n        ldrb r1, [r0]\n        ldr r3, [sp, #0x1c]\n        ldrb r0, [r3]\n        asr r1, r0\n        mov r0, #0x1\n        and r1, r0\n        cmp r1, #0x0\n        bne _code0_25\n_code0_23:\n        ldrb r0, [r4, #0xd]\n        sub r0, #0x1\n        strb r0, [r4, #0xd]\n        mov r1, #0xff\n        and r0, r1\n        lsl r0, #0x18\n        add r3, r6, #0x1\n        mov r10, r3\n        mov r1, #0x40\n        add r1, r4\n        mov r9, r1\n        cmp r0, #0x0\n        ble _code0_24\n        b _code0_41\n_code0_24:\n        lsl r0, r6, #0x18\n        lsr r0, #0x18\n        bl CgbOscOff\n        mov r0, #0x0\n        strb r0, [r4]\n        b _code0_49\n_data0_6:\n        .4byte 0x4000084\n_code0_25:\n        mov r0, #0x40\n        and r0, r2\n        add r3, r6, #0x1\n        mov r10, r3\n        mov r1, #0x40\n        add r1, r4\n        mov r9, r1\n        cmp r0, #0x0\n        beq _code0_26\n        mov r0, #0x3\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_26\n        mov r0, #0xfc\n        and r0, r2\n        mov r2, #0x0\n        strb r0, [r4]\n        ldrb r1, [r4, #0x7]\n        strb r1, [r4, #0xb]\n        mov r0, #0xff\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_28\n        ldrb r0, [r4, #0x1d]\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x1d]\n        cmp r6, #0x3\n        beq _code0_40\n        ldrb r3, [r4, #0x7]\n        mov r8, r3\n        b _code0_40\n_code0_26:\n        ldrb r0, [r4, #0xb]\n        cmp r0, #0x0\n        bne _code0_40\n        cmp r6, #0x3\n        bne _code0_27\n        ldrb r1, [r4, #0x1d]\n        mov r0, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x1d]\n_code0_27:\n        mov r0, r4\n        bl CgbModVol\n        ldrb r0, [r4]\n        mov r1, #0x3\n        and r1, r0\n        cmp r1, #0x0\n        bne _code0_30\n        ldrb r0, [r4, #0x9]\n        sub r0, #0x1\n        strb r0, [r4, #0x9]\n        mov r1, #0xff\n        and r0, r1\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bgt _code0_29\n_code0_28:\n        ldrb r1, [r4, #0xa]\n        ldrb r0, [r4, #0xc]\n        mul r0, r1\n        add r0, #0xff\n        asr r0, #0x8\n        mov r1, #0x0\n        strb r0, [r4, #0x9]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        beq _code0_24\n        ldrb r0, [r4]\n        mov r1, #0x4\n        orr r0, r1\n        strb r0, [r4]\n        ldrb r0, [r4, #0x1d]\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x1d]\n        cmp r6, #0x3\n        beq _code0_41\n        mov r3, #0x8\n        mov r8, r3\n        b _code0_41\n_code0_29:\n        ldrb r0, [r4, #0x7]\n        b _code0_39\n_code0_30:\n        cmp r1, #0x1\n        bne _code0_32\n_code0_31:\n        ldrb r0, [r4, #0x19]\n        strb r0, [r4, #0x9]\n        mov r0, #0x7\n        b _code0_39\n_code0_32:\n        cmp r1, #0x2\n        bne _code0_36\n        ldrb r0, [r4, #0x9]\n        sub r0, #0x1\n        strb r0, [r4, #0x9]\n        mov r1, #0xff\n        and r0, r1\n        lsl r0, #0x18\n        asr r0, #0x18\n        mov r1, #0x19\n        ldrsb r1, [r4, r1]\n        cmp r0, r1\n        bgt _code0_35\n_code0_33:\n        ldrb r0, [r4, #0x6]\n        cmp r0, #0x0\n        bne _code0_34\n        ldrb r1, [r4]\n        mov r0, #0xfc\n        and r0, r1\n        strb r0, [r4]\n        b _code0_28\n_code0_34:\n        ldrb r0, [r4]\n        sub r0, #0x1\n        strb r0, [r4]\n        ldrb r1, [r4, #0x1d]\n        mov r0, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x1d]\n        cmp r6, #0x3\n        beq _code0_31\n        mov r3, #0x8\n        mov r8, r3\n        b _code0_31\n_code0_35:\n        ldrb r0, [r4, #0x5]\n        b _code0_39\n_code0_36:\n        ldrb r0, [r4, #0x9]\n        add r0, #0x1\n        strb r0, [r4, #0x9]\n        mov r1, #0xff\n        and r0, r1\n        ldrb r3, [r4, #0xa]\n        cmp r0, r3\n        blo _code0_38\n_code0_37:\n        ldrb r0, [r4]\n        sub r0, #0x1\n        mov r2, #0x0\n        strb r0, [r4]\n        ldrb r1, [r4, #0x5]\n        strb r1, [r4, #0xb]\n        mov r0, #0xff\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_33\n        ldrb r0, [r4, #0x1d]\n        mov r1, #0x1\n        orr r0, r1\n        strb r0, [r4, #0x1d]\n        ldrb r0, [r4, #0xa]\n        strb r0, [r4, #0x9]\n        cmp r6, #0x3\n        beq _code0_40\n        ldrb r0, [r4, #0x5]\n        mov r8, r0\n        b _code0_40\n_code0_38:\n        ldrb r0, [r4, #0x4]\n_code0_39:\n        strb r0, [r4, #0xb]\n_code0_40:\n        ldrb r0, [r4, #0xb]\n        sub r0, #0x1\n        strb r0, [r4, #0xb]\n        ldr r1, [sp, #0x4]\n        cmp r1, #0x0\n        bne _code0_41\n        sub r1, #0x1\n        str r1, [sp, #0x4]\n        b _code0_26\n_code0_41:\n        ldrb r1, [r4, #0x1d]\n        mov r0, #0x2\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_47\n        cmp r6, #0x3\n        bgt _code0_44\n        ldrb r1, [r4, #0x1]\n        mov r0, #0x8\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_44\n        ldr r0, _data0_7\n        ldrb r0, [r0]\n        mov r1, r0\n        cmp r1, #0x3f\n        bgt _code0_42\n        ldr r0, [r4, #0x20]\n        add r0, #0x2\n        ldr r1, _data0_7+0x4\n        b _code0_43\n_data0_7:\n        .4byte 0x4000089\n        .4byte 0x7fc\n_code0_42:\n        cmp r1, #0x7f\n        bgt _code0_44\n        ldr r0, [r4, #0x20]\n        add r0, #0x1\n        ldr r1, _data0_8\n_code0_43:\n        and r0, r1\n        str r0, [r4, #0x20]\n_code0_44:\n        cmp r6, #0x4\n        beq _code0_45\n        ldr r0, [r4, #0x20]\n        b _code0_46\n_data0_8:\n        .4byte 0x7fe\n_code0_45:\n        ldr r1, [sp, #0x14]\n        ldrb r0, [r1]\n        mov r1, #0x8\n        and r1, r0\n        ldr r0, [r4, #0x20]\n        orr r0, r1\n_code0_46:\n        ldr r3, [sp, #0x14]\n        strb r0, [r3]\n        ldrb r0, [r4, #0x1a]\n        mov r1, #0xc0\n        and r1, r0\n        ldr r0, [r4, #0x20]\n        mov r2, #0xfc\n        lsl r2, #0x6\n        and r0, r2\n        lsr r0, #0x8\n        add r1, r0\n        strb r1, [r4, #0x1a]\n        mov r0, #0xff\n        and r1, r0\n        ldr r3, [sp, #0x18]\n        strb r1, [r3]\n_code0_47:\n        ldrb r1, [r4, #0x1d]\n        mov r0, #0x1\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_49\n        ldr r2, _data0_9\n        ldrb r1, [r4, #0x1c]\n        ldrb r0, [r2]\n        bic r0, r1\n        ldrb r1, [r4, #0x1b]\n        orr r0, r1\n        strb r0, [r2]\n        cmp r6, #0x3\n        bne _code0_48\n        ldr r1, _data0_9+0x4\n        ldrb r0, [r4, #0x9]\n        add r0, r1\n        ldrb r0, [r0]\n        ldr r1, [sp, #0x10]\n        strb r0, [r1]\n        ldrb r1, [r4, #0x1a]\n        mov r2, #0x80\n        mov r0, r2\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_49\n        ldr r3, [sp, #0xc]\n        strb r2, [r3]\n        ldrb r0, [r4, #0x1a]\n        ldr r1, [sp, #0x18]\n        strb r0, [r1]\n        ldrb r1, [r4, #0x1a]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x1a]\n        b _code0_49\n_data0_9:\n        .4byte 0x4000081\n        .4byte gCgb3Vol\n_code0_48:\n        mov r0, #0xf\n        mov r3, r8\n        and r3, r0\n        mov r8, r3\n        ldrb r0, [r4, #0x9]\n        lsl r0, #0x4\n        add r0, r8\n        ldr r1, [sp, #0x10]\n        strb r0, [r1]\n        ldrb r0, [r4, #0x1a]\n        mov r2, #0x80\n        orr r0, r2\n        ldr r3, [sp, #0x18]\n        strb r0, [r3]\n        cmp r6, #0x1\n        bne _code0_49\n        ldr r0, [sp, #0xc]\n        ldrb r1, [r0]\n        mov r0, #0x8\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_49\n        ldrb r0, [r4, #0x1a]\n        orr r0, r2\n        strb r0, [r3]\n_code0_49:\n        mov r0, #0x0\n        strb r0, [r4, #0x1d]\n_code0_50:\n        mov r6, r10\n        mov r4, r9\n        cmp r6, #0x4\n        bgt _code0_51\n        b _code0_2\n_code0_51:\n        add sp, #0x24\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7}\n        pop {r0}\n        bx r0",
      "score": "611",
      "id": 101
    },
    {
      "name": "sub_08029E0C",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nextern u8 gEntCount;\nextern Hitbox gUnk_080FD298;\nextern Hitbox gUnk_080FD2A0;\n\nvoid sub_08029E0C(Entity*);\nvoid sub_08029EEC(Entity*);\nvoid sub_0802A098(Entity*);\nvoid sub_0802A16C(Entity*);\nvoid sub_0802A058(Entity*);\nbool32 sub_0802A14C(Entity*);\nvoid sub_0802A18C(Entity*);\nbool32 sub_08029FE4(Entity*);\nvoid sub_08029FB4(Entity*, u32, u32);\nvoid sub_0802A0F8(Entity*);\n\nextern void (*const gUnk_080CCD44[])(Entity*);\nextern void (*const gUnk_080CCD60[])(Entity*);\nextern void (*const gUnk_080CCD78[])(Entity*);\nextern void (*const gUnk_080CCD88[])(Entity*);\nextern const u8 gUnk_080CCDA0[];\nextern void (*const gUnk_080CCDA8[])(Entity*);\nextern const u8 gUnk_080CCDC8[];\nextern const u16 gUnk_080CCDD4[];\n\n// end of existing headers\n\nvoid sub_08029E0C(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08029E0C\nsub_08029E0C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x8\n        mov r5, r0\n        ldrb r0, [r5, #0x15]\n        lsr r0, #0x3\n        lsl r1, r0, #0x1\n        add r1, r0\n        ldr r0, _data0_0\n        add r1, r0\n        str r1, [sp]\n        bl Random\n        mov r1, #0x1\n        and r1, r0\n        lsl r1, #0x1\n        sub r1, #0x1\n        mov r10, r1\n        bl Random\n        mov r1, r0\n        mov r0, #0xf\n        and r0, r1\n        mov r1, #0x3\n        bl __modsi3\n        mov r9, r0\n        mov r1, #0x2e\n        ldrsh r0, [r5, r1]\n        ldr r3, _data0_0+0x4\n        ldrh r1, [r3, #0x6]\n        sub r0, r1\n        asr r0, #0x4\n        mov r8, r0\n        mov r2, #0x3f\n        and r0, r2\n        mov r8, r0\n        mov r1, #0x32\n        ldrsh r0, [r5, r1]\n        ldrh r1, [r3, #0x8]\n        sub r0, r1\n        asr r0, #0x4\n        and r0, r2\n        lsl r0, #0x6\n        mov r1, r8\n        orr r1, r0\n        mov r8, r1\n        mov r7, #0x0\n_code0_0:\n        ldr r0, [sp]\n        add r0, r9\n        ldrb r4, [r0]\n        lsr r0, r4, #0x3\n        lsl r0, #0x1\n        ldr r1, _data0_0+0x8\n        add r0, r1\n        mov r1, #0x0\n        ldrsh r0, [r0, r1]\n        add r0, r8\n        mov r1, r5\n        add r1, #0x38\n        ldrb r1, [r1]\n        bl sub_080002E0\n        mov r6, r5\n        add r6, #0x74\n        cmp r0, #0x0\n        bne _code0_1\n        str r4, [sp, #0x4]\n        ldrb r1, [r5, #0x15]\n        ldrb r0, [r6]\n        sub r0, r1, r0\n        sub r1, r4, r1\n        cmp r0, r1\n        bne _code0_2\n_code0_1:\n        mov r0, r9\n        add r0, r10\n        add r0, #0x3\n        mov r1, #0x3\n        bl __modsi3\n        mov r9, r0\n        add r7, #0x1\n        cmp r7, #0x2\n        bls _code0_0\n_code0_2:\n        cmp r7, #0x3\n        bne _code0_3\n        ldr r4, [sp, #0x4]\n_code0_3:\n        ldrb r1, [r5, #0x15]\n        ldrb r0, [r6]\n        cmp r0, r1\n        beq _code0_4\n        strb r1, [r6]\n_code0_4:\n        strb r4, [r5, #0x15]\n        mov r0, r5\n        bl sub_08029F0C\n        add sp, #0x8\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gUnk_080CCDC8\n        .4byte gRoomControls\n        .4byte gUnk_080B4488",
      "score": "110",
      "id": 102
    },
    {
      "name": "sub_0805A9CC",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"flags.h\"\n#include \"screen.h\"\n#include \"manager.h\"\n#include \"object.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n\ntypedef struct {\n    Manager manager;\n    u8 unk_20;\n    u8 unk_21;\n    u8 unk_22;\n    u8 unk_23; // used\n    u16 unk_24;\n    u16 unk_26;\n    void* unk_28;\n    u16 unk_2c;\n    u8 unk_2e[0x6];\n    s16 unk_34;\n    s16 unk_36;\n    s16 unk_38;\n    s16 unk_3a;\n    u16 unk_3c;\n    u16 unk_3e; // used\n} Manager15;\n\nextern void (*const gUnk_081085D8[])(Manager*);\n\n// end of existing headers\n\nvoid sub_0805A9CC(Manager15* this) {\n    int tmp1, tmp2;\n    void* tmp3;\n    gScreen.affine.bg3xOffset = gRoomControls.roomScrollX - this->unk_24 + this->unk_34;\n    tmp1 = -gScreen.affine.bg3xOffset;\n    tmp2 = tmp1 + 0x100;\n    if (tmp1 < 0)\n        tmp1 = 0;\n    if (tmp1 > 0xF0)\n        tmp1 = 0xF0;\n    if (tmp2 < 0)\n        tmp2 = 0;\n    if (tmp2 > 0xF0)\n        tmp2 = 0xF0;\n    gScreen.controls.window1HorizontalDimensions = tmp1 << 8 | tmp2;\n    tmp1 = gRoomControls.roomScrollY - this->unk_26 + this->unk_36;\n    gScreen.affine.bg3yOffset = tmp1 & 0x3F;\n    if (tmp1 < 0)\n        tmp1 += 0x3F;\n    tmp3 = (&gBG3Buffer[(tmp1 >> 6 << 9)]);\n    gScreen.affine.bg2Tilemap = (u32*)tmp3; // TODO .unk5\n    gScreen.controls.window1VerticalDimensions = 0xa0;\n    if (this->unk_28 == tmp3)\n        return;\n    this->unk_28 = tmp3;\n    gScreen.affine.bg2Updated = 1; // TODO .unk4\n}\n",
      "asmCode": "thumb_func_start sub_0805A9CC\nsub_0805A9CC:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldr r3, _data0_0\n        ldr r5, _data0_0+0x4\n        ldrh r0, [r5, #0xa]\n        ldrh r1, [r4, #0x24]\n        sub r0, r1\n        ldrh r1, [r4, #0x34]\n        add r0, r1\n        strh r0, [r3, #0x2e]\n        mov r2, #0x2e\n        ldrsh r0, [r3, r2]\n        neg r2, r0\n        mov r0, #0x80\n        lsl r0, #0x1\n        add r1, r2, r0\n        cmp r2, #0x0\n        bge _code0_0\n        mov r2, #0x0\n_code0_0:\n        cmp r2, #0xf0\n        ble _code0_1\n        mov r2, #0xf0\n_code0_1:\n        cmp r1, #0x0\n        bge _code0_2\n        mov r1, #0x0\n_code0_2:\n        cmp r1, #0xf0\n        ble _code0_3\n        mov r1, #0xf0\n_code0_3:\n        lsl r0, r2, #0x8\n        orr r0, r1\n        mov r1, r3\n        add r1, #0x5a\n        strh r0, [r1]\n        mov r1, #0xc\n        ldrsh r0, [r5, r1]\n        ldrh r1, [r4, #0x26]\n        sub r0, r1\n        mov r2, #0x36\n        ldrsh r1, [r4, r2]\n        add r2, r0, r1\n        mov r1, #0x3f\n        mov r0, r2\n        and r0, r1\n        strh r0, [r3, #0x30]\n        mov r0, r2\n        cmp r0, #0x0\n        bge _code0_4\n        add r0, #0x3f\n_code0_4:\n        asr r0, #0x6\n        lsl r0, #0x9\n        ldr r1, _data0_0+0x8\n        add r1, r0, r1\n        str r1, [r3, #0x34]\n        mov r2, r3\n        add r2, #0x5e\n        mov r0, #0xa0\n        strh r0, [r2]\n        ldr r0, [r4, #0x28]\n        cmp r0, r1\n        beq _code0_5\n        str r1, [r4, #0x28]\n        mov r0, #0x1\n        strh r0, [r3, #0x32]\n_code0_5:\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gScreen\n        .4byte gRoomControls\n        .4byte gBG3Buffer",
      "score": "76",
      "id": 103
    },
    {
      "name": "sub_0805795C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"manager.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n\nextern void (*gUnk_08107C70[])(Manager*);\n\n// end of existing headers\n\nu32 sub_0805795C(Manager* this, DiggingCaveEntrance* entr) {\n    u16 offsetX, offsetY, offsetX2, offsetY2;\n    u32 tmp;\n    if (gUnk_03004030.unk_00) { // TODO .address_width (?)\n        offsetX = gPlayerEntity.x.HALF.HI - gRoomControls.roomOriginX;\n        offsetY = gPlayerEntity.y.HALF.HI - gRoomControls.roomOriginY;\n        offsetX2 = (entr->unk_00 & 0x3F) * 16 + 8;\n        offsetY2 = ((entr->unk_00 & 0xFC0) >> 6) * 16 + 0x18;\n        if ((u32)(offsetX - offsetX2) + 0x18 > 0x30)\n            return 0;\n        if ((u32)(offsetY - offsetY2) + 8 > 0x10)\n            return 0;\n        if (((offsetY < offsetY2)))\n            if ((u32)(offsetX - offsetX2) + 0xC <= 0x18)\n                return 0;\n\n    } else {\n        // offsetX = ((gPlayerEntity.x.HALF.HI - gRoomControls.roomOriginX) >> 4) & 0x3F;\n        // offsetY = ((gPlayerEntity.y.HALF.HI - gRoomControls.roomOriginY) >> 4) & 0x3F;\n        // tmp = offsetX | (offsetY << 6);\n        tmp = COORD_TO_TILE((&gPlayerEntity));\n        if (tmp != entr->unk_00)\n            return 0;\n        offsetY = gRoomControls.roomOriginY + ((tmp >> 6) * 16) + 6;\n        if (gPlayerEntity.y.HALF.HI >= offsetY)\n            return 0;\n    }\n    sub_08057A18(this, entr);\n    return 1;\n}\n",
      "asmCode": "thumb_func_start sub_0805795C\nsub_0805795C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r0\n        mov r6, r1\n        ldr r0, _data0_0\n        ldrb r0, [r0, #0x8]\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r1, _data0_0+0x4\n        ldr r3, _data0_0+0x8\n        ldrh r2, [r1, #0x2e]\n        ldrh r0, [r3, #0x6]\n        sub r2, r0\n        lsl r2, #0x10\n        lsr r2, #0x10\n        ldrh r0, [r1, #0x32]\n        ldrh r1, [r3, #0x8]\n        sub r0, r1\n        lsl r0, #0x10\n        lsr r4, r0, #0x10\n        ldrh r3, [r6]\n        mov r1, #0x3f\n        and r1, r3\n        lsl r1, #0x4\n        add r1, #0x8\n        mov r0, #0xfc\n        lsl r0, #0x4\n        and r0, r3\n        lsl r0, #0xe\n        mov r3, #0xc0\n        lsl r3, #0xd\n        add r0, r3\n        lsr r3, r0, #0x10\n        sub r2, r1\n        mov r0, r2\n        add r0, #0x18\n        cmp r0, #0x30\n        bhi _code0_2\n        sub r0, r4, r3\n        add r0, #0x8\n        cmp r0, #0x10\n        bhi _code0_2\n        cmp r4, r3\n        bhs _code0_1\n        mov r0, r2\n        add r0, #0xc\n        cmp r0, #0x18\n        bls _code0_2\n        b _code0_1\n_data0_0:\n        .4byte gUnk_03004030\n        .4byte gPlayerEntity\n        .4byte gRoomControls\n_code0_0:\n        ldr r3, _data0_1\n        mov r1, #0x2e\n        ldrsh r0, [r3, r1]\n        ldr r2, _data0_1+0x4\n        ldrh r1, [r2, #0x6]\n        sub r0, r1\n        asr r4, r0, #0x4\n        mov r1, #0x3f\n        and r4, r1\n        mov r0, #0x32\n        ldrsh r5, [r3, r0]\n        ldrh r2, [r2, #0x8]\n        sub r0, r5, r2\n        asr r0, #0x4\n        and r0, r1\n        lsl r0, #0x6\n        orr r4, r0\n        ldrh r1, [r6]\n        cmp r4, r1\n        bne _code0_2\n        lsr r0, r4, #0x6\n        lsl r0, #0x4\n        add r0, r2, r0\n        add r0, #0x6\n        lsl r0, #0x10\n        lsr r3, r0, #0x10\n        cmp r5, r3\n        bge _code0_2\n_code0_1:\n        mov r0, r7\n        mov r1, r6\n        bl sub_08057A18\n        mov r0, #0x1\n        b _code0_3\n_data0_1:\n        .4byte gPlayerEntity\n        .4byte gRoomControls\n_code0_2:\n        mov r0, #0x0\n_code0_3:\n        pop {r4, r5, r6, r7, pc}",
      "score": "96",
      "id": 104
    },
    {
      "name": "sub_08058D34",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"manager.h\"\n#include \"flags.h\"\n#include \"structures.h\"\n#include \"room.h\"\n#include \"screen.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"area.h\"\n#include \"utils.h\"\n\ntypedef struct {\n    Manager manager;\n    s32 unk_20;\n    union SplitWord unk_24;\n    u32 unk_28;\n    u32 unk_2c;\n    u8 unk_30[0x10];\n} ManagerC;\n\ntypedef struct {\n    u16 unk_0;\n    u16 unk_2;\n    u16 unk_4;\n    u16 unk_6;\n} struct_08108228;\n\nvoid (*const gUnk_0810821C[])(ManagerC*);\nconst struct_08108228 gUnk_08108228[6];\nconst struct_08108228 gUnk_08108258[6];\nconst struct_08108228 gUnk_08108288[6];\nconst struct_08108228 gUnk_081082B8[6];\nconst u16 gUnk_081082E8[0xC];\nconst u16 gUnk_08108300[4];\n\nvoid sub_08058BC8(ManagerC*);\nvoid sub_08058CB0(ManagerC*);\nvoid sub_08058CFC(void);\nvoid sub_08058A04(ManagerC*);\nvoid sub_080588F8(ManagerC*);\nu32 sub_08058B08(ManagerC*, u32, u32, const struct_08108228*);\nvoid sub_08058B5C(ManagerC*, u32);\n\nextern void sub_0805622C(struct BgAffineDstData*, u32, u32);\nextern void sub_080044AE(Entity*, u32, u32);\n\nextern u8 gUnk_03003DE4[0xC];\n\nextern struct BgAffineDstData gUnk_02017AA0[];\nextern struct BgAffineDstData gUnk_02017BA0[];\nextern u8 gUnk_02017700[];\nextern u8 gUnk_02000070;\nextern u32 gUsedPalettes;\n\nvoid sub_08058894(ManagerC*);\nvoid sub_080588CC(ManagerC*);\nvoid nullsub_108(ManagerC*);\n\n// end of existing headers\n\nvoid sub_08058D34() {\n    u16 tmp;\n    LoadPaletteGroup(0x28);\n    MemCopy(gUnk_02017700, gUnk_02017700 + 0x240, 0x20);\n    gUsedPalettes |= 0x200000;\n    LoadGfxGroup(0x16);\n    tmp = gScreen.lcd.displayControl;\n    gScreen.lcd.displayControl |= 1;\n    gScreen.affine.bg2Control = 0xBC82;\n    gScreen.bg.bg1Control = 0x5E86;\n    gScreen.bg.bg1xOffset = 0;\n    gScreen.bg.bg1yOffset = 0;\n    gScreen.bg.bg1Tilemap = 0;\n    gScreen.controls.layerFXControl = 0x3456;\n\n    gScreen.controls.alphaBlend = 0x909;\n\n    gArea.musicIndex = gArea.pMusicIndex;\n    gUnk_02000070 = 0;\n    if (CheckGlobalFlag(LV1TARU_OPEN)) {\n        LoadGfxGroup(0x4A);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08058D34\nsub_08058D34:\n        push {r4, lr}\n        mov r0, #0x28\n        bl LoadPaletteGroup\n        ldr r0, _data0_0\n        mov r2, #0x90\n        lsl r2, #0x2\n        add r1, r0, r2\n        mov r2, #0x20\n        bl MemCopy\n        ldr r2, _data0_0+0x4\n        ldr r0, [r2]\n        mov r1, #0x80\n        lsl r1, #0xe\n        orr r0, r1\n        str r0, [r2]\n        mov r0, #0x16\n        bl LoadGfxGroup\n        ldr r1, _data0_0+0x8\n        ldrh r0, [r1]\n        mov r3, #0x0\n        mov r2, #0x1\n        mov r4, #0x0\n        orr r0, r2\n        strh r0, [r1]\n        ldr r0, _data0_0+0xc\n        strh r0, [r1, #0x20]\n        ldr r0, _data0_0+0x10\n        strh r0, [r1, #0x14]\n        strh r3, [r1, #0x16]\n        strh r3, [r1, #0x18]\n        mov r2, r1\n        add r2, #0x66\n        ldr r0, _data0_0+0x14\n        strh r0, [r2]\n        add r1, #0x68\n        ldr r0, _data0_0+0x18\n        strh r0, [r1]\n        ldr r0, _data0_0+0x1c\n        mov r2, #0x86\n        lsl r2, #0x4\n        add r1, r0, r2\n        add r2, #0x4\n        add r0, r2\n        ldr r0, [r0]\n        str r0, [r1]\n        ldr r0, _data0_0+0x20\n        strb r4, [r0]\n        mov r0, #0x17\n        bl CheckGlobalFlag\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, #0x4a\n        bl LoadGfxGroup\n_code0_0:\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_02017700\n        .4byte gUsedPalettes\n        .4byte gScreen\n        .4byte 0xbc82\n        .4byte 0x5e86\n        .4byte 0x3456\n        .4byte 0x909\n        .4byte gArea\n        .4byte gUnk_02000070",
      "score": "67",
      "id": 105
    },
    {
      "name": "sub_0803473C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"screen.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void UnloadOBJPalette(Entity*);\nextern void DoExitTransition(ScreenTransitionData*);\n\nextern u8 gEntCount;\n\nvoid sub_0803499C(Entity*);\nvoid sub_08034420(Entity*);\nvoid sub_08034830(Entity*);\nu32 sub_080349D8(Entity*);\nvoid sub_0803442C(Entity*, u32);\nvoid sub_0803443C(Entity*);\nvoid sub_080347B4(Entity*);\nvoid sub_0803473C(Entity*);\nu32 sub_08034A10(Entity*);\nvoid sub_080347FC(Entity*);\nvoid sub_080344BC(Entity*);\nvoid sub_08034498(Entity*);\nvoid sub_08034474(Entity*);\nvoid sub_080345A0(Entity*);\nvoid sub_080345B8(Entity*);\nvoid sub_08034638(Entity*);\nvoid sub_08034618(Entity*);\nvoid sub_08034658(Entity*);\nvoid sub_0803467C(Entity*);\nu32 sub_080348A4(Entity*, Entity*, u32);\nvoid sub_08034C00(Entity*);\n\nvoid sub_08033EF0(Entity* this);\nvoid sub_08033F08(Entity* this);\nvoid nullsub_160(Entity* this);\nvoid sub_08033F1C(Entity* this);\nvoid sub_08034A84(Entity* this);\nvoid sub_08034AC4(Entity* this);\nvoid sub_08034BC8(Entity* this);\nvoid sub_08033F3C(Entity* this);\nvoid sub_08033FFC(Entity* this);\nvoid sub_0803414C(Entity* this);\nvoid sub_080341B8(Entity* this);\nvoid sub_080341D0(Entity* this);\nvoid sub_080341F4(Entity* this);\nvoid sub_08034210(Entity* this);\nvoid sub_08034240(Entity* this);\nvoid sub_08034274(Entity* this);\nvoid sub_080342A0(Entity* this);\nvoid sub_080342B4(Entity* this);\nvoid sub_080342C8(Entity* this);\nvoid sub_08034348(Entity* this);\nvoid sub_0803438C(Entity* this);\nvoid sub_08034578(Entity* this);\nvoid sub_080344E0(Entity* this);\nvoid sub_0803451C(Entity* this);\nvoid sub_08034558(Entity* this);\nvoid sub_080346A0(Entity* this);\nvoid sub_080345D0(Entity* this);\nvoid sub_080346C8(Entity* this);\nvoid sub_08034AEC(Entity* this);\nvoid sub_08034B0C(Entity* this);\nvoid sub_08034B38(Entity* this);\nvoid sub_08034BA0(Entity* this);\n\n// end of existing headers\n\nvoid sub_0803473C(Entity* this) {\n    u32 direction;\n    u32 playerX;\n    u32 roomX;\n\n    if ((this->field_0x7c.BYTES.byte1 & 0x10) != 0) {\n        if (0x28 < (*(Entity**)&this->field_0x74)->action) {\n            return;\n        }\n        playerX = gPlayerEntity.x.HALF.HI - 0x60;\n    } else {\n        if (0x28 < (*(Entity**)&this->field_0x78)->action) {\n            return;\n        }\n        playerX = gPlayerEntity.x.HALF.HI + 0x60;\n    }\n    roomX = gRoomControls.roomOriginX;\n    if (playerX - 4 > this->x.HALF.HI) {\n        if (roomX + 0xe0 < this->x.HALF.HI) {\n            return;\n        }\n        direction = 8;\n    } else {\n        if (playerX + 4 >= this->x.HALF.HI) {\n            return;\n        }\n        if (roomX + 0x90 > this->x.HALF.HI) {\n            return;\n        }\n        direction = 0x18;\n    }\n    this->direction = direction;\n    sub_0806F69C(this);\n}\n",
      "asmCode": "thumb_func_start sub_0803473C\nsub_0803473C:\n        push {r4, r5, lr}\n        mov r3, r0\n        add r0, #0x7d\n        ldrb r1, [r0]\n        mov r0, #0x10\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r0, [r3, #0x74]\n        ldrb r0, [r0, #0xc]\n        cmp r0, #0x28\n        bhi _code0_4\n        ldr r0, _data0_0\n        mov r1, #0x2e\n        ldrsh r0, [r0, r1]\n        mov r2, r0\n        sub r2, #0x60\n        b _code0_1\n_data0_0:\n        .4byte gPlayerEntity\n_code0_0:\n        ldr r0, [r3, #0x78]\n        ldrb r0, [r0, #0xc]\n        cmp r0, #0x28\n        bhi _code0_4\n        ldr r0, _data0_1\n        mov r5, #0x2e\n        ldrsh r0, [r0, r5]\n        mov r2, r0\n        add r2, #0x60\n_code0_1:\n        ldr r0, _data0_1+0x4\n        ldrh r4, [r0, #0x6]\n        sub r0, r2, #0x4\n        mov r5, #0x2e\n        ldrsh r1, [r3, r5]\n        cmp r0, r1\n        bls _code0_2\n        mov r0, r4\n        add r0, #0xe0\n        cmp r0, r1\n        blo _code0_4\n        mov r0, #0x8\n        b _code0_3\n_data0_1:\n        .4byte gPlayerEntity\n        .4byte gRoomControls\n_code0_2:\n        add r0, r2, #0x4\n        cmp r0, r1\n        bhs _code0_4\n        mov r0, r4\n        add r0, #0x90\n        cmp r0, r1\n        bhi _code0_4\n        mov r0, #0x18\n_code0_3:\n        strb r0, [r3, #0x15]\n        mov r0, r3\n        bl sub_0806F69C\n_code0_4:\n        pop {r4, r5, pc}",
      "score": "64",
      "id": 106
    },
    {
      "name": "sub_080347B4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"screen.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void UnloadOBJPalette(Entity*);\nextern void DoExitTransition(ScreenTransitionData*);\n\nextern u8 gEntCount;\n\nvoid sub_0803499C(Entity*);\nvoid sub_08034420(Entity*);\nvoid sub_08034830(Entity*);\nu32 sub_080349D8(Entity*);\nvoid sub_0803442C(Entity*, u32);\nvoid sub_0803443C(Entity*);\nvoid sub_080347B4(Entity*);\nvoid sub_0803473C(Entity*);\nu32 sub_08034A10(Entity*);\nvoid sub_080347FC(Entity*);\nvoid sub_080344BC(Entity*);\nvoid sub_08034498(Entity*);\nvoid sub_08034474(Entity*);\nvoid sub_080345A0(Entity*);\nvoid sub_080345B8(Entity*);\nvoid sub_08034638(Entity*);\nvoid sub_08034618(Entity*);\nvoid sub_08034658(Entity*);\nvoid sub_0803467C(Entity*);\nu32 sub_080348A4(Entity*, Entity*, u32);\nvoid sub_08034C00(Entity*);\n\nvoid sub_08033EF0(Entity* this);\nvoid sub_08033F08(Entity* this);\nvoid nullsub_160(Entity* this);\nvoid sub_08033F1C(Entity* this);\nvoid sub_08034A84(Entity* this);\nvoid sub_08034AC4(Entity* this);\nvoid sub_08034BC8(Entity* this);\nvoid sub_08033F3C(Entity* this);\nvoid sub_08033FFC(Entity* this);\nvoid sub_0803414C(Entity* this);\nvoid sub_080341B8(Entity* this);\nvoid sub_080341D0(Entity* this);\nvoid sub_080341F4(Entity* this);\nvoid sub_08034210(Entity* this);\nvoid sub_08034240(Entity* this);\nvoid sub_08034274(Entity* this);\nvoid sub_080342A0(Entity* this);\nvoid sub_080342B4(Entity* this);\nvoid sub_080342C8(Entity* this);\nvoid sub_08034348(Entity* this);\nvoid sub_0803438C(Entity* this);\nvoid sub_08034578(Entity* this);\nvoid sub_080344E0(Entity* this);\nvoid sub_0803451C(Entity* this);\nvoid sub_08034558(Entity* this);\nvoid sub_080346A0(Entity* this);\nvoid sub_080345D0(Entity* this);\nvoid sub_080346C8(Entity* this);\nvoid sub_08034AEC(Entity* this);\nvoid sub_08034B0C(Entity* this);\nvoid sub_08034B38(Entity* this);\nvoid sub_08034BA0(Entity* this);\n\n// end of existing headers\n\nvoid sub_080347B4(Entity* this) {\n    u32 direction;\n    u32 playerX = gPlayerEntity.x.HALF.HI;\n    u32 roomX = gRoomControls.roomOriginX;\n    if (playerX - 4 > this->x.HALF.HI) {\n        if (roomX + 0xe0 < this->x.HALF.HI) {\n            return;\n        }\n        direction = 8;\n    } else {\n        if (playerX + 4 >= this->x.HALF.HI) {\n            return;\n        }\n        if (roomX + 0x90 > this->x.HALF.HI) {\n            return;\n        }\n        direction = 0x18;\n    }\n    this->direction = direction;\n    sub_0806F69C(this);\n}\n",
      "asmCode": "thumb_func_start sub_080347B4\nsub_080347B4:\n        push {r4, r5, lr}\n        mov r2, r0\n        ldr r0, _data0_0\n        mov r1, #0x2e\n        ldrsh r3, [r0, r1]\n        ldr r0, _data0_0+0x4\n        ldrh r4, [r0, #0x6]\n        sub r0, r3, #0x4\n        mov r5, #0x2e\n        ldrsh r1, [r2, r5]\n        cmp r0, r1\n        bls _code0_0\n        mov r0, r4\n        add r0, #0xe0\n        cmp r0, r1\n        blo _code0_2\n        mov r0, #0x8\n        b _code0_1\n_data0_0:\n        .4byte gPlayerEntity\n        .4byte gRoomControls\n_code0_0:\n        add r0, r3, #0x4\n        cmp r0, r1\n        bhs _code0_2\n        mov r0, r4\n        add r0, #0x90\n        cmp r0, r1\n        bhi _code0_2\n        mov r0, #0x18\n_code0_1:\n        strb r0, [r2, #0x15]\n        mov r0, r2\n        bl sub_0806F69C\n_code0_2:\n        pop {r4, r5, pc}",
      "score": "38",
      "id": 107
    },
    {
      "name": "sub_080348A4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"screen.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void UnloadOBJPalette(Entity*);\nextern void DoExitTransition(ScreenTransitionData*);\n\nextern u8 gEntCount;\n\nvoid sub_0803499C(Entity*);\nvoid sub_08034420(Entity*);\nvoid sub_08034830(Entity*);\nu32 sub_080349D8(Entity*);\nvoid sub_0803442C(Entity*, u32);\nvoid sub_0803443C(Entity*);\nvoid sub_080347B4(Entity*);\nvoid sub_0803473C(Entity*);\nu32 sub_08034A10(Entity*);\nvoid sub_080347FC(Entity*);\nvoid sub_080344BC(Entity*);\nvoid sub_08034498(Entity*);\nvoid sub_08034474(Entity*);\nvoid sub_080345A0(Entity*);\nvoid sub_080345B8(Entity*);\nvoid sub_08034638(Entity*);\nvoid sub_08034618(Entity*);\nvoid sub_08034658(Entity*);\nvoid sub_0803467C(Entity*);\nu32 sub_080348A4(Entity*, Entity*, u32);\nvoid sub_08034C00(Entity*);\n\nvoid sub_08033EF0(Entity* this);\nvoid sub_08033F08(Entity* this);\nvoid nullsub_160(Entity* this);\nvoid sub_08033F1C(Entity* this);\nvoid sub_08034A84(Entity* this);\nvoid sub_08034AC4(Entity* this);\nvoid sub_08034BC8(Entity* this);\nvoid sub_08033F3C(Entity* this);\nvoid sub_08033FFC(Entity* this);\nvoid sub_0803414C(Entity* this);\nvoid sub_080341B8(Entity* this);\nvoid sub_080341D0(Entity* this);\nvoid sub_080341F4(Entity* this);\nvoid sub_08034210(Entity* this);\nvoid sub_08034240(Entity* this);\nvoid sub_08034274(Entity* this);\nvoid sub_080342A0(Entity* this);\nvoid sub_080342B4(Entity* this);\nvoid sub_080342C8(Entity* this);\nvoid sub_08034348(Entity* this);\nvoid sub_0803438C(Entity* this);\nvoid sub_08034578(Entity* this);\nvoid sub_080344E0(Entity* this);\nvoid sub_0803451C(Entity* this);\nvoid sub_08034558(Entity* this);\nvoid sub_080346A0(Entity* this);\nvoid sub_080345D0(Entity* this);\nvoid sub_080346C8(Entity* this);\nvoid sub_08034AEC(Entity* this);\nvoid sub_08034B0C(Entity* this);\nvoid sub_08034B38(Entity* this);\nvoid sub_08034BA0(Entity* this);\n\n// end of existing headers\n\nu32 sub_080348A4(Entity* this, Entity* hand_, u32 unk) {\n    u8 bVar1;\n    Entity* pEVar4;\n    u32 temp;\n\n    if (hand_->type == 0) {\n        bVar1 = 5;\n        this->field_0x7c.BYTES.byte1 |= 0x10;\n    } else {\n        bVar1 = 10;\n    }\n\n    if (this->field_0x80.HALF.LO & bVar1) {\n        this->field_0x7c.BYTES.byte1 |= (hand_->type == 0) ? 1 : 2;\n        return 0;\n    } else {\n        switch (unk) {\n            case 0:\n                hand_->action = 3;\n                break;\n            case 1:\n                hand_->action = 4;\n                hand_->field_0x7c.BYTES.byte0 = 3;\n                break;\n            case 2:\n            case 4:\n                hand_->action = 4;\n                hand_->field_0x7c.BYTES.byte0 = 1;\n                break;\n            case 3:\n                hand_->action = 0xf;\n                hand_->field_0x7c.HALF.HI = 0xb4;\n                break;\n            case 5:\n                hand_->action = 0xf;\n                hand_->field_0x7c.HALF.HI = 1;\n                break;\n            case 6:\n                hand_->action = 0x1e;\n                break;\n            case 7:\n                hand_->action = 0x1b;\n                hand_->flags = hand_->flags & 0x7f;\n                InitializeAnimation(hand_, 5);\n                break;\n            case 8:\n                pEVar4 = CreateEnemy(MAZAAL_HEAD, hand_->type + 2);\n                if (pEVar4 != NULL) {\n                    pEVar4->parent = this;\n                }\n                break;\n            default:\n                break;\n        }\n        return 1;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080348A4\nsub_080348A4:\n        push {r4, r5, lr}\n        mov r4, r0\n        mov r3, r1\n        mov r5, r2\n        ldrb r0, [r3, #0xa]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r2, #0x5\n        mov r0, #0x7d\n        add r0, r4\n        mov r12, r0\n        ldrb r1, [r0]\n        mov r0, #0x10\n        orr r0, r1\n        mov r1, r12\n        strb r0, [r1]\n        b _code0_1\n_code0_0:\n        mov r2, #0xa\n_code0_1:\n        mov r0, r4\n        add r0, #0x80\n        ldrb r0, [r0]\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_4\n        mov r0, r4\n        add r0, #0x7d\n        ldrb r2, [r0]\n        ldrb r1, [r3, #0xa]\n        mov r3, r0\n        cmp r1, #0x0\n        bne _code0_2\n        mov r0, #0x1\n        b _code0_3\n_code0_2:\n        mov r0, #0x2\n_code0_3:\n        orr r0, r2\n        strb r0, [r3]\n        mov r0, #0x0\n        b _code0_6\n_code0_4:\n        cmp r5, #0x8\n        bhi _code0_5\n        lsl r0, r5, #0x2\n        ldr r1, _data0_0\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_0:\n        .4byte _other0_0\n_other0_0:\n        .4byte _case0_0\n        .4byte _case0_1\n        .4byte _case0_2\n        .4byte _case0_3\n        .4byte _case0_2\n        .4byte _case0_4\n        .4byte _case0_5\n        .4byte _case0_6\n        .4byte _case0_7\n_case0_0:\n        mov r0, #0x3\n        strb r0, [r3, #0xc]\n        b _code0_5\n_case0_1:\n        mov r0, #0x4\n        strb r0, [r3, #0xc]\n        mov r1, r3\n        add r1, #0x7c\n        mov r0, #0x3\n        strb r0, [r1]\n        b _code0_5\n_case0_2:\n        mov r0, #0x4\n        strb r0, [r3, #0xc]\n        mov r1, r3\n        add r1, #0x7c\n        mov r0, #0x1\n        strb r0, [r1]\n        b _code0_5\n_case0_3:\n        mov r0, #0xf\n        strb r0, [r3, #0xc]\n        mov r1, r3\n        add r1, #0x7e\n        mov r0, #0xb4\n        strh r0, [r1]\n        b _code0_5\n_case0_4:\n        mov r0, #0xf\n        strb r0, [r3, #0xc]\n        mov r1, r3\n        add r1, #0x7e\n        mov r0, #0x1\n        strh r0, [r1]\n        b _code0_5\n_case0_5:\n        mov r0, #0x1e\n        strb r0, [r3, #0xc]\n        b _code0_5\n_case0_6:\n        mov r0, #0x1b\n        strb r0, [r3, #0xc]\n        ldrb r1, [r3, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r3, #0x10]\n        mov r0, r3\n        mov r1, #0x5\n        bl InitializeAnimation\n        b _code0_5\n_case0_7:\n        ldrb r0, [r3, #0xa]\n        add r2, r0, #0x2\n        mov r0, #0x36\n        mov r1, r2\n        bl CreateEnemy\n        mov r3, r0\n        cmp r3, #0x0\n        beq _code0_5\n        str r4, [r3, #0x50]\n_code0_5:\n        mov r0, #0x1\n_code0_6:\n        pop {r4, r5, pc}",
      "score": "129",
      "id": 108
    },
    {
      "name": "sub_08034A10",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"screen.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void UnloadOBJPalette(Entity*);\nextern void DoExitTransition(ScreenTransitionData*);\n\nextern u8 gEntCount;\n\nvoid sub_0803499C(Entity*);\nvoid sub_08034420(Entity*);\nvoid sub_08034830(Entity*);\nu32 sub_080349D8(Entity*);\nvoid sub_0803442C(Entity*, u32);\nvoid sub_0803443C(Entity*);\nvoid sub_080347B4(Entity*);\nvoid sub_0803473C(Entity*);\nu32 sub_08034A10(Entity*);\nvoid sub_080347FC(Entity*);\nvoid sub_080344BC(Entity*);\nvoid sub_08034498(Entity*);\nvoid sub_08034474(Entity*);\nvoid sub_080345A0(Entity*);\nvoid sub_080345B8(Entity*);\nvoid sub_08034638(Entity*);\nvoid sub_08034618(Entity*);\nvoid sub_08034658(Entity*);\nvoid sub_0803467C(Entity*);\nu32 sub_080348A4(Entity*, Entity*, u32);\nvoid sub_08034C00(Entity*);\n\nvoid sub_08033EF0(Entity* this);\nvoid sub_08033F08(Entity* this);\nvoid nullsub_160(Entity* this);\nvoid sub_08033F1C(Entity* this);\nvoid sub_08034A84(Entity* this);\nvoid sub_08034AC4(Entity* this);\nvoid sub_08034BC8(Entity* this);\nvoid sub_08033F3C(Entity* this);\nvoid sub_08033FFC(Entity* this);\nvoid sub_0803414C(Entity* this);\nvoid sub_080341B8(Entity* this);\nvoid sub_080341D0(Entity* this);\nvoid sub_080341F4(Entity* this);\nvoid sub_08034210(Entity* this);\nvoid sub_08034240(Entity* this);\nvoid sub_08034274(Entity* this);\nvoid sub_080342A0(Entity* this);\nvoid sub_080342B4(Entity* this);\nvoid sub_080342C8(Entity* this);\nvoid sub_08034348(Entity* this);\nvoid sub_0803438C(Entity* this);\nvoid sub_08034578(Entity* this);\nvoid sub_080344E0(Entity* this);\nvoid sub_0803451C(Entity* this);\nvoid sub_08034558(Entity* this);\nvoid sub_080346A0(Entity* this);\nvoid sub_080345D0(Entity* this);\nvoid sub_080346C8(Entity* this);\nvoid sub_08034AEC(Entity* this);\nvoid sub_08034B0C(Entity* this);\nvoid sub_08034B38(Entity* this);\nvoid sub_08034BA0(Entity* this);\n\n// end of existing headers\n\nu32 sub_08034A10(Entity* this) {\n    if ((this->field_0x7c.BYTES.byte1 & 0x60) != 0x40) {\n        if ((this->field_0x7c.BYTES.byte1 & 0x10) != 0) {\n            if ((this->field_0x80.HALF.LO & 5) != 0) {\n                this->field_0x7c.BYTES.byte1 |= 0x40;\n            }\n            if (((this->field_0x80.HALF.LO & 10) == 0) || ((this->field_0x7c.BYTES.byte1 & 3) != 1)) {\n                return 0;\n            }\n        } else {\n            if ((this->field_0x80.HALF.LO & 10) != 0) {\n                this->field_0x7c.BYTES.byte1 |= 0x40;\n            }\n            if ((this->field_0x80.HALF.LO & 5) == 0) {\n                return 0;\n            }\n            if ((this->field_0x7c.BYTES.byte1 & 3) != 2) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
      "asmCode": "thumb_func_start sub_08034A10\nsub_08034A10:\n        push {r4, lr}\n        mov r1, r0\n        mov r3, r1\n        add r3, #0x7d\n        ldrb r2, [r3]\n        mov r0, #0x60\n        and r0, r2\n        cmp r0, #0x40\n        beq _code0_1\n        mov r0, #0x10\n        and r0, r2\n        cmp r0, #0x0\n        beq _code0_2\n        mov r4, r1\n        add r4, #0x80\n        ldrb r1, [r4]\n        mov r0, #0x5\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, #0x40\n        orr r0, r2\n        strb r0, [r3]\n_code0_0:\n        ldrb r1, [r4]\n        mov r0, #0xa\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        ldrb r1, [r3]\n        mov r0, #0x3\n        and r0, r1\n        cmp r0, #0x1\n        bne _code0_4\n_code0_1:\n        mov r0, #0x1\n        b _code0_5\n_code0_2:\n        mov r4, r1\n        add r4, #0x80\n        ldrb r1, [r4]\n        mov r0, #0xa\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_3\n        mov r0, #0x40\n        orr r0, r2\n        strb r0, [r3]\n_code0_3:\n        ldrb r1, [r4]\n        mov r0, #0x5\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        ldrb r1, [r3]\n        mov r0, #0x3\n        and r0, r1\n        cmp r0, #0x2\n        beq _code0_1\n_code0_4:\n        mov r0, #0x0\n_code0_5:\n        pop {r4, pc}",
      "score": "65",
      "id": 109
    },
    {
      "name": "sub_08034B38",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"screen.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern void UnloadOBJPalette(Entity*);\nextern void DoExitTransition(ScreenTransitionData*);\n\nextern u8 gEntCount;\n\nvoid sub_0803499C(Entity*);\nvoid sub_08034420(Entity*);\nvoid sub_08034830(Entity*);\nu32 sub_080349D8(Entity*);\nvoid sub_0803442C(Entity*, u32);\nvoid sub_0803443C(Entity*);\nvoid sub_080347B4(Entity*);\nvoid sub_0803473C(Entity*);\nu32 sub_08034A10(Entity*);\nvoid sub_080347FC(Entity*);\nvoid sub_080344BC(Entity*);\nvoid sub_08034498(Entity*);\nvoid sub_08034474(Entity*);\nvoid sub_080345A0(Entity*);\nvoid sub_080345B8(Entity*);\nvoid sub_08034638(Entity*);\nvoid sub_08034618(Entity*);\nvoid sub_08034658(Entity*);\nvoid sub_0803467C(Entity*);\nu32 sub_080348A4(Entity*, Entity*, u32);\nvoid sub_08034C00(Entity*);\n\nvoid sub_08033EF0(Entity* this);\nvoid sub_08033F08(Entity* this);\nvoid nullsub_160(Entity* this);\nvoid sub_08033F1C(Entity* this);\nvoid sub_08034A84(Entity* this);\nvoid sub_08034AC4(Entity* this);\nvoid sub_08034BC8(Entity* this);\nvoid sub_08033F3C(Entity* this);\nvoid sub_08033FFC(Entity* this);\nvoid sub_0803414C(Entity* this);\nvoid sub_080341B8(Entity* this);\nvoid sub_080341D0(Entity* this);\nvoid sub_080341F4(Entity* this);\nvoid sub_08034210(Entity* this);\nvoid sub_08034240(Entity* this);\nvoid sub_08034274(Entity* this);\nvoid sub_080342A0(Entity* this);\nvoid sub_080342B4(Entity* this);\nvoid sub_080342C8(Entity* this);\nvoid sub_08034348(Entity* this);\nvoid sub_0803438C(Entity* this);\nvoid sub_08034578(Entity* this);\nvoid sub_080344E0(Entity* this);\nvoid sub_0803451C(Entity* this);\nvoid sub_08034558(Entity* this);\nvoid sub_080346A0(Entity* this);\nvoid sub_080345D0(Entity* this);\nvoid sub_080346C8(Entity* this);\nvoid sub_08034AEC(Entity* this);\nvoid sub_08034B0C(Entity* this);\nvoid sub_08034B38(Entity* this);\nvoid sub_08034BA0(Entity* this);\n\n// end of existing headers\n\nvoid sub_08034B38(Entity* this) {\n    Entity* target;\n    const s8* ptr;\n\n    if (--this->actionDelay == 0) {\n        this->action = 3;\n        InitializeAnimation(this, this->type + 3);\n    } else {\n        target = sub_080A7EE0(0xe);\n        if (target != NULL) {\n            target->type -= 2;\n            if (target->type == 0) {\n                target->direction = 0xa8 - this->actionDelay;\n            } else {\n                target->direction = this->actionDelay + 0x58;\n            }\n            ptr = &gUnk_080CED84[target->type * 2];\n            PositionRelative(this, target, *(ptr++) << 0x10, *ptr << 0x10);\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08034B38\nsub_08034B38:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0xa]\n        add r1, #0x3\n        mov r0, r4\n        bl InitializeAnimation\n        b _code0_3\n_code0_0:\n        mov r0, #0xe\n        bl sub_080A7EE0\n        mov r5, r0\n        cmp r5, #0x0\n        beq _code0_3\n        ldrb r0, [r4, #0xa]\n        sub r0, #0x2\n        strb r0, [r5, #0xa]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_1\n        ldrb r1, [r4, #0xe]\n        mov r0, #0xa8\n        sub r0, r1\n        b _code0_2\n_code0_1:\n        ldrb r0, [r4, #0xe]\n        add r0, #0x58\n_code0_2:\n        strb r0, [r5, #0x15]\n        ldrb r0, [r5, #0xa]\n        lsl r0, #0x1\n        ldr r1, _data0_0\n        add r0, r1\n        mov r2, #0x0\n        ldrsb r2, [r0, r2]\n        lsl r2, #0x10\n        mov r3, #0x1\n        ldrsb r3, [r0, r3]\n        lsl r3, #0x10\n        mov r0, r4\n        mov r1, r5\n        bl PositionRelative\n_code0_3:\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gUnk_080CED84",
      "score": "55",
      "id": 110
    },
    {
      "name": "sub_0803A188",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nvoid sub_0803B538(Entity*);\nu32 sub_0803B4E4(Entity*);\nvoid sub_0803B55C(Entity*);\nvoid sub_0803B4D4(Entity*);\nvoid sub_0803B59C(Entity*);\nvoid sub_0803B5C0(Entity*);\nu32 sub_0803B610(Entity*);\nvoid sub_0803B63C(Entity*);\nvoid sub_0803B6A4(Entity*);\nu32 sub_0803B6F4(Entity*);\nvoid sub_0803B8E8(Entity*, u32);\nu32 sub_0803B870(Entity*);\nvoid sub_0803B824(Entity*);\nvoid sub_0803B804(Entity*);\nvoid sub_0803B798(void);\nvoid sub_0803BA8C(Entity*, u32);\n\nvoid sub_0803B724(Entity*);\nextern void sub_0800449C(Entity*, u32);\n\nvoid sub_0803A170(Entity*);\nvoid sub_0803A188(Entity*);\nvoid nullsub_167(Entity*);\nvoid sub_0803A254(Entity*);\nvoid sub_0803B8F8(Entity*);\n\nvoid sub_0803A274(Entity*);\nvoid sub_0803A364(Entity*);\nvoid sub_0803A548(Entity*);\nvoid sub_0803A58C(Entity*);\nvoid sub_0803A5D0(Entity*);\nvoid sub_0803A60C(Entity*);\nvoid sub_0803A660(Entity*);\nvoid sub_0803A6E8(Entity*);\nvoid sub_0803A720(Entity*);\nvoid sub_0803A740(Entity*);\nvoid sub_0803A780(Entity*);\nvoid sub_0803A7AC(Entity*);\nvoid sub_0803A7CC(Entity*);\nvoid sub_0803A814(Entity*);\nvoid sub_0803A86C(Entity*);\nvoid sub_0803A8B8(Entity*);\nvoid sub_0803A90C(Entity*);\nvoid sub_0803A978(Entity*);\nvoid sub_0803AA00(Entity*);\nvoid sub_0803AA98(Entity*);\nvoid sub_0803AB10(Entity*);\nvoid sub_0803AB5C(Entity*);\nvoid sub_0803ABB4(Entity*);\nvoid sub_0803AC1C(Entity*);\nvoid sub_0803AC60(Entity*);\nvoid sub_0803ACC0(Entity*);\nvoid sub_0803ADAC(Entity*);\nvoid sub_0803ADF4(Entity*);\nvoid sub_0803AE48(Entity*);\nvoid sub_0803AEC4(Entity*);\nvoid sub_0803AF18(Entity*);\nvoid sub_0803AF50(Entity*);\nvoid sub_0803AF7C(Entity*);\nvoid sub_0803AF9C(Entity*);\nvoid sub_0803AFC8(Entity*);\nvoid sub_0803AFE0(Entity*);\nvoid sub_0803B01C(Entity*);\nvoid sub_0803B04C(Entity*);\nvoid sub_0803B074(Entity*);\nvoid sub_0803B0D4(Entity*);\nvoid sub_0803B100(Entity*);\nvoid sub_0803B144(Entity*);\nvoid sub_0803B17C(Entity*);\nvoid sub_0803B1B8(Entity*);\nvoid sub_0803B2D0(Entity*);\nvoid sub_0803B30C(Entity*);\nvoid sub_0803B338(Entity*);\nvoid sub_0803B35C(Entity*);\nvoid sub_0803B398(Entity*);\nvoid sub_0803B3F4(Entity*);\nvoid sub_0803B480(Entity*);\n\nvoid sub_0803B910(Entity*);\nvoid sub_0803B978(Entity*);\nvoid sub_0803BA6C(Entity*);\nvoid sub_0803BA80(Entity*);\n\nextern u8 gEntCount;\n// these are not with the rest of this files constant data\nextern Hitbox gUnk_080FD35C;\nextern Hitbox gUnk_080FD364;\nextern Hitbox gUnk_080FD36C;\nextern Hitbox gUnk_080FD374;\n\n// end of existing headers\n\nvoid sub_0803A188(Entity* this) {\n    Entity* pEVar3;\n    Entity* entity74;\n\n    if (this->type < 2) {\n        if (this->action != 0x2b) {\n            if ((0 < this->iframes) && ((this->bitfield == 0x95 || (this->bitfield == 0x8e)))) {\n                this->action = 0x28;\n                this->flags = this->flags & 0x7f;\n                pEVar3 = this->parent;\n                pEVar3->field_0x7c.BYTES.byte1 = pEVar3->field_0x7c.BYTES.byte1 | (this->type == 0 ? 1 : 2);\n                pEVar3->field_0x80.HALF.LO = (this->type == 0 ? 1 : 2) | pEVar3->field_0x80.HALF.LO;\n                this->attachedEntity->iframes = this->iframes;\n                entity74 = *(Entity**)&this->field_0x74;\n                entity74->iframes = this->iframes;\n                SoundReq(SFX_BOSS_HIT);\n            }\n        } else {\n            this->attachedEntity->iframes = this->iframes;\n            entity74 = *(Entity**)&this->field_0x74;\n            entity74->iframes = this->iframes;\n            InitializeAnimation(this, 0x18);\n            InitAnimationForceUpdate(this->attachedEntity, 9);\n            SoundReq(SFX_BOSS_HIT);\n        }\n    }\n    sub_0804AA30(this, gUnk_080CFC14);\n}\n",
      "asmCode": "thumb_func_start sub_0803A188\nsub_0803A188:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r3, [r4, #0xa]\n        cmp r3, #0x1\n        bhi _code0_6\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x2b\n        beq _code0_5\n        mov r0, r4\n        add r0, #0x3d\n        mov r1, #0x0\n        ldrsb r1, [r0, r1]\n        mov r5, r0\n        cmp r1, #0x0\n        ble _code0_6\n        add r0, #0x4\n        ldrb r0, [r0]\n        cmp r0, #0x95\n        beq _code0_0\n        cmp r0, #0x8e\n        bne _code0_6\n_code0_0:\n        mov r0, #0x28\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x10]\n        ldr r2, [r4, #0x50]\n        mov r0, r2\n        add r0, #0x7d\n        ldrb r1, [r0]\n        cmp r3, #0x0\n        bne _code0_1\n        mov r0, #0x1\n        b _code0_2\n_code0_1:\n        mov r0, #0x2\n_code0_2:\n        orr r1, r0\n        mov r0, r2\n        add r0, #0x7d\n        strb r1, [r0]\n        add r0, #0x3\n        ldrb r2, [r0]\n        ldrb r1, [r4, #0xa]\n        mov r3, r0\n        cmp r1, #0x0\n        bne _code0_3\n        mov r0, #0x1\n        b _code0_4\n_code0_3:\n        mov r0, #0x2\n_code0_4:\n        orr r0, r2\n        strb r0, [r3]\n        ldr r2, [r4, #0x54]\n        ldrb r1, [r5]\n        mov r0, r2\n        add r0, #0x3d\n        strb r1, [r0]\n        ldr r2, [r4, #0x74]\n        ldrb r1, [r5]\n        mov r0, r2\n        add r0, #0x3d\n        strb r1, [r0]\n        ldr r0, _data0_0\n        bl SoundReq\n        b _code0_6\n_data0_0:\n        .4byte 0x127\n_code0_5:\n        ldr r2, [r4, #0x54]\n        mov r3, r4\n        add r3, #0x3d\n        ldrb r1, [r3]\n        mov r0, r2\n        add r0, #0x3d\n        strb r1, [r0]\n        ldr r2, [r4, #0x74]\n        ldrb r1, [r3]\n        mov r0, r2\n        add r0, #0x3d\n        strb r1, [r0]\n        mov r0, r4\n        mov r1, #0x18\n        bl InitializeAnimation\n        ldr r0, [r4, #0x54]\n        mov r1, #0x9\n        bl InitAnimationForceUpdate\n        ldr r0, _data0_1\n        bl SoundReq\n_code0_6:\n        ldr r1, _data0_1+0x4\n        mov r0, r4\n        bl sub_0804AA30\n        pop {r4, r5, pc}\n_data0_1:\n        .4byte 0x127\n        .4byte gUnk_080CFC14",
      "score": "102",
      "id": 111
    },
    {
      "name": "sub_0803AA98",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nvoid sub_0803B538(Entity*);\nu32 sub_0803B4E4(Entity*);\nvoid sub_0803B55C(Entity*);\nvoid sub_0803B4D4(Entity*);\nvoid sub_0803B59C(Entity*);\nvoid sub_0803B5C0(Entity*);\nu32 sub_0803B610(Entity*);\nvoid sub_0803B63C(Entity*);\nvoid sub_0803B6A4(Entity*);\nu32 sub_0803B6F4(Entity*);\nvoid sub_0803B8E8(Entity*, u32);\nu32 sub_0803B870(Entity*);\nvoid sub_0803B824(Entity*);\nvoid sub_0803B804(Entity*);\nvoid sub_0803B798(void);\nvoid sub_0803BA8C(Entity*, u32);\n\nvoid sub_0803B724(Entity*);\nextern void sub_0800449C(Entity*, u32);\n\nvoid sub_0803A170(Entity*);\nvoid sub_0803A188(Entity*);\nvoid nullsub_167(Entity*);\nvoid sub_0803A254(Entity*);\nvoid sub_0803B8F8(Entity*);\n\nvoid sub_0803A274(Entity*);\nvoid sub_0803A364(Entity*);\nvoid sub_0803A548(Entity*);\nvoid sub_0803A58C(Entity*);\nvoid sub_0803A5D0(Entity*);\nvoid sub_0803A60C(Entity*);\nvoid sub_0803A660(Entity*);\nvoid sub_0803A6E8(Entity*);\nvoid sub_0803A720(Entity*);\nvoid sub_0803A740(Entity*);\nvoid sub_0803A780(Entity*);\nvoid sub_0803A7AC(Entity*);\nvoid sub_0803A7CC(Entity*);\nvoid sub_0803A814(Entity*);\nvoid sub_0803A86C(Entity*);\nvoid sub_0803A8B8(Entity*);\nvoid sub_0803A90C(Entity*);\nvoid sub_0803A978(Entity*);\nvoid sub_0803AA00(Entity*);\nvoid sub_0803AA98(Entity*);\nvoid sub_0803AB10(Entity*);\nvoid sub_0803AB5C(Entity*);\nvoid sub_0803ABB4(Entity*);\nvoid sub_0803AC1C(Entity*);\nvoid sub_0803AC60(Entity*);\nvoid sub_0803ACC0(Entity*);\nvoid sub_0803ADAC(Entity*);\nvoid sub_0803ADF4(Entity*);\nvoid sub_0803AE48(Entity*);\nvoid sub_0803AEC4(Entity*);\nvoid sub_0803AF18(Entity*);\nvoid sub_0803AF50(Entity*);\nvoid sub_0803AF7C(Entity*);\nvoid sub_0803AF9C(Entity*);\nvoid sub_0803AFC8(Entity*);\nvoid sub_0803AFE0(Entity*);\nvoid sub_0803B01C(Entity*);\nvoid sub_0803B04C(Entity*);\nvoid sub_0803B074(Entity*);\nvoid sub_0803B0D4(Entity*);\nvoid sub_0803B100(Entity*);\nvoid sub_0803B144(Entity*);\nvoid sub_0803B17C(Entity*);\nvoid sub_0803B1B8(Entity*);\nvoid sub_0803B2D0(Entity*);\nvoid sub_0803B30C(Entity*);\nvoid sub_0803B338(Entity*);\nvoid sub_0803B35C(Entity*);\nvoid sub_0803B398(Entity*);\nvoid sub_0803B3F4(Entity*);\nvoid sub_0803B480(Entity*);\n\nvoid sub_0803B910(Entity*);\nvoid sub_0803B978(Entity*);\nvoid sub_0803BA6C(Entity*);\nvoid sub_0803BA80(Entity*);\n\nextern u8 gEntCount;\n// these are not with the rest of this files constant data\nextern Hitbox gUnk_080FD35C;\nextern Hitbox gUnk_080FD364;\nextern Hitbox gUnk_080FD36C;\nextern Hitbox gUnk_080FD374;\n\n// end of existing headers\n\nvoid sub_0803AA98(Entity* this) {\n    Entity* temp;\n    s8* ptr;\n    u32 index;\n\n    ptr = gUnk_080CED6C;\n    index = ((this->parent->field_0xf >> 4) + 3);\n    this->height.HALF.HI = ptr[(index + (u32)this->type * 2) & 7] + 4;\n    if (sub_0803B870(this) == 0) {\n        sub_0806F69C(this);\n        if (sub_0803B6F4(this) != 0) {\n            this->action = 0x14;\n            this->speed = 0x40;\n            InitializeAnimation(this, 10);\n            (*(Entity**)&this->field_0x74)->flags |= 0x80;\n            temp = this->attachedEntity;\n            temp->damageType = 0x13;\n            InitAnimationForceUpdate(temp, 5);\n            SoundReq(SFX_16E);\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_0803AA98\nsub_0803AA98:\n        push {r4, lr}\n        mov r4, r0\n        ldr r2, _data0_0\n        ldr r0, [r4, #0x50]\n        ldrb r0, [r0, #0xf]\n        lsr r0, #0x4\n        add r0, #0x3\n        ldrb r1, [r4, #0xa]\n        lsl r1, #0x1\n        add r0, r1\n        mov r1, #0x7\n        and r0, r1\n        add r0, r2\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        add r0, #0x4\n        strh r0, [r4, #0x36]\n        mov r0, r4\n        bl sub_0803B870\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, r4\n        bl sub_0806F69C\n        mov r0, r4\n        bl sub_0803B6F4\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, #0x14\n        strb r0, [r4, #0xc]\n        mov r0, #0x40\n        strh r0, [r4, #0x24]\n        mov r0, r4\n        mov r1, #0xa\n        bl InitializeAnimation\n        ldr r2, [r4, #0x74]\n        ldrb r1, [r2, #0x10]\n        mov r0, #0x80\n        orr r0, r1\n        strb r0, [r2, #0x10]\n        ldr r2, [r4, #0x54]\n        mov r1, r2\n        add r1, #0x3f\n        mov r0, #0x13\n        strb r0, [r1]\n        mov r0, r2\n        mov r1, #0x5\n        bl InitAnimationForceUpdate\n        mov r0, #0xb7\n        lsl r0, #0x1\n        bl SoundReq\n_code0_0:\n        pop {r4, pc}\n_data0_0:\n        .4byte gUnk_080CED6C",
      "score": "57",
      "id": 112
    },
    {
      "name": "MinishEzlo_Head",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"audio.h\"\n\nextern SpriteLoadData gUnk_0810C48C;\n\n// end of existing headers\n\nvoid MinishEzlo_Head(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start MinishEzlo_Head\nMinishEzlo_Head:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        add r0, #0x5b\n        ldrb r1, [r0]\n        mov r0, #0x4\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        mov r6, #0x1\n        mov r5, #0x0\n        b _code0_1\n_code0_0:\n        mov r6, #0x0\n        mov r5, #0x1\n_code0_1:\n        mov r0, r4\n        add r0, #0x5b\n        ldrb r1, [r0]\n        mov r0, #0x8\n        and r0, r1\n        mov r7, #0x8e\n        lsl r7, #0x1\n        cmp r0, #0x0\n        beq _code0_2\n        mov r7, #0x16\n_code0_2:\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r2, [r0]\n        mov r0, #0x81\n        neg r0, r0\n        and r2, r0\n        sub r2, #0x1\n        mov r0, r4\n        mov r1, r6\n        bl SetExtraSpriteFrame\n        ldrb r2, [r4, #0x1e]\n        mov r0, r4\n        mov r1, r5\n        bl SetExtraSpriteFrame\n        mov r0, r4\n        mov r1, r5\n        mov r2, r7\n        bl sub_0806FF10\n        mov r0, r4\n        mov r1, r5\n        mov r2, r6\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r4\n        bl sub_0807000C\n        pop {r4, r5, r6, r7, pc}",
      "score": "53",
      "id": 113
    },
    {
      "name": "sub_080630A4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"audio.h\"\n\nextern SpriteLoadData gUnk_0810C48C;\n\n// end of existing headers\n\nvoid sub_080630A4(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080630A4\nsub_080630A4:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        add r0, #0x6d\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r0, [r4, #0x6c]\n        add r0, #0x80\n        lsl r0, #0x14\n        lsr r5, r0, #0x17\n        b _code0_1\n_code0_0:\n        mov r0, r4\n        add r0, #0x6c\n        ldrb r1, [r0]\n        lsr r1, #0x6\n        mov r0, #0x3\n        eor r1, r0\n        add r1, #0x1\n        mov r0, #0x10\n        bl __divsi3\n        asr r5, r0, #0x1\n_code0_1:\n        mov r0, #0x80\n        lsl r0, #0x1\n        ldr r2, [r4, #0x70]\n        cmp r2, r0\n        bls _code0_2\n        mov r0, r2\n        add r0, #0x80\n        lsl r0, #0x14\n        lsr r3, r0, #0x17\n        b _code0_4\n_code0_2:\n        cmp r2, r0\n        bne _code0_3\n        mov r3, #0x10\n        b _code0_4\n_code0_3:\n        ldr r1, _data0_0\n        lsr r0, r2, #0x5\n        add r0, r1\n        ldrb r3, [r0]\n_code0_4:\n        mov r6, #0x80\n        lsl r6, #0x9\n        mov r0, r4\n        add r0, #0x5b\n        ldrb r0, [r0]\n        mov r1, #0x3\n        and r1, r0\n        cmp r1, #0x2\n        beq _code0_8\n        cmp r1, #0x2\n        bgt _code0_5\n        cmp r1, #0x1\n        beq _code0_6\n        b _code0_17\n_data0_0:\n        .4byte gUnk_0810C498\n_code0_5:\n        cmp r1, #0x3\n        beq _code0_13\n        b _code0_17\n_code0_6:\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        strb r0, [r2]\n        ldr r0, [r4, #0x6c]\n        cmp r0, #0x80\n        bls _code0_7\n        sub r0, r5\n        str r0, [r4, #0x6c]\n_code0_7:\n        lsl r1, r3, #0x1\n        ldr r0, [r4, #0x70]\n        add r0, r1\n        str r0, [r4, #0x70]\n        lsl r1, r6, #0x1\n        ldr r0, [r4, #0x30]\n        add r0, r1\n        str r0, [r4, #0x30]\n        b _code0_17\n_code0_8:\n        ldr r0, [r4, #0x6c]\n        add r0, r5\n        str r0, [r4, #0x6c]\n        ldr r1, [r4, #0x70]\n        mov r2, #0x80\n        lsl r2, #0x1\n        cmp r1, r2\n        bls _code0_10\n        ldr r0, _data0_1\n        cmp r1, r0\n        bhi _code0_9\n        lsr r3, #0x1\n_code0_9:\n        sub r0, r1, r3\n        cmp r0, #0xff\n        bhi _code0_11\n        str r2, [r4, #0x70]\n        b _code0_12\n_data0_1:\n        .4byte 0x17f\n_code0_10:\n        cmp r1, #0x80\n        bls _code0_12\n        sub r0, r1, r3\n_code0_11:\n        str r0, [r4, #0x70]\n_code0_12:\n        ldr r0, [r4, #0x34]\n        sub r0, r6\n        b _code0_16\n_code0_13:\n        ldr r0, [r4, #0x6c]\n        ldr r1, _data0_2\n        cmp r0, r1\n        bhi _code0_14\n        add r0, r5\n        str r0, [r4, #0x6c]\n_code0_14:\n        cmp r2, r1\n        bls _code0_15\n        mov r2, #0x80\n        lsl r2, #0x1\n        mov r0, r4\n        mov r1, r2\n        mov r3, #0x0\n        bl sub_0805EC9C\n        mov r0, r4\n        mov r1, #0x11\n        bl InitAnimationForceUpdate\n        mov r1, r4\n        add r1, #0x80\n        mov r0, #0x11\n        strh r0, [r1]\n        ldr r2, _data0_2+0x4\n        ldrb r1, [r2, #0x7]\n        mov r0, #0x1\n        orr r0, r1\n        strb r0, [r2, #0x7]\n        b _code0_18\n_data0_2:\n        .4byte 0x33f\n        .4byte gActiveScriptInfo\n_code0_15:\n        lsl r0, r3, #0x1\n        add r0, r2, r0\n        str r0, [r4, #0x70]\n        ldr r0, [r4, #0x34]\n        ldr r1, _data0_3\n        add r0, r1\n_code0_16:\n        str r0, [r4, #0x34]\n_code0_17:\n        ldr r1, [r4, #0x6c]\n        ldr r2, [r4, #0x70]\n        mov r0, r4\n        mov r3, #0x0\n        bl sub_0805EC9C\n        ldr r1, _data0_3+0x4\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_18:\n        pop {r4, r5, r6, pc}\n_data0_3:\n        .4byte 0xfffe0000\n        .4byte gActiveScriptInfo",
      "score": "175",
      "id": 114
    },
    {
      "name": "sub_08022E40",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nvoid sub_08022EAC(Entity*);\nvoid sub_08022F14(Entity*);\n\nextern void (*const gUnk_080CBB90[])(Entity*);\nextern void (*const gUnk_080CBBA0[])(Entity*);\nextern void (*const gUnk_080CBBB4[])(Entity*);\nextern void (*const gUnk_080CBBBC[])(Entity*);\n\nextern u8 gEntCount;\nextern const s8 gUnk_080CBBC4[];\n\n// end of existing headers\n\nvoid sub_08022E40(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08022E40\nsub_08022E40:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrh r1, [r4, #0x2e]\n        add r0, #0x74\n        strh r1, [r0]\n        ldrh r0, [r4, #0x32]\n        mov r1, r4\n        add r1, #0x76\n        strh r0, [r1]\n        ldr r2, [r4, #0x50]\n        add r2, #0x79\n        ldrb r0, [r2]\n        add r0, #0x1\n        mov r3, #0x7\n        and r0, r3\n        add r0, #0x7c\n        add r0, r4, r0\n        ldrb r1, [r0]\n        mov r0, #0xf\n        and r0, r1\n        sub r0, #0x8\n        lsr r1, #0x4\n        lsl r0, #0x18\n        asr r0, #0x18\n        ldrh r5, [r4, #0x2e]\n        add r0, r5\n        strh r0, [r4, #0x2e]\n        sub r1, #0x8\n        ldrh r0, [r4, #0x32]\n        add r1, r0\n        strh r1, [r4, #0x32]\n        mov r1, r4\n        add r1, #0x84\n        ldrb r0, [r2]\n        add r0, #0x1\n        and r0, r3\n        lsl r0, #0x2\n        ldr r1, [r1]\n        lsr r1, r0\n        mov r0, #0x7\n        and r1, r0\n        strb r1, [r4, #0x14]\n        ldrb r0, [r4, #0xa]\n        cmp r0, #0x3\n        bne _code0_0\n        mov r0, r1\n        add r0, #0xa\n        strb r0, [r4, #0x1e]\n        b _code0_1\n_code0_0:\n        mov r0, r4\n        bl sub_08022EAC\n_code0_1:\n        pop {r4, r5, pc}",
      "score": "56",
      "id": 115
    },
    {
      "name": "sub_08022EAC",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nvoid sub_08022EAC(Entity*);\nvoid sub_08022F14(Entity*);\n\nextern void (*const gUnk_080CBB90[])(Entity*);\nextern void (*const gUnk_080CBBA0[])(Entity*);\nextern void (*const gUnk_080CBBB4[])(Entity*);\nextern void (*const gUnk_080CBBBC[])(Entity*);\n\nextern u8 gEntCount;\nextern const s8 gUnk_080CBBC4[];\n\n// end of existing headers\n\nvoid sub_08022EAC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08022EAC\nsub_08022EAC:\n        push {r4, r5, lr}\n        mov r12, r0\n        ldr r1, [r0, #0x54]\n        cmp r1, #0x0\n        beq _code0_0\n        ldr r0, [r0, #0x50]\n        add r0, #0x79\n        ldrb r0, [r0]\n        mov r4, #0x7\n        mov r3, r4\n        and r3, r0\n        add r3, r1\n        add r3, #0x7c\n        mov r0, r12\n        ldrh r1, [r0, #0x2e]\n        add r0, #0x74\n        ldrb r0, [r0]\n        sub r1, r0\n        add r1, #0x8\n        mov r5, #0xf\n        and r1, r5\n        mov r2, r12\n        ldrh r0, [r2, #0x32]\n        add r2, #0x76\n        ldrb r2, [r2]\n        sub r0, r2\n        add r0, #0x8\n        and r0, r5\n        lsl r0, #0x4\n        add r1, r0\n        strb r1, [r3]\n        mov r1, r12\n        ldr r0, [r1, #0x50]\n        add r0, #0x79\n        ldrb r1, [r0]\n        mov r0, r4\n        and r0, r1\n        lsl r0, #0x2\n        mov r2, r12\n        ldrb r1, [r2, #0x14]\n        and r4, r1\n        lsl r4, r0\n        mov r2, #0xf\n        lsl r2, r0\n        mov r0, r12\n        ldr r1, [r0, #0x54]\n        add r1, #0x84\n        ldr r0, [r1]\n        bic r0, r2\n        orr r4, r0\n        str r4, [r1]\n_code0_0:\n        pop {r4, r5, pc}",
      "score": "55",
      "id": 116
    },
    {
      "name": "Moldworm",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nextern void sub_0800449C(Entity*, u32);\nextern bool32 sub_08023A38(u32);\nextern void sub_08023990(Entity*, u32, u32);\nextern void sub_08023A88(Entity*, u32);\n\nvoid sub_080235BC(Entity*);\nvoid sub_08023644(Entity*);\nvoid sub_08023730(Entity*);\nvoid sub_080237D8(Entity*);\nvoid sub_0802390C(Entity*);\nvoid sub_080239F0(Entity*);\nbool32 sub_08023B38(Entity*);\n\nextern u8 gEntCount;\nextern const u8 gUnk_080B37A0[];\n\nextern void (*const gUnk_080CBC38[])(Entity*);\nextern void (*const gUnk_080CBC50[])(Entity*);\nextern const s8 gUnk_080CBC70[];\nextern const s8 gUnk_080CBC90[];\nextern void (*const gUnk_080CBC98[])(Entity*);\nextern void (*const gUnk_080CBCA8[])(Entity*);\nextern const s8 gUnk_080CBCB8[];\n\n// end of existing headers\n\nvoid Moldworm(Entity* this) {\n    u16 prevX = this->x.HALF.HI;\n    u16 prevY = this->y.HALF.HI;\n\n    if (this->type == 0) {\n        if (this->action != 0) {\n            sub_0802390C(this);\n        }\n        this->field_0x7c.BYTES.byte1 = this->field_0x7c.BYTES.byte0;\n        EnemyFunctionHandler(this, gUnk_080CBC38);\n    } else {\n        if (this->parent->next) {\n            if (this->type != 8) {\n                sub_080235BC(this);\n            } else {\n                sub_08023730(this);\n            }\n        } else {\n            DeleteEntity(this);\n            return;\n        }\n    }\n\n    if (this->parent->field_0x7c.BYTES.byte0 != this->parent->field_0x7c.BYTES.byte1 && this->attachedEntity) {\n        ((u8*)&this->attachedEntity->field_0x78)[(this->parent->field_0x7c.BYTES.byte0 - 1) & 0xf] =\n            (((this->x.HALF.HI - prevX + 8) & 0xf) << 4) | ((this->y.HALF.HI - prevY + 8U) & 0xf);\n    }\n}\n",
      "asmCode": "thumb_func_start Moldworm\nMoldworm:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        ldrh r5, [r4, #0x2e]\n        ldrh r6, [r4, #0x32]\n        ldrb r1, [r4, #0xa]\n        cmp r1, #0x0\n        bne _code0_1\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r4\n        bl sub_0802390C\n_code0_0:\n        mov r0, r4\n        add r0, #0x7c\n        ldrb r0, [r0]\n        mov r1, r4\n        add r1, #0x7d\n        strb r0, [r1]\n        ldr r1, _data0_0\n        mov r0, r4\n        bl EnemyFunctionHandler\n        b _code0_4\n_data0_0:\n        .4byte gUnk_080CBC38\n_code0_1:\n        ldr r0, [r4, #0x50]\n        ldr r0, [r0, #0x4]\n        cmp r0, #0x0\n        beq _code0_3\n        cmp r1, #0x8\n        beq _code0_2\n        mov r0, r4\n        bl sub_080235BC\n        b _code0_4\n_code0_2:\n        mov r0, r4\n        bl sub_08023730\n        b _code0_4\n_code0_3:\n        mov r0, r4\n        bl DeleteEntity\n        b _code0_5\n_code0_4:\n        ldr r0, [r4, #0x50]\n        mov r2, r0\n        add r2, #0x7c\n        add r0, #0x7d\n        ldrb r1, [r2]\n        ldrb r0, [r0]\n        cmp r1, r0\n        beq _code0_5\n        ldr r1, [r4, #0x54]\n        cmp r1, #0x0\n        beq _code0_5\n        ldrb r2, [r2]\n        sub r2, #0x1\n        mov r0, #0xf\n        and r2, r0\n        add r2, #0x78\n        add r2, r1, r2\n        ldrh r1, [r4, #0x2e]\n        sub r1, r5\n        add r1, #0x8\n        mov r3, #0xf\n        and r1, r3\n        lsl r1, #0x4\n        ldrh r0, [r4, #0x32]\n        sub r0, r6\n        add r0, #0x8\n        and r0, r3\n        orr r1, r0\n        strb r1, [r2]\n_code0_5:\n        pop {r4, r5, r6, pc}",
      "score": "77",
      "id": 117
    },
    {
      "name": "sub_080239F0",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nextern void sub_0800449C(Entity*, u32);\nextern bool32 sub_08023A38(u32);\nextern void sub_08023990(Entity*, u32, u32);\nextern void sub_08023A88(Entity*, u32);\n\nvoid sub_080235BC(Entity*);\nvoid sub_08023644(Entity*);\nvoid sub_08023730(Entity*);\nvoid sub_080237D8(Entity*);\nvoid sub_0802390C(Entity*);\nvoid sub_080239F0(Entity*);\nbool32 sub_08023B38(Entity*);\n\nextern u8 gEntCount;\nextern const u8 gUnk_080B37A0[];\n\nextern void (*const gUnk_080CBC38[])(Entity*);\nextern void (*const gUnk_080CBC50[])(Entity*);\nextern const s8 gUnk_080CBC70[];\nextern const s8 gUnk_080CBC90[];\nextern void (*const gUnk_080CBC98[])(Entity*);\nextern void (*const gUnk_080CBCA8[])(Entity*);\nextern const s8 gUnk_080CBCB8[];\n\n// end of existing headers\n\nvoid sub_080239F0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080239F0\nsub_080239F0:\n        mov r2, r0\n        mov r1, r2\n        add r1, #0x78\n        mov r0, #0x88\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        add r1, #0x1\n        strb r0, [r1]\n        bx lr",
      "score": "38",
      "id": 118
    },
    {
      "name": "sub_08023B38",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nextern void sub_0800449C(Entity*, u32);\nextern bool32 sub_08023A38(u32);\nextern void sub_08023990(Entity*, u32, u32);\nextern void sub_08023A88(Entity*, u32);\n\nvoid sub_080235BC(Entity*);\nvoid sub_08023644(Entity*);\nvoid sub_08023730(Entity*);\nvoid sub_080237D8(Entity*);\nvoid sub_0802390C(Entity*);\nvoid sub_080239F0(Entity*);\nbool32 sub_08023B38(Entity*);\n\nextern u8 gEntCount;\nextern const u8 gUnk_080B37A0[];\n\nextern void (*const gUnk_080CBC38[])(Entity*);\nextern void (*const gUnk_080CBC50[])(Entity*);\nextern const s8 gUnk_080CBC70[];\nextern const s8 gUnk_080CBC90[];\nextern void (*const gUnk_080CBC98[])(Entity*);\nextern void (*const gUnk_080CBCA8[])(Entity*);\nextern const s8 gUnk_080CBCB8[];\n\n// end of existing headers\n\nbool32 sub_08023B38(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08023B38\nsub_08023B38:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        mov r0, #0x1\n        bl sub_08049DF4\n        mov r5, r0\n        cmp r5, #0x0\n        bne _code0_0\n        mov r0, #0x0\n        b _code0_2\n_code0_0:\n        mov r0, #0x2e\n        ldrsh r2, [r4, r0]\n        ldr r3, _data0_0\n        ldrb r0, [r4, #0x14]\n        lsl r0, #0x1\n        add r1, r0, r3\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        add r2, r1\n        mov r6, #0x32\n        ldrsh r1, [r4, r6]\n        add r0, #0x1\n        add r0, r3\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        add r1, r0\n        mov r3, #0x0\n        mov r4, #0x2e\n        ldrsh r0, [r5, r4]\n        sub r0, r2\n        add r0, #0x14\n        cmp r0, #0x28\n        bhi _code0_1\n        mov r6, #0x32\n        ldrsh r0, [r5, r6]\n        sub r0, r1\n        add r0, #0x14\n        cmp r0, #0x28\n        bhi _code0_1\n        mov r3, #0x1\n_code0_1:\n        mov r0, r3\n_code0_2:\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_080CBCB8",
      "score": "50",
      "id": 119
    },
    {
      "name": "MountainMinish_Head",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"flags.h\"\n\nextern SpriteLoadData gUnk_08111358;\n\nextern void (*const gUnk_08111368[])(Entity*);\nvoid sub_08067EF0(Entity*);\n\nextern SpriteLoadData gUnk_08111358;\n\nextern u16 gUnk_0811130E[];\n\n// end of existing headers\n\nvoid MountainMinish_Head(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start MountainMinish_Head\nMountainMinish_Head:\n        push {r4, r5, lr}\n        mov r5, r0\n        add r0, #0x5a\n        ldrb r4, [r0]\n        mov r0, #0x81\n        neg r0, r0\n        and r4, r0\n        ldrb r2, [r5, #0x1e]\n        mov r0, r5\n        mov r1, #0x1\n        bl SetExtraSpriteFrame\n        mov r0, #0x40\n        and r0, r4\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, #0xe1\n        neg r0, r0\n        and r4, r0\n        add r2, r4, #0x4\n        mov r0, r5\n        mov r1, #0x0\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, #0xff\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x0\n        bl SetSpriteSubEntryOffsetData1\n        b _code0_2\n_code0_0:\n        mov r0, #0x20\n        and r0, r4\n        cmp r0, #0x0\n        beq _code0_1\n        mov r0, r5\n        mov r1, #0x0\n        mov r2, #0xff\n        bl SetExtraSpriteFrame\n        mov r0, #0xe1\n        neg r0, r0\n        and r4, r0\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, r4\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x2\n        bl SetSpriteSubEntryOffsetData1\n        b _code0_2\n_code0_1:\n        mov r0, r5\n        mov r1, #0x0\n        mov r2, #0xff\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, #0xff\n        bl SetExtraSpriteFrame\n_code0_2:\n        mov r0, r5\n        bl sub_0807000C\n        pop {r4, r5, pc}",
      "score": "67",
      "id": 120
    },
    {
      "name": "sub_08067EF0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"flags.h\"\n\nextern SpriteLoadData gUnk_08111358;\n\nextern void (*const gUnk_08111368[])(Entity*);\nvoid sub_08067EF0(Entity*);\n\nextern SpriteLoadData gUnk_08111358;\n\nextern u16 gUnk_0811130E[];\n\n// end of existing headers\n\nvoid sub_08067EF0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08067EF0\nsub_08067EF0:\n        push {r4, r5, r6, r7, lr}\n        mov r5, r0\n        ldrb r4, [r5, #0xc]\n        cmp r4, #0x1\n        beq _code0_4\n        cmp r4, #0x1\n        bgt _code0_0\n        cmp r4, #0x0\n        beq _code0_2\n        b _code0_9\n_code0_0:\n        cmp r4, #0x2\n        beq _code0_6\n        cmp r4, #0x3\n        bne _code0_1\n        b _code0_8\n_code0_1:\n        b _code0_9\n_code0_2:\n        ldr r1, _data0_0\n        mov r0, r5\n        bl LoadExtraSpriteData\n        cmp r0, #0x0\n        bne _code0_3\n        b _code0_15\n_code0_3:\n        mov r2, #0x1\n        mov r0, #0x1\n        strb r0, [r5, #0xc]\n        ldrb r1, [r5, #0x18]\n        sub r0, #0x5\n        and r0, r1\n        orr r0, r2\n        strb r0, [r5, #0x18]\n        ldrb r0, [r5, #0xa]\n        strb r0, [r5, #0x14]\n        mov r0, r5\n        add r0, #0x69\n        strb r4, [r0]\n        mov r0, r5\n        mov r1, #0x2\n        bl sub_0805E3A0\n        mov r0, r5\n        bl sub_0807DD50\n        ldr r1, _data0_0+0x4\n        ldrb r0, [r5, #0xb]\n        add r0, r1\n        ldrb r1, [r0]\n        b _code0_7\n_data0_0:\n        .4byte gUnk_08111358\n        .4byte gUnk_08111304\n_code0_4:\n        mov r4, r5\n        add r4, #0x39\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        cmp r0, #0x2\n        bne _code0_5\n        mov r1, #0x0\n        mov r0, #0x3\n        strb r0, [r5, #0xc]\n        strb r1, [r4]\n        mov r0, r5\n        add r0, #0x58\n        ldrb r0, [r0]\n        mov r1, r5\n        add r1, #0x69\n        strb r0, [r1]\n        ldr r1, _data0_1\n        mov r0, r5\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        mov r1, r0\n        mov r0, r5\n        bl InitializeAnimation\n        mov r0, r5\n        bl sub_0806F118\n        b _code0_9\n_data0_1:\n        .4byte gPlayerEntity\n_code0_5:\n        mov r0, r5\n        mov r1, #0x0\n        bl ExecuteScriptForEntity\n        mov r0, r5\n        bl HandleEntity0x82Actions\n        ldrb r0, [r5, #0xb]\n        cmp r0, #0x3\n        bne _code0_9\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        cmp r0, #0x0\n        beq _code0_9\n        mov r1, #0x0\n        mov r0, #0x2\n        strb r0, [r5, #0xc]\n        strb r1, [r4]\n        ldr r1, _data0_2\n        mov r0, r5\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        mov r1, r0\n        mov r0, r5\n        bl InitializeAnimation\n        mov r0, r5\n        bl sub_08068190\n        b _code0_9\n_data0_2:\n        .4byte gPlayerEntity\n_code0_6:\n        ldr r0, _data0_3\n        ldrb r1, [r0]\n        mov r0, #0x7f\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_9\n        mov r0, #0x1\n        strb r0, [r5, #0xc]\n        ldrb r1, [r5, #0x14]\n        lsr r1, #0x1\n        add r1, #0x4\n_code0_7:\n        mov r0, r5\n        bl InitializeAnimation\n        b _code0_9\n_data0_3:\n        .4byte gTextBox\n_code0_8:\n        mov r0, r5\n        bl UpdateFuseInteraction\n        cmp r0, #0x0\n        beq _code0_9\n        mov r0, #0x1\n        strb r0, [r5, #0xc]\n        mov r0, r5\n        add r0, #0x69\n        ldrb r1, [r0]\n        mov r0, r5\n        bl InitializeAnimation\n_code0_9:\n        mov r0, r5\n        add r0, #0x59\n        ldrb r1, [r0]\n        mov r7, r0\n        cmp r1, #0xff\n        beq _code0_10\n        mov r0, r5\n        bl GetNextFrame\n_code0_10:\n        mov r1, r5\n        add r1, #0x5b\n        ldrb r2, [r1]\n        mov r0, #0x1\n        and r0, r2\n        mov r6, r1\n        cmp r0, #0x0\n        beq _code0_12\n        mov r0, #0xfe\n        and r0, r2\n        strb r0, [r6]\n        mov r0, r5\n        bl sub_080040A8\n        cmp r0, #0x0\n        bne _code0_11\n        ldr r4, _data0_4\n        bl Random\n        mov r1, #0x3\n        bl __modsi3\n        lsl r0, #0x1\n        add r0, r4\n        ldrh r0, [r0]\n        bl SoundReq\n        b _code0_12\n_data0_4:\n        .4byte gUnk_0811137A\n_code0_11:\n        ldr r4, _data0_5\n        bl Random\n        mov r1, #0x3\n        bl __modsi3\n        lsl r0, #0x1\n        add r0, r4\n        ldrh r0, [r0]\n        bl EnqueueSFX\n_code0_12:\n        ldrb r1, [r6]\n        mov r0, #0x2\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_13\n        mov r0, #0xfd\n        and r0, r1\n        strb r0, [r6]\n        mov r0, r5\n        mov r1, #0x4\n        mov r2, #0x0\n        bl CreateFx\n        mov r1, r0\n        cmp r1, #0x0\n        beq _code0_13\n        ldr r3, _data0_5+0x4\n        mov r0, r5\n        mov r2, #0x0\n        bl PositionRelative\n_code0_13:\n        ldrb r1, [r6]\n        mov r0, #0x4\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_14\n        mov r0, #0xfb\n        and r0, r1\n        strb r0, [r6]\n        mov r0, r5\n        mov r1, #0x3d\n        mov r2, #0x20\n        bl CreateFx\n        mov r1, r0\n        cmp r1, #0x0\n        beq _code0_14\n        ldr r2, _data0_5+0x8\n        ldr r3, _data0_5+0xc\n        mov r0, r5\n        bl PositionRelative\n_code0_14:\n        ldrb r1, [r6]\n        mov r0, #0x8\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_15\n        mov r0, #0xf7\n        and r0, r1\n        strb r0, [r6]\n        bl Random\n        mov r1, #0x1f\n        and r0, r1\n        ldrb r1, [r7]\n        add r0, r1\n        strb r0, [r7]\n_code0_15:\n        pop {r4, r5, r6, r7, pc}\n_data0_5:\n        .4byte gUnk_08111374\n        .4byte 0xffe80000\n        .4byte 0xffec0000\n        .4byte 0xfff60000",
      "score": "249",
      "id": 121
    },
    {
      "name": "sub_0806811C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"flags.h\"\n\nextern SpriteLoadData gUnk_08111358;\n\nextern void (*const gUnk_08111368[])(Entity*);\nvoid sub_08067EF0(Entity*);\n\nextern SpriteLoadData gUnk_08111358;\n\nextern u16 gUnk_0811130E[];\n\n// end of existing headers\n\nvoid sub_0806811C(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806811C\nsub_0806811C:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xe]\n        mov r7, r0\n        cmp r7, #0x0\n        beq _code0_0\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        b _code0_3\n_code0_0:\n        mov r0, #0x2\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        mov r1, #0x20\n        mov r2, #0x20\n        bl sub_0806EDD8\n        mov r3, r0\n        cmp r3, #0x0\n        bge _code0_1\n        ldrb r0, [r4, #0xa]\n        strb r0, [r4, #0x14]\n        lsl r3, r0, #0x2\n_code0_1:\n        ldrb r0, [r4, #0x14]\n        lsr r0, #0x1\n        lsl r0, #0x5\n        asr r1, r3, #0x1\n        lsl r1, #0x1\n        ldr r2, _data0_0\n        add r1, r2\n        add r0, r1\n        ldrb r6, [r0]\n        ldrb r5, [r0, #0x1]\n        mov r0, #0x80\n        and r0, r5\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, r3\n        bl sub_0806F5B0\n        strb r0, [r4, #0x14]\n_code0_2:\n        mov r0, #0x40\n        orr r6, r0\n        mov r0, r4\n        add r0, #0x5a\n        strb r6, [r0]\n        mov r0, #0x7f\n        and r5, r0\n        strb r5, [r4, #0x1e]\n        mov r0, r4\n        add r0, #0x58\n        strb r7, [r0]\n        mov r1, r4\n        add r1, #0x59\n        mov r0, #0xff\n        strb r0, [r1]\n_code0_3:\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gUnk_08111284",
      "score": "62",
      "id": 122
    },
    {
      "name": "sub_08068190",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"flags.h\"\n\nextern SpriteLoadData gUnk_08111358;\n\nextern void (*const gUnk_08111368[])(Entity*);\nvoid sub_08067EF0(Entity*);\n\nextern SpriteLoadData gUnk_08111358;\n\nextern u16 gUnk_0811130E[];\n\n// end of existing headers\n\nvoid sub_08068190(Entity* this) {\n    u32 uVar1;\n    u32 uVar2;\n    u32 uVar3;\n\n    uVar3 = this->type2;\n    if (uVar3 > 8) {\n        uVar3 = 8;\n    }\n    uVar1 = CheckLocalFlag(0x7e);\n    uVar2 = BOOLCAST(uVar1);\n    if (GetInventoryValue(0x41) != 0) {\n        uVar2 = 2;\n    }\n    if (GetInventoryValue(2) != 0) {\n        uVar2 = 3;\n    }\n\n    // TODO unable to devide the array access variables by two without breaking everything\n    TextboxNoOverlap(gUnk_0811130E[uVar2 * 2 + uVar3 * 8], this);\n}\n",
      "asmCode": "thumb_func_start sub_08068190\nsub_08068190:\n        push {r4, r5, r6, lr}\n        mov r6, r0\n        ldrb r5, [r6, #0xb]\n        cmp r5, #0x8\n        bls _code0_0\n        mov r5, #0x8\n_code0_0:\n        mov r0, #0x7e\n        bl CheckLocalFlag\n        neg r1, r0\n        orr r1, r0\n        lsr r4, r1, #0x1f\n        mov r0, #0x41\n        bl GetInventoryValue\n        cmp r0, #0x0\n        beq _code0_1\n        mov r4, #0x2\n_code0_1:\n        mov r0, #0x2\n        bl GetInventoryValue\n        cmp r0, #0x0\n        beq _code0_2\n        mov r4, #0x3\n_code0_2:\n        ldr r2, _data0_0\n        lsl r0, r4, #0x1\n        lsl r1, r5, #0x3\n        add r0, r1\n        add r0, r2\n        ldrh r0, [r0]\n        mov r1, r6\n        bl TextboxNoOverlap\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_0811130E",
      "score": "37",
      "id": 123
    },
    {
      "name": "sub_08066490",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"structures.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_081104C8[])(Entity*);\n\nbool32 sub_0806650C(Entity*);\nextern void sub_08078AC0(u32, u32, u32);\n\nvoid sub_08066490(Entity*, Entity*);\n\nvoid sub_08066570(Entity* this);\n\n// end of existing headers\n\nvoid sub_08066490(Entity* this, Entity* entity) {\n\n}",
      "asmCode": "thumb_func_start sub_08066490\nsub_08066490:\n        push {r4, r5, r6, lr}\n        mov r12, r0\n        mov r5, r1\n        ldrb r1, [r0, #0xb]\n        mov r0, #0x10\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_3\n        mov r1, r12\n        ldrh r0, [r1, #0x2e]\n        add r1, #0x86\n        strh r0, [r1]\n        mov r0, r12\n        add r0, #0x7e\n        ldrh r2, [r0]\n        add r0, #0x4\n        ldrh r0, [r0]\n        add r3, r2, r0\n        sub r4, r2, r0\n        mov r6, #0x2e\n        ldrsh r0, [r5, r6]\n        cmp r0, r3\n        bge _code0_0\n        cmp r0, r4\n        ble _code0_0\n        mov r2, r0\n        b _code0_1\n_code0_0:\n        mov r2, #0x2e\n        ldrsh r0, [r5, r2]\n        mov r2, r4\n        cmp r0, r3\n        blt _code0_1\n        mov r2, r3\n_code0_1:\n        ldrh r0, [r1]\n        cmp r0, r2\n        bne _code0_2\n        mov r1, r12\n        add r1, #0x84\n        ldrh r0, [r1]\n        cmp r0, #0x1\n        bne _code0_3\n        mov r0, #0x0\n        strh r0, [r1]\n        mov r0, r12\n        mov r1, #0x2\n        bl InitializeAnimation\n        b _code0_3\n_code0_2:\n        mov r6, r12\n        strh r2, [r6, #0x2e]\n        mov r1, r12\n        add r1, #0x84\n        ldrh r0, [r1]\n        cmp r0, #0x0\n        bne _code0_3\n        mov r0, #0x1\n        strh r0, [r1]\n        mov r0, r12\n        mov r1, #0x6\n        bl InitializeAnimation\n_code0_3:\n        pop {r4, r5, r6, pc}",
      "score": "66",
      "id": 124
    },
    {
      "name": "sub_0806650C",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"structures.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_081104C8[])(Entity*);\n\nbool32 sub_0806650C(Entity*);\nextern void sub_08078AC0(u32, u32, u32);\n\nvoid sub_08066490(Entity*, Entity*);\n\nvoid sub_08066570(Entity* this);\n\n// end of existing headers\n\nbool32 sub_0806650C(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806650C\nsub_0806650C:\n        push {r4, r5, r6, r7, lr}\n        mov r3, r0\n        mov r4, #0x0\n        ldr r1, _data0_0\n        ldrh r5, [r1, #0x2e]\n        mov r7, r5\n        ldrh r2, [r1, #0x32]\n        add r0, #0x80\n        ldrh r0, [r0]\n        add r0, #0x10\n        mov r6, r1\n        cmp r2, r0\n        bge _code0_0\n        mov r4, #0x4\n        b _code0_3\n_data0_0:\n        .4byte gPlayerEntity\n_code0_0:\n        mov r0, r3\n        add r0, #0x7e\n        ldrh r1, [r0]\n        add r0, r1, #0x2\n        cmp r5, r0\n        bge _code0_1\n        mov r4, #0x2\n_code0_1:\n        add r0, r1, #0x6\n        cmp r7, r0\n        ble _code0_2\n        mov r4, #0x6\n_code0_2:\n        cmp r4, #0x0\n        bne _code0_3\n        strh r4, [r6, #0x24]\n_code0_3:\n        ldrb r0, [r6, #0xc]\n        cmp r0, #0xf\n        beq _code0_5\n        cmp r4, #0x0\n        bne _code0_4\n        mov r0, #0x0\n        b _code0_6\n_code0_4:\n        mov r0, #0x8\n        mov r1, #0x0\n        mov r2, #0x0\n        bl sub_08078AC0\n        strb r4, [r6, #0x14]\n        lsl r0, r4, #0x2\n        strb r0, [r6, #0x15]\n_code0_5:\n        mov r0, #0x1\n_code0_6:\n        pop {r4, r5, r6, r7, pc}",
      "score": "56",
      "id": 125
    },
    {
      "name": "sub_08066570",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"player.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"structures.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_081104C8[])(Entity*);\n\nbool32 sub_0806650C(Entity*);\nextern void sub_08078AC0(u32, u32, u32);\n\nvoid sub_08066490(Entity*, Entity*);\n\nvoid sub_08066570(Entity* this);\n\n// end of existing headers\n\nvoid sub_08066570(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08066570\nsub_08066570:\n        push {r4, r5, r6, lr}\n        mov r5, r0\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_1\n        ldrb r0, [r5, #0xc]\n        cmp r0, #0x3\n        beq _code0_1\n        ldr r4, _data0_0\n        mov r0, r5\n        mov r1, r4\n        mov r2, #0x50\n        bl sub_0806FC80\n        cmp r0, #0x0\n        beq _code0_1\n        mov r0, r5\n        mov r1, r4\n        bl GetFacingDirection\n        mov r3, r0\n        mov r6, #0x1\n        mov r1, #0x18\n        mov r4, r3\n        and r4, r1\n        ldrb r0, [r5, #0x15]\n        mov r2, r1\n        and r2, r0\n        cmp r2, r4\n        bne _code0_0\n        add r2, r3, #0x5\n        mov r1, #0x7\n        and r2, r1\n        ldrb r0, [r5, #0x15]\n        add r0, #0x5\n        and r0, r1\n        cmp r0, #0x2\n        bhi _code0_0\n        cmp r2, #0x2\n        bhi _code0_0\n        mov r6, #0x0\n_code0_0:\n        cmp r6, #0x0\n        beq _code0_1\n        strb r3, [r5, #0x15]\n        add r3, #0x4\n        mov r0, #0x18\n        and r3, r0\n        lsr r3, #0x3\n        mov r0, r5\n        mov r1, r3\n        bl InitializeAnimation\n_code0_1:\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gPlayerEntity",
      "score": "59",
      "id": 126
    },
    {
      "name": "sub_08060FD0",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"coord.h\"\n#include \"random.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_0810AC1C[])(Entity*);\n\nextern void (*const gUnk_0810AC2C[])(Entity*);\n\ntypedef struct {\n    u8 unk_0;  // u8\n    u8 unk_0b; // u8\n    u16 unk_1; // u16\n    u16 unk_2; // u16\n    u16 unk_3;\n    u16 unk_4;\n    u16 unk_5; // u16\n    u16 unk_6; // u16\n    u16 unk_7; // u16\n    u16 unk_8; // u16\n} UnkHeap;\n\nextern Hitbox gUnk_080FD150;\n\nvoid sub_08060E70(Entity*, u32);\n\nu32 sub_08061230(Entity*);\nu32 sub_08060F80(Entity*);\nvoid sub_08060EDC(Entity*);\nvoid sub_08061090(Entity*, u32, u32);\n\nbool32 sub_08060FD0(Entity*, u32, u32);\nvoid sub_08061464(Entity*, u32, u32);\nvoid sub_08061120(Entity*, u32, u32, u32);\nbool32 sub_08061170(Entity*);\n\nvoid sub_08061358(Entity*);\n\nvoid sub_08060E94(Entity*);\n\nu32 sub_0806FCD0(u32, u32, u32);\n\nextern Entity gUnk_0200D654;\nextern Entity gUnk_02027EB4;\nextern bool32 sub_080AE4CC(Entity*, u32, u32, u32);\n\nextern u32 sub_080AF1EC(Entity*);\nu32 sub_080611D4(Entity*);\nextern u32 sub_08079FD4(Entity*, u32);\nextern void sub_08016AD2(Entity*);\n\nextern struct {\n    s8 unk_0;\n    s8 unk_1;\n} gUnk_0810AC4C[];\nextern u8 gUnk_0810AC54[8];\nextern u32 sub_080002B4(Entity*, u32, u32);\n\nextern u8 gUnk_0810AC5D;\n\nbool32 sub_08061630(Entity*, s32, s32, s32);\nbool32 sub_08061720(Entity*, s32, s32, s32);\nbool32 sub_080616A8(Entity*, s32, s32, s32);\nbool32 sub_08061798(Entity*, s32, s32, s32);\nbool32 sub_08061888(Entity*, s32, s32, s32);\nbool32 sub_08061978(Entity*, s32, s32, s32);\nbool32 sub_08061810(Entity*, s32, s32, s32);\nbool32 sub_08061900(Entity*, s32, s32, s32);\n\nbool32 sub_08061A74(Entity*, s32, s32, s32);\n\nbool32 sub_08061A1C(Entity*, s32, s32, s32);\n\nbool32 sub_080619F0(Entity*, s32, s32, s32);\n\nbool32 sub_08061A48(Entity*, s32, s32, s32);\n\nextern void (*const gUnk_0810AC70[])(Entity*);\n\nvoid sub_08061AFC(Entity*);\n\nextern u16* gUnk_0810B660[8];\n\n// end of existing headers\n\nbool32 sub_08060FD0(Entity* this, u32 a, u32 b) {\n\n}",
      "asmCode": "thumb_func_start sub_08060FD0\nsub_08060FD0:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x8\n        mov r4, r0\n        mov r9, r1\n        mov r8, r2\n        mov r0, #0x2e\n        ldrsh r7, [r4, r0]\n        mov r1, #0x32\n        ldrsh r6, [r4, r1]\n        mov r2, r9\n        sub r0, r2, r7\n        mov r5, r8\n        sub r1, r5, r6\n        bl sub_080045DA\n        lsl r7, #0x8\n        lsl r6, #0x8\n        ldr r3, _data0_0\n        lsl r1, r0, #0x1\n        add r1, r3\n        mov r5, #0x0\n        ldrsh r2, [r1, r5]\n        lsl r1, r2, #0x1\n        add r1, r2\n        lsl r1, #0x1\n        str r1, [sp]\n        add r0, #0x40\n        lsl r0, #0x1\n        add r0, r3\n        mov r2, #0x0\n        ldrsh r1, [r0, r2]\n        lsl r0, r1, #0x1\n        add r0, r1\n        lsl r0, #0x1\n        str r0, [sp, #0x4]\n        add r4, #0x38\n        ldrb r0, [r4]\n        ldr r5, _data0_0+0x4\n        mov r10, r5\n        cmp r0, #0x2\n        beq _code0_0\n        ldr r0, _data0_0+0x8\n        mov r10, r0\n_code0_0:\n        mov r1, r7\n        cmp r7, #0x0\n        bge _code0_1\n        add r1, #0xff\n_code0_1:\n        asr r5, r1, #0x8\n        mov r2, r6\n        cmp r6, #0x0\n        bge _code0_2\n        add r2, #0xff\n_code0_2:\n        asr r4, r2, #0x8\n        mov r0, r10\n        mov r1, r5\n        mov r2, r4\n        mov r3, #0x6\n        bl sub_080AE4CC\n        cmp r0, #0x0\n        beq _code0_3\n        mov r0, #0x0\n        b _code0_6\n_data0_0:\n        .4byte gSineTable\n        .4byte gUnk_0200D654\n        .4byte gUnk_02027EB4\n_code0_3:\n        mov r1, r9\n        sub r0, r1, r5\n        add r0, #0x6\n        cmp r0, #0xc\n        bhi _code0_4\n        mov r2, r8\n        sub r0, r2, r4\n        add r0, #0x6\n        cmp r0, #0xc\n        bls _code0_5\n_code0_4:\n        ldr r5, [sp]\n        add r7, r5\n        ldr r0, [sp, #0x4]\n        sub r6, r0\n        b _code0_0\n_code0_5:\n        mov r0, #0x1\n_code0_6:\n        add sp, #0x8\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}",
      "score": "100",
      "id": 127
    },
    {
      "name": "sub_08061170",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"coord.h\"\n#include \"random.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_0810AC1C[])(Entity*);\n\nextern void (*const gUnk_0810AC2C[])(Entity*);\n\ntypedef struct {\n    u8 unk_0;  // u8\n    u8 unk_0b; // u8\n    u16 unk_1; // u16\n    u16 unk_2; // u16\n    u16 unk_3;\n    u16 unk_4;\n    u16 unk_5; // u16\n    u16 unk_6; // u16\n    u16 unk_7; // u16\n    u16 unk_8; // u16\n} UnkHeap;\n\nextern Hitbox gUnk_080FD150;\n\nvoid sub_08060E70(Entity*, u32);\n\nu32 sub_08061230(Entity*);\nu32 sub_08060F80(Entity*);\nvoid sub_08060EDC(Entity*);\nvoid sub_08061090(Entity*, u32, u32);\n\nbool32 sub_08060FD0(Entity*, u32, u32);\nvoid sub_08061464(Entity*, u32, u32);\nvoid sub_08061120(Entity*, u32, u32, u32);\nbool32 sub_08061170(Entity*);\n\nvoid sub_08061358(Entity*);\n\nvoid sub_08060E94(Entity*);\n\nu32 sub_0806FCD0(u32, u32, u32);\n\nextern Entity gUnk_0200D654;\nextern Entity gUnk_02027EB4;\nextern bool32 sub_080AE4CC(Entity*, u32, u32, u32);\n\nextern u32 sub_080AF1EC(Entity*);\nu32 sub_080611D4(Entity*);\nextern u32 sub_08079FD4(Entity*, u32);\nextern void sub_08016AD2(Entity*);\n\nextern struct {\n    s8 unk_0;\n    s8 unk_1;\n} gUnk_0810AC4C[];\nextern u8 gUnk_0810AC54[8];\nextern u32 sub_080002B4(Entity*, u32, u32);\n\nextern u8 gUnk_0810AC5D;\n\nbool32 sub_08061630(Entity*, s32, s32, s32);\nbool32 sub_08061720(Entity*, s32, s32, s32);\nbool32 sub_080616A8(Entity*, s32, s32, s32);\nbool32 sub_08061798(Entity*, s32, s32, s32);\nbool32 sub_08061888(Entity*, s32, s32, s32);\nbool32 sub_08061978(Entity*, s32, s32, s32);\nbool32 sub_08061810(Entity*, s32, s32, s32);\nbool32 sub_08061900(Entity*, s32, s32, s32);\n\nbool32 sub_08061A74(Entity*, s32, s32, s32);\n\nbool32 sub_08061A1C(Entity*, s32, s32, s32);\n\nbool32 sub_080619F0(Entity*, s32, s32, s32);\n\nbool32 sub_08061A48(Entity*, s32, s32, s32);\n\nextern void (*const gUnk_0810AC70[])(Entity*);\n\nvoid sub_08061AFC(Entity*);\n\nextern u16* gUnk_0810B660[8];\n\n// end of existing headers\n\nbool32 sub_08061170(Entity* this) {\n    u32 direction;\n    u32 tmp;\n\n    UpdateAnimationSingleFrame(this);\n    if (sub_080AF1EC(this) == 0) {\n        direction = sub_080611D4(this);\n        if (direction != 0xff) {\n            this->action = 6;\n            tmp = (sub_08079FD4(this, 1) * 0x10 - 4);\n            // tmp <<= 0xc;\n            this->field_0x20 = tmp;\n            this->speed = 0x100;\n            this->direction = direction;\n            this->animationState = direction >> 2;\n            if (tmp >> 0x10 != 0) {\n                sub_08060E70(this, 0x14);\n            } else {\n                sub_08060E70(this, 0x18);\n            }\n        }\n        return FALSE;\n    } else {\n        sub_08016AD2(this);\n        return TRUE;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08061170\nsub_08061170:\n        push {r4, r5, lr}\n        mov r4, r0\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        bl sub_080AF1EC\n        cmp r0, #0x0\n        bne _code0_2\n        mov r0, r4\n        bl sub_080611D4\n        mov r5, r0\n        cmp r5, #0xff\n        beq _code0_1\n        mov r0, #0x6\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        mov r1, #0x1\n        bl sub_08079FD4\n        lsl r0, #0x4\n        sub r0, #0x4\n        lsl r0, #0xc\n        str r0, [r4, #0x20]\n        mov r1, #0x80\n        lsl r1, #0x1\n        strh r1, [r4, #0x24]\n        strb r5, [r4, #0x15]\n        lsr r1, r5, #0x2\n        strb r1, [r4, #0x14]\n        lsr r0, #0x10\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r4\n        mov r1, #0x14\n        bl sub_08060E70\n        b _code0_1\n_code0_0:\n        mov r0, r4\n        mov r1, #0x18\n        bl sub_08060E70\n_code0_1:\n        mov r0, #0x0\n        b _code0_3\n_code0_2:\n        mov r0, r4\n        bl sub_08016AD2\n        mov r0, #0x1\n_code0_3:\n        pop {r4, r5, pc}",
      "score": "49",
      "id": 128
    },
    {
      "name": "sub_080611D4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"coord.h\"\n#include \"random.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_0810AC1C[])(Entity*);\n\nextern void (*const gUnk_0810AC2C[])(Entity*);\n\ntypedef struct {\n    u8 unk_0;  // u8\n    u8 unk_0b; // u8\n    u16 unk_1; // u16\n    u16 unk_2; // u16\n    u16 unk_3;\n    u16 unk_4;\n    u16 unk_5; // u16\n    u16 unk_6; // u16\n    u16 unk_7; // u16\n    u16 unk_8; // u16\n} UnkHeap;\n\nextern Hitbox gUnk_080FD150;\n\nvoid sub_08060E70(Entity*, u32);\n\nu32 sub_08061230(Entity*);\nu32 sub_08060F80(Entity*);\nvoid sub_08060EDC(Entity*);\nvoid sub_08061090(Entity*, u32, u32);\n\nbool32 sub_08060FD0(Entity*, u32, u32);\nvoid sub_08061464(Entity*, u32, u32);\nvoid sub_08061120(Entity*, u32, u32, u32);\nbool32 sub_08061170(Entity*);\n\nvoid sub_08061358(Entity*);\n\nvoid sub_08060E94(Entity*);\n\nu32 sub_0806FCD0(u32, u32, u32);\n\nextern Entity gUnk_0200D654;\nextern Entity gUnk_02027EB4;\nextern bool32 sub_080AE4CC(Entity*, u32, u32, u32);\n\nextern u32 sub_080AF1EC(Entity*);\nu32 sub_080611D4(Entity*);\nextern u32 sub_08079FD4(Entity*, u32);\nextern void sub_08016AD2(Entity*);\n\nextern struct {\n    s8 unk_0;\n    s8 unk_1;\n} gUnk_0810AC4C[];\nextern u8 gUnk_0810AC54[8];\nextern u32 sub_080002B4(Entity*, u32, u32);\n\nextern u8 gUnk_0810AC5D;\n\nbool32 sub_08061630(Entity*, s32, s32, s32);\nbool32 sub_08061720(Entity*, s32, s32, s32);\nbool32 sub_080616A8(Entity*, s32, s32, s32);\nbool32 sub_08061798(Entity*, s32, s32, s32);\nbool32 sub_08061888(Entity*, s32, s32, s32);\nbool32 sub_08061978(Entity*, s32, s32, s32);\nbool32 sub_08061810(Entity*, s32, s32, s32);\nbool32 sub_08061900(Entity*, s32, s32, s32);\n\nbool32 sub_08061A74(Entity*, s32, s32, s32);\n\nbool32 sub_08061A1C(Entity*, s32, s32, s32);\n\nbool32 sub_080619F0(Entity*, s32, s32, s32);\n\nbool32 sub_08061A48(Entity*, s32, s32, s32);\n\nextern void (*const gUnk_0810AC70[])(Entity*);\n\nvoid sub_08061AFC(Entity*);\n\nextern u16* gUnk_0810B660[8];\n\n// end of existing headers\n\nu32 sub_080611D4(Entity* this) {\n    u8 bVar1;\n    u32 uVar2;\n    u8* pbVar3;\n\n    u32 x;\n    s32 a;\n    s32 b;\n    x = this->animationState & 6;\n    // asm(\"a\");\n    a = gUnk_0810AC4C[x].unk_0;\n    // asm(\"c\");\n    b = gUnk_0810AC4C[x].unk_1;\n    // asm(\"d\");\n    uVar2 = sub_080002B4(this, a, b);\n// asm(\"b\");\ncode4:\n    if ((gUnk_0810AC54[0] != uVar2 || (this->animationState != gUnk_0810AC54[1] >> 2))) {\n        // asm (\"e\");\n        if (gUnk_0810AC54[2] == 0) {\n            this->field_0xf = 0;\n            return 0xff;\n        }\n    }\n    this->field_0xf += 1;\n    if (this->field_0xf < 8) {\n        return 0xff;\n    }\n    return gUnk_0810AC54[3];\n}\n",
      "asmCode": "thumb_func_start sub_080611D4\nsub_080611D4:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r1, [r4, #0x14]\n        mov r0, #0x6\n        and r0, r1\n        ldr r1, _data0_0\n        add r0, r1\n        mov r1, #0x0\n        ldrsb r1, [r0, r1]\n        mov r2, #0x1\n        ldrsb r2, [r0, r2]\n        mov r0, r4\n        bl sub_080002B4\n        mov r3, r0\n        ldr r2, _data0_0+0x4\n_code0_0:\n        ldrb r0, [r2]\n        cmp r0, r3\n        bne _code0_1\n        ldrb r0, [r2, #0x1]\n        ldrb r1, [r4, #0x14]\n        lsr r0, #0x2\n        cmp r1, r0\n        bne _code0_1\n        ldrb r0, [r4, #0xf]\n        add r0, #0x1\n        strb r0, [r4, #0xf]\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x7\n        bls _code0_2\n        ldrb r0, [r2, #0x1]\n        b _code0_3\n_data0_0:\n        .4byte gUnk_0810AC4C\n        .4byte gUnk_0810AC54\n_code0_1:\n        add r2, #0x2\n        ldrb r0, [r2]\n        cmp r0, #0x0\n        bne _code0_0\n        strb r0, [r4, #0xf]\n_code0_2:\n        mov r0, #0xff\n_code0_3:\n        pop {r4, pc}",
      "score": "48",
      "id": 129
    },
    {
      "name": "sub_08061358",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"coord.h\"\n#include \"random.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_0810AC1C[])(Entity*);\n\nextern void (*const gUnk_0810AC2C[])(Entity*);\n\ntypedef struct {\n    u8 unk_0;  // u8\n    u8 unk_0b; // u8\n    u16 unk_1; // u16\n    u16 unk_2; // u16\n    u16 unk_3;\n    u16 unk_4;\n    u16 unk_5; // u16\n    u16 unk_6; // u16\n    u16 unk_7; // u16\n    u16 unk_8; // u16\n} UnkHeap;\n\nextern Hitbox gUnk_080FD150;\n\nvoid sub_08060E70(Entity*, u32);\n\nu32 sub_08061230(Entity*);\nu32 sub_08060F80(Entity*);\nvoid sub_08060EDC(Entity*);\nvoid sub_08061090(Entity*, u32, u32);\n\nbool32 sub_08060FD0(Entity*, u32, u32);\nvoid sub_08061464(Entity*, u32, u32);\nvoid sub_08061120(Entity*, u32, u32, u32);\nbool32 sub_08061170(Entity*);\n\nvoid sub_08061358(Entity*);\n\nvoid sub_08060E94(Entity*);\n\nu32 sub_0806FCD0(u32, u32, u32);\n\nextern Entity gUnk_0200D654;\nextern Entity gUnk_02027EB4;\nextern bool32 sub_080AE4CC(Entity*, u32, u32, u32);\n\nextern u32 sub_080AF1EC(Entity*);\nu32 sub_080611D4(Entity*);\nextern u32 sub_08079FD4(Entity*, u32);\nextern void sub_08016AD2(Entity*);\n\nextern struct {\n    s8 unk_0;\n    s8 unk_1;\n} gUnk_0810AC4C[];\nextern u8 gUnk_0810AC54[8];\nextern u32 sub_080002B4(Entity*, u32, u32);\n\nextern u8 gUnk_0810AC5D;\n\nbool32 sub_08061630(Entity*, s32, s32, s32);\nbool32 sub_08061720(Entity*, s32, s32, s32);\nbool32 sub_080616A8(Entity*, s32, s32, s32);\nbool32 sub_08061798(Entity*, s32, s32, s32);\nbool32 sub_08061888(Entity*, s32, s32, s32);\nbool32 sub_08061978(Entity*, s32, s32, s32);\nbool32 sub_08061810(Entity*, s32, s32, s32);\nbool32 sub_08061900(Entity*, s32, s32, s32);\n\nbool32 sub_08061A74(Entity*, s32, s32, s32);\n\nbool32 sub_08061A1C(Entity*, s32, s32, s32);\n\nbool32 sub_080619F0(Entity*, s32, s32, s32);\n\nbool32 sub_08061A48(Entity*, s32, s32, s32);\n\nextern void (*const gUnk_0810AC70[])(Entity*);\n\nvoid sub_08061AFC(Entity*);\n\nextern u16* gUnk_0810B660[8];\n\n// end of existing headers\n\nvoid sub_08061358(Entity* this) {\n    u8 bVar1;\n    u32 uVar2;\n    s32 iVar3;\n    u8 bVar4;\n    u32 unaff_r6;\n\n    bVar4 = (u8)unaff_r6;\n\n    switch (this->subAction) {\n        case 0:\n            UpdateAnimationSingleFrame(this);\n            if ((this->frames.all & 0x80) == 0) {\n                return;\n            }\n            this->subAction = 1;\n            this->actionDelay = 0xf;\n            sub_08060E70(this, 0);\n            return;\n        case 1:\n            this->actionDelay -= 1;\n            asm(\"x\");\n            if (this->actionDelay != 0) {\n                return;\n            }\n            uVar2 = Random();\n            // bVar4 = (u8)uVar2;\n            if ((uVar2 & 1) == 0)\n                goto _080613FA;\n            this->subAction = 2;\n            iVar3 = (u32)this->animationState * 2 + (uVar2 >> 4 & 3);\n            InitAnimationForceUpdate(this, (u32)(u8)(&gUnk_0810AC5D)[iVar3 + 1]);\n            break;\n        case 2:\n            UpdateAnimationSingleFrame(this);\n            if ((this->frames.all & 0x80) == 0) {\n                return;\n            }\n            this->animationState = (u8)(((u8)this->frames.all & 0x18) >> 2);\n            uVar2 = Random();\n            if ((uVar2 & 1) == 0) {\n                this->subAction = 0;\n                sub_08060E70(this, 0x10);\n                return;\n            }\n        _080613FA:\n            this->subAction = 3;\n            this->actionDelay = (bVar4 & 0x18) + 0x1e;\n            sub_08060E70(this, 4);\n            return;\n        case 3:\n            iVar3 = sub_08061170(this);\n            if (iVar3 != 0) {\n                this->subAction = this->actionDelay - 1;\n                this->actionDelay = this->subAction;\n                if (this->subAction != 0) {\n                    return;\n                }\n                this->subAction = 0;\n                sub_08060E70(this, 0x10);\n                return;\n            }\n            this->subAction = 2;\n            iVar3 = (u32)this->animationState * 2 + (unaff_r6 >> 4 & 3);\n            InitAnimationForceUpdate(this, (u32)(u8)(&gUnk_0810AC5D)[iVar3 + 1]);\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08061358\nsub_08061358:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        ldrb r5, [r4, #0xd]\n        cmp r5, #0x1\n        beq _code0_2\n        cmp r5, #0x1\n        bgt _code0_0\n        cmp r5, #0x0\n        beq _code0_1\n        b _code0_9\n_code0_0:\n        cmp r5, #0x2\n        beq _code0_3\n        cmp r5, #0x3\n        beq _code0_6\n        b _code0_9\n_code0_1:\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_9\n        mov r0, #0x1\n        strb r0, [r4, #0xd]\n        mov r0, #0xf\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_08060E70\n        b _code0_9\n_code0_2:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_9\n        bl Random\n        mov r6, r0\n        and r5, r6\n        cmp r5, #0x0\n        beq _code0_4\n        mov r0, #0x2\n        strb r0, [r4, #0xd]\n        ldr r3, _data0_0\n        ldrb r0, [r4, #0x14]\n        lsl r0, #0x1\n        lsr r1, r6, #0x4\n        mov r2, #0x3\n        and r1, r2\n        add r0, r1\n        add r0, r3\n        b _code0_7\n_data0_0:\n        .4byte gUnk_0810AC5D\n_code0_3:\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_9\n        mov r0, #0x18\n        and r0, r1\n        lsr r0, #0x2\n        strb r0, [r4, #0x14]\n        bl Random\n        mov r1, r0\n        mov r0, #0x1\n        and r1, r0\n        cmp r1, #0x0\n        beq _code0_5\n_code0_4:\n        mov r0, #0x3\n        strb r0, [r4, #0xd]\n        mov r0, #0x18\n        and r6, r0\n        mov r0, r6\n        add r0, #0x1e\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        mov r1, #0x4\n        bl sub_08060E70\n        b _code0_9\n_code0_5:\n        strb r1, [r4, #0xd]\n        mov r0, r4\n        mov r1, #0x10\n        bl sub_08060E70\n        b _code0_9\n_code0_6:\n        mov r0, r4\n        bl sub_08061170\n        cmp r0, #0x0\n        bne _code0_8\n        mov r0, #0x2\n        strb r0, [r4, #0xd]\n        ldr r2, _data0_1\n        ldrb r0, [r4, #0x14]\n        lsl r0, #0x1\n        lsr r1, r6, #0x4\n        and r1, r5\n        add r0, r1\n        add r0, r2\n_code0_7:\n        ldrb r1, [r0]\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        b _code0_9\n_data0_1:\n        .4byte gUnk_0810AC5D\n_code0_8:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x0\n        bne _code0_9\n        strb r0, [r4, #0xd]\n        mov r0, r4\n        mov r1, #0x10\n        bl sub_08060E70\n_code0_9:\n        pop {r4, r5, r6, pc}",
      "score": "134",
      "id": 130
    },
    {
      "name": "sub_08061464",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"coord.h\"\n#include \"random.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_0810AC1C[])(Entity*);\n\nextern void (*const gUnk_0810AC2C[])(Entity*);\n\ntypedef struct {\n    u8 unk_0;  // u8\n    u8 unk_0b; // u8\n    u16 unk_1; // u16\n    u16 unk_2; // u16\n    u16 unk_3;\n    u16 unk_4;\n    u16 unk_5; // u16\n    u16 unk_6; // u16\n    u16 unk_7; // u16\n    u16 unk_8; // u16\n} UnkHeap;\n\nextern Hitbox gUnk_080FD150;\n\nvoid sub_08060E70(Entity*, u32);\n\nu32 sub_08061230(Entity*);\nu32 sub_08060F80(Entity*);\nvoid sub_08060EDC(Entity*);\nvoid sub_08061090(Entity*, u32, u32);\n\nbool32 sub_08060FD0(Entity*, u32, u32);\nvoid sub_08061464(Entity*, u32, u32);\nvoid sub_08061120(Entity*, u32, u32, u32);\nbool32 sub_08061170(Entity*);\n\nvoid sub_08061358(Entity*);\n\nvoid sub_08060E94(Entity*);\n\nu32 sub_0806FCD0(u32, u32, u32);\n\nextern Entity gUnk_0200D654;\nextern Entity gUnk_02027EB4;\nextern bool32 sub_080AE4CC(Entity*, u32, u32, u32);\n\nextern u32 sub_080AF1EC(Entity*);\nu32 sub_080611D4(Entity*);\nextern u32 sub_08079FD4(Entity*, u32);\nextern void sub_08016AD2(Entity*);\n\nextern struct {\n    s8 unk_0;\n    s8 unk_1;\n} gUnk_0810AC4C[];\nextern u8 gUnk_0810AC54[8];\nextern u32 sub_080002B4(Entity*, u32, u32);\n\nextern u8 gUnk_0810AC5D;\n\nbool32 sub_08061630(Entity*, s32, s32, s32);\nbool32 sub_08061720(Entity*, s32, s32, s32);\nbool32 sub_080616A8(Entity*, s32, s32, s32);\nbool32 sub_08061798(Entity*, s32, s32, s32);\nbool32 sub_08061888(Entity*, s32, s32, s32);\nbool32 sub_08061978(Entity*, s32, s32, s32);\nbool32 sub_08061810(Entity*, s32, s32, s32);\nbool32 sub_08061900(Entity*, s32, s32, s32);\n\nbool32 sub_08061A74(Entity*, s32, s32, s32);\n\nbool32 sub_08061A1C(Entity*, s32, s32, s32);\n\nbool32 sub_080619F0(Entity*, s32, s32, s32);\n\nbool32 sub_08061A48(Entity*, s32, s32, s32);\n\nextern void (*const gUnk_0810AC70[])(Entity*);\n\nvoid sub_08061AFC(Entity*);\n\nextern u16* gUnk_0810B660[8];\n\n// end of existing headers\n\nvoid sub_08061464(Entity* this, u32 param_a, u32 param_b) {\n    u8 bVar1;\n    s16 sVar2;\n    s16 sVar3;\n    u16 uVar4;\n    u32 uVar6;\n    u32 uVar7;\n    s32 iVar8;\n    s32 iVar9;\n    s32 iVar10;\n    u16 uVar5;\n\n    sVar2 = this->x.HALF.HI;\n    iVar10 = (s32)sVar2;\n    sVar3 = this->y.HALF.HI;\n    iVar9 = (s32)sVar3;\n    uVar6 = sub_080045D4(sVar2, sVar3, param_a, param_b);\n    // uVar7 = (uVar6 + 2) & 0x1c;\n    // if (7 < uVar7 >> 2)\n    // goto _08061612;\n    // uVar4 = (u16)param_b;\n    // uVar5 = (u16)param_a;\n    // asm(\"----\");\n    switch (uVar7) {\n        case 0:\n            this->field_0x6e.HALF.LO = uVar4;\n            if ((s32)param_a < this->x.HALF.HI) {\n                sub_08061630(this, iVar10, iVar9 + -8, param_a);\n                break;\n            }\n            goto _08061504;\n        case 4:\n            this->field_0x6e.HALF.LO = uVar5;\n            iVar8 = sub_08061720(this, iVar10 + 8, iVar9, param_b);\n            if (iVar8 != 0)\n                break;\n            this->field_0x6e.HALF.LO = uVar4;\n        _08061504:\n            sub_080616A8(this, iVar10, iVar9 + -8, param_a);\n            break;\n        case 8:\n            this->field_0x6e.HALF.LO = uVar5;\n            if ((s32)param_b < this->y.HALF.HI) {\n                sub_08061720(this, iVar10 + 8, iVar9, param_b);\n            } else {\n                sub_08061798(this, iVar10 + 8, iVar9, param_b);\n            }\n            break;\n        case 0xc:\n            this->field_0x6e.HALF.LO = uVar5;\n            iVar8 = sub_08061798(this, iVar10 + 8, iVar9, param_b);\n            if (iVar8 != 0)\n                break;\n            this->field_0x6e.HALF.LO = uVar4;\n            goto _08061574;\n        case 0x10:\n            this->field_0x6e.HALF.LO = uVar4;\n            if ((s32)param_a < this->x.HALF.HI)\n                goto _080615A4;\n        _08061574:\n            sub_08061888(this, iVar10, iVar9 + 8, param_a);\n            break;\n        case 0x14:\n            this->field_0x6e.HALF.LO = uVar5;\n            iVar8 = sub_08061978(this, iVar10 + -8, iVar9, param_b);\n            if (iVar8 != 0)\n                break;\n            this->field_0x6e.HALF.LO = uVar4;\n        _080615A4:\n            sub_08061810(this, iVar10, iVar9 + 8, param_a);\n            break;\n        case 0x18:\n            this->field_0x6e.HALF.LO = uVar5;\n            if ((s32)param_b < this->y.HALF.HI) {\n                sub_08061900(this, iVar10 + -8, iVar9, param_b);\n            } else {\n                sub_08061978(this, iVar10 + -8, iVar9, param_b);\n            }\n            break;\n        case 0x1c:\n            this->field_0x6e.HALF.LO = uVar5;\n            iVar8 = sub_08061900(this, iVar10 + -8, iVar9, param_b);\n            if (iVar8 == 0) {\n                this->field_0x6e.HALF.LO = uVar4;\n                sub_08061630(this, iVar10, iVar9 + -8, param_a);\n            }\n    }\n_08061612:\n    bVar1 = ((UnkHeap*)this->myHeap)->unk_0;\n    if ((bVar1 & 8) == 0) {\n        this->action = 3;\n        this->subAction = bVar1 & 8;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08061464\nsub_08061464:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r4, r0\n        mov r8, r1\n        mov r5, r2\n        mov r0, #0x2e\n        ldrsh r7, [r4, r0]\n        mov r1, #0x32\n        ldrsh r6, [r4, r1]\n        mov r0, r7\n        mov r1, r6\n        mov r2, r8\n        mov r3, r5\n        bl sub_080045D4\n        add r0, #0x2\n        mov r1, #0x1c\n        and r0, r1\n        lsr r0, #0x2\n        cmp r0, #0x7\n        bls _code0_0\n        b _code0_7\n_code0_0:\n        lsl r0, #0x2\n        ldr r1, _data0_0\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_0:\n        .4byte _other0_0\n_other0_0:\n        .4byte _case0_0\n        .4byte _case0_1\n        .4byte _case0_2\n        .4byte _case0_3\n        .4byte _case0_4\n        .4byte _case0_5\n        .4byte _case0_6\n        .4byte _case0_7\n_case0_0:\n        mov r0, r4\n        add r0, #0x6e\n        strh r5, [r0]\n        mov r1, #0x2e\n        ldrsh r0, [r4, r1]\n        cmp r0, r8\n        ble _code0_2\n        mov r2, r6\n        sub r2, #0x8\n        mov r0, r4\n        mov r1, r7\n        mov r3, r8\n        bl sub_08061630\n        b _code0_7\n_case0_1:\n        mov r0, #0x6e\n        add r0, r4\n        mov r9, r0\n        mov r1, r8\n        strh r1, [r0]\n        mov r1, r7\n        add r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061720\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_7\n_code0_1:\n        mov r0, r9\n        strh r5, [r0]\n_code0_2:\n        mov r2, r6\n        sub r2, #0x8\n        mov r0, r4\n        mov r1, r7\n        mov r3, r8\n        bl sub_080616A8\n        b _code0_7\n_case0_2:\n        mov r0, r4\n        add r0, #0x6e\n        mov r1, r8\n        strh r1, [r0]\n        mov r1, #0x32\n        ldrsh r0, [r4, r1]\n        cmp r0, r5\n        ble _code0_3\n        mov r1, r7\n        add r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061720\n        b _code0_7\n_code0_3:\n        mov r1, r7\n        add r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061798\n        b _code0_7\n_case0_3:\n        mov r0, #0x6e\n        add r0, r4\n        mov r9, r0\n        mov r1, r8\n        strh r1, [r0]\n        mov r1, r7\n        add r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061798\n        cmp r0, #0x0\n        bne _code0_7\n        mov r0, r9\n        strh r5, [r0]\n        b _code0_4\n_case0_4:\n        mov r0, r4\n        add r0, #0x6e\n        strh r5, [r0]\n        mov r1, #0x2e\n        ldrsh r0, [r4, r1]\n        cmp r0, r8\n        bgt _code0_5\n_code0_4:\n        mov r2, r6\n        add r2, #0x8\n        mov r0, r4\n        mov r1, r7\n        mov r3, r8\n        bl sub_08061888\n        b _code0_7\n_case0_5:\n        mov r0, #0x6e\n        add r0, r4\n        mov r9, r0\n        mov r1, r8\n        strh r1, [r0]\n        mov r1, r7\n        sub r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061978\n        cmp r0, #0x0\n        bne _code0_7\n        mov r0, r9\n        strh r5, [r0]\n_code0_5:\n        mov r2, r6\n        add r2, #0x8\n        mov r0, r4\n        mov r1, r7\n        mov r3, r8\n        bl sub_08061810\n        b _code0_7\n_case0_6:\n        mov r0, r4\n        add r0, #0x6e\n        mov r1, r8\n        strh r1, [r0]\n        mov r1, #0x32\n        ldrsh r0, [r4, r1]\n        cmp r0, r5\n        ble _code0_6\n        mov r1, r7\n        sub r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061900\n        b _code0_7\n_code0_6:\n        mov r1, r7\n        sub r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061978\n        b _code0_7\n_case0_7:\n        mov r0, #0x6e\n        add r0, r4\n        mov r9, r0\n        mov r1, r8\n        strh r1, [r0]\n        mov r1, r7\n        sub r1, #0x8\n        mov r0, r4\n        mov r2, r6\n        mov r3, r5\n        bl sub_08061900\n        cmp r0, #0x0\n        bne _code0_7\n        mov r0, r9\n        strh r5, [r0]\n        mov r2, r6\n        sub r2, #0x8\n        mov r0, r4\n        mov r1, r7\n        mov r3, r8\n        bl sub_08061630\n_code0_7:\n        ldr r0, [r4, #0x64]\n        ldrb r1, [r0]\n        mov r0, #0x8\n        and r0, r1\n        lsl r0, #0x18\n        lsr r1, r0, #0x18\n        cmp r1, #0x0\n        bne _code0_8\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        strb r1, [r4, #0xd]\n_code0_8:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}",
      "score": "227",
      "id": 131
    },
    {
      "name": "sub_08061B18",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"coord.h\"\n#include \"random.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void (*const gUnk_0810AC1C[])(Entity*);\n\nextern void (*const gUnk_0810AC2C[])(Entity*);\n\ntypedef struct {\n    u8 unk_0;  // u8\n    u8 unk_0b; // u8\n    u16 unk_1; // u16\n    u16 unk_2; // u16\n    u16 unk_3;\n    u16 unk_4;\n    u16 unk_5; // u16\n    u16 unk_6; // u16\n    u16 unk_7; // u16\n    u16 unk_8; // u16\n} UnkHeap;\n\nextern Hitbox gUnk_080FD150;\n\nvoid sub_08060E70(Entity*, u32);\n\nu32 sub_08061230(Entity*);\nu32 sub_08060F80(Entity*);\nvoid sub_08060EDC(Entity*);\nvoid sub_08061090(Entity*, u32, u32);\n\nbool32 sub_08060FD0(Entity*, u32, u32);\nvoid sub_08061464(Entity*, u32, u32);\nvoid sub_08061120(Entity*, u32, u32, u32);\nbool32 sub_08061170(Entity*);\n\nvoid sub_08061358(Entity*);\n\nvoid sub_08060E94(Entity*);\n\nu32 sub_0806FCD0(u32, u32, u32);\n\nextern Entity gUnk_0200D654;\nextern Entity gUnk_02027EB4;\nextern bool32 sub_080AE4CC(Entity*, u32, u32, u32);\n\nextern u32 sub_080AF1EC(Entity*);\nu32 sub_080611D4(Entity*);\nextern u32 sub_08079FD4(Entity*, u32);\nextern void sub_08016AD2(Entity*);\n\nextern struct {\n    s8 unk_0;\n    s8 unk_1;\n} gUnk_0810AC4C[];\nextern u8 gUnk_0810AC54[8];\nextern u32 sub_080002B4(Entity*, u32, u32);\n\nextern u8 gUnk_0810AC5D;\n\nbool32 sub_08061630(Entity*, s32, s32, s32);\nbool32 sub_08061720(Entity*, s32, s32, s32);\nbool32 sub_080616A8(Entity*, s32, s32, s32);\nbool32 sub_08061798(Entity*, s32, s32, s32);\nbool32 sub_08061888(Entity*, s32, s32, s32);\nbool32 sub_08061978(Entity*, s32, s32, s32);\nbool32 sub_08061810(Entity*, s32, s32, s32);\nbool32 sub_08061900(Entity*, s32, s32, s32);\n\nbool32 sub_08061A74(Entity*, s32, s32, s32);\n\nbool32 sub_08061A1C(Entity*, s32, s32, s32);\n\nbool32 sub_080619F0(Entity*, s32, s32, s32);\n\nbool32 sub_08061A48(Entity*, s32, s32, s32);\n\nextern void (*const gUnk_0810AC70[])(Entity*);\n\nvoid sub_08061AFC(Entity*);\n\nextern u16* gUnk_0810B660[8];\n\n// end of existing headers\n\nvoid sub_08061B18(Entity* this) {\n    u8 bVar1;\n    u16* puVar2;\n\n    typedef struct {\n        u16 unk_0;\n        u16 unk_2;\n    } Tmp;\n\n    switch (this->interactType) {\n        case 0:\n            break;\n        case 1:\n            this->interactType = 0;\n            sub_08061AFC(this);\n            // puVar2 = (u16*)(*(int*)&this->field_0x68 + (((u32)this->actionDelay << 0x18) >> 0x17));\n            // if puVar2[1] == 0\n            if ((((Tmp**)&this->field_0x68))[++this->actionDelay]->unk_2 == 0) {\n                this->actionDelay = 0;\n            }\n            TextboxNoOverlap((u32)*puVar2, this);\n            break;\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08061B18\nsub_08061B18:\n        push {r4, lr}\n        mov r4, r0\n        mov r1, r4\n        add r1, #0x39\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        beq _code0_1\n        cmp r0, #0x1\n        bne _code0_1\n        mov r0, #0x0\n        strb r0, [r1]\n        mov r0, r4\n        bl sub_08061AFC\n        ldr r2, [r4, #0x68]\n        ldrb r0, [r4, #0xe]\n        add r1, r0, #0x1\n        strb r1, [r4, #0xe]\n        lsl r0, #0x18\n        lsr r0, #0x17\n        add r2, r0\n        ldrh r0, [r2, #0x2]\n        cmp r0, #0x0\n        bne _code0_0\n        strb r0, [r4, #0xe]\n_code0_0:\n        ldrh r0, [r2]\n        mov r1, r4\n        bl TextboxNoOverlap\n_code0_1:\n        pop {r4, pc}",
      "score": "33",
      "id": 132
    },
    {
      "name": "sub_080249F4",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"createObject.h\"\n#include \"game.h\"\n#include \"functions.h\"\n#include \"save.h\"\n\nextern u32 sub_080002E0(u16, u32);\nextern void sub_0800449C(Entity*, u32);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\nextern u32 PlayerInRange(Entity*, u32, u32);\nextern void sub_080AEFB4(Entity*);\nextern Entity* FindNextDuplicateID(Entity* ent, int listIndex);\n\nvoid sub_080249F4(Entity*);\nvoid sub_08024940(Entity*);\nvoid sub_080249DC(Entity*);\nvoid sub_08024A14(Entity*, u32, u32);\nbool32 sub_08024AD8(Entity*);\nbool32 sub_08024B38(Entity*);\nbool32 sub_08024C48(Entity*, bool32);\nvoid sub_08024C7C(Entity*);\nvoid sub_08024C94(Entity*);\nbool32 sub_08024CC0(Entity*);\nvoid sub_08024D00(Entity*);\nvoid sub_08024E00(Entity*, u32);\nvoid sub_08024E1C(Entity*);\nu32 sub_08024E34(void);\nvoid sub_08024E4C(Entity*);\nvoid sub_08024F50(Entity*);\n\nextern Entity* gUnk_020000B0;\n\nextern void (*const gUnk_080CBEC4[])(Entity*);\nextern void (*const gUnk_080CBEDC[])(Entity*);\nextern void (*const gUnk_080CBEF8[])(Entity*);\n\nextern const u8 gUnk_080CBF10[];\nextern const u16 gUnk_080CBF18[];\nextern const u8 gUnk_080CBF20[];\n\n// end of existing headers\n\nvoid sub_080249F4(Entity* this) {\n    u8 direction = ((this->direction + 2) & 0x1c) >> 2;\n    if (direction != this->animationState) {\n        this->animationState = direction;\n        InitializeAnimation(this, this->animationState);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080249F4\nsub_080249F4:\n        push {lr}\n        mov r2, r0\n        ldrb r0, [r2, #0x15]\n        add r1, r0, #0x2\n        mov r0, #0x1f\n        and r1, r0\n        lsr r1, #0x2\n        ldrb r0, [r2, #0x14]\n        cmp r1, r0\n        beq _code0_0\n        strb r1, [r2, #0x14]\n        ldrb r1, [r2, #0x14]\n        mov r0, r2\n        bl InitializeAnimation\n_code0_0:\n        pop {pc}",
      "score": "18",
      "id": 133
    },
    {
      "name": "sub_08024C48",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"createObject.h\"\n#include \"game.h\"\n#include \"functions.h\"\n#include \"save.h\"\n\nextern u32 sub_080002E0(u16, u32);\nextern void sub_0800449C(Entity*, u32);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\nextern u32 PlayerInRange(Entity*, u32, u32);\nextern void sub_080AEFB4(Entity*);\nextern Entity* FindNextDuplicateID(Entity* ent, int listIndex);\n\nvoid sub_080249F4(Entity*);\nvoid sub_08024940(Entity*);\nvoid sub_080249DC(Entity*);\nvoid sub_08024A14(Entity*, u32, u32);\nbool32 sub_08024AD8(Entity*);\nbool32 sub_08024B38(Entity*);\nbool32 sub_08024C48(Entity*, bool32);\nvoid sub_08024C7C(Entity*);\nvoid sub_08024C94(Entity*);\nbool32 sub_08024CC0(Entity*);\nvoid sub_08024D00(Entity*);\nvoid sub_08024E00(Entity*, u32);\nvoid sub_08024E1C(Entity*);\nu32 sub_08024E34(void);\nvoid sub_08024E4C(Entity*);\nvoid sub_08024F50(Entity*);\n\nextern Entity* gUnk_020000B0;\n\nextern void (*const gUnk_080CBEC4[])(Entity*);\nextern void (*const gUnk_080CBEDC[])(Entity*);\nextern void (*const gUnk_080CBEF8[])(Entity*);\n\nextern const u8 gUnk_080CBF10[];\nextern const u16 gUnk_080CBF18[];\nextern const u8 gUnk_080CBF20[];\n\n// end of existing headers\n\nbool32 sub_08024C48(Entity* this, bool32 unk) {\n\n}",
      "asmCode": "thumb_func_start sub_08024C48\nsub_08024C48:\n        push {r4, r5, lr}\n        mov r3, r0\n        mov r4, #0x1\n        cmp r1, #0x0\n        beq _code0_0\n        mov r0, #0x3\n        bl sub_08049DF4\n        neg r1, r0\n        orr r1, r0\n        lsr r4, r1, #0x1f\n        b _code0_2\n_code0_0:\n        ldr r2, [r3, #0x54]\n        cmp r2, #0x0\n        beq _code0_1\n        ldr r0, [r2, #0x4]\n        cmp r0, #0x0\n        beq _code0_1\n        mov r5, #0x36\n        ldrsh r0, [r2, r5]\n        cmp r0, #0x0\n        bge _code0_2\n_code0_1:\n        str r1, [r3, #0x54]\n        mov r4, #0x0\n_code0_2:\n        mov r0, r4\n        pop {r4, r5, pc}",
      "score": "30",
      "id": 134
    },
    {
      "name": "sub_08024E4C",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"createObject.h\"\n#include \"game.h\"\n#include \"functions.h\"\n#include \"save.h\"\n\nextern u32 sub_080002E0(u16, u32);\nextern void sub_0800449C(Entity*, u32);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\nextern u32 PlayerInRange(Entity*, u32, u32);\nextern void sub_080AEFB4(Entity*);\nextern Entity* FindNextDuplicateID(Entity* ent, int listIndex);\n\nvoid sub_080249F4(Entity*);\nvoid sub_08024940(Entity*);\nvoid sub_080249DC(Entity*);\nvoid sub_08024A14(Entity*, u32, u32);\nbool32 sub_08024AD8(Entity*);\nbool32 sub_08024B38(Entity*);\nbool32 sub_08024C48(Entity*, bool32);\nvoid sub_08024C7C(Entity*);\nvoid sub_08024C94(Entity*);\nbool32 sub_08024CC0(Entity*);\nvoid sub_08024D00(Entity*);\nvoid sub_08024E00(Entity*, u32);\nvoid sub_08024E1C(Entity*);\nu32 sub_08024E34(void);\nvoid sub_08024E4C(Entity*);\nvoid sub_08024F50(Entity*);\n\nextern Entity* gUnk_020000B0;\n\nextern void (*const gUnk_080CBEC4[])(Entity*);\nextern void (*const gUnk_080CBEDC[])(Entity*);\nextern void (*const gUnk_080CBEF8[])(Entity*);\n\nextern const u8 gUnk_080CBF10[];\nextern const u16 gUnk_080CBF18[];\nextern const u8 gUnk_080CBF20[];\n\n// end of existing headers\n\nvoid sub_08024E4C(Entity* this) {\n    if (this->field_0x82.HALF.HI == 3) {\n        this->field_0xf++;\n        this->field_0xf &= 0xff;\n        this->field_0xf &= 0x1f;\n\n        if (sub_0807953C()) {\n            this->cutsceneBeh.HALF.LO += 1 + (Random() & 1);\n        }\n\n        if (gSave.stats.health == 0 || this->field_0x86.HALF.HI == 4) {\n            this->cutsceneBeh.HALF.LO = 0x30;\n            this->field_0x86.HALF.HI = 0;\n            sub_08024F50(this);\n            this->field_0x80.HALF.LO = 0;\n            this->speed = 0x40;\n            this->actionDelay = 0x40;\n            this->field_0xf = 8;\n            sub_08024A14(this, 0, 8);\n        } else {\n            Entity* player = &gPlayerEntity;\n\n            ResetPlayer();\n            gPlayerState.flags.all |= 0x100;\n            gPlayerState.field_0xa |= 0x80;\n            gPlayerState.playerAction = 0xe;\n            gPlayerState.field_0x38 = 0x14;\n            gPlayerState.field_0x39 = 1;\n            *(u8*)&gPlayerState.field_0x3a = 0;\n            PositionRelative(this, player, 0, 0x10000);\n            player->spriteOffsetY = 0x1a;\n            player->animationState = 4;\n            player->spritePriority.b1 = 0;\n            if (this->field_0xf == 0) {\n                this->field_0x86.HALF.HI++;\n                player->iframes = 8;\n                ModHealth(-2);\n                sub_0800449C(player, 0x7a);\n            }\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08024E4C\nsub_08024E4C:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        add r0, #0x83\n        ldrb r0, [r0]\n        cmp r0, #0x3\n        bne _code0_3\n        ldrb r0, [r4, #0xf]\n        add r0, #0x1\n        mov r7, #0x0\n        mov r1, #0xff\n        and r0, r1\n        mov r1, #0x1f\n        and r0, r1\n        strb r0, [r4, #0xf]\n        bl sub_0807953C\n        cmp r0, #0x0\n        beq _code0_0\n        bl Random\n        mov r3, r4\n        add r3, #0x84\n        ldrb r2, [r3]\n        add r2, #0x1\n        mov r1, #0x1\n        and r1, r0\n        add r2, r1\n        strb r2, [r3]\n_code0_0:\n        ldr r0, _data0_0\n        add r0, #0xaa\n        ldrb r0, [r0]\n        mov r2, r4\n        add r2, #0x87\n        cmp r0, #0x0\n        beq _code0_1\n        mov r5, r2\n        ldrb r0, [r5]\n        cmp r0, #0x4\n        bne _code0_2\n_code0_1:\n        mov r1, r4\n        add r1, #0x84\n        mov r0, #0x30\n        strb r0, [r1]\n        strb r7, [r2]\n        mov r0, r4\n        bl sub_08024F50\n        mov r0, r4\n        add r0, #0x80\n        strb r7, [r0]\n        mov r1, #0x40\n        mov r0, #0x40\n        strh r0, [r4, #0x24]\n        strb r1, [r4, #0xe]\n        mov r0, #0x8\n        strb r0, [r4, #0xf]\n        mov r0, r4\n        mov r1, #0x0\n        mov r2, #0x8\n        bl sub_08024A14\n        b _code0_3\n_data0_0:\n        .4byte gSave\n_code0_2:\n        ldr r6, _data0_1\n        bl ResetPlayer\n        ldr r2, _data0_1+0x4\n        ldr r0, [r2, #0x30]\n        mov r1, #0x80\n        lsl r1, #0x1\n        orr r0, r1\n        str r0, [r2, #0x30]\n        ldrb r0, [r2, #0xa]\n        mov r1, #0x80\n        orr r0, r1\n        strb r0, [r2, #0xa]\n        mov r0, #0xe\n        strb r0, [r2, #0xc]\n        mov r1, r2\n        add r1, #0x38\n        mov r0, #0x14\n        strb r0, [r1]\n        add r1, #0x1\n        mov r0, #0x1\n        strb r0, [r1]\n        mov r0, r2\n        add r0, #0x3a\n        strb r7, [r0]\n        mov r3, #0x80\n        lsl r3, #0x9\n        mov r0, r4\n        mov r1, r6\n        mov r2, #0x0\n        bl PositionRelative\n        mov r1, r6\n        add r1, #0x63\n        mov r0, #0x1a\n        strb r0, [r1]\n        mov r0, #0x4\n        strb r0, [r6, #0x14]\n        mov r2, r6\n        add r2, #0x29\n        ldrb r1, [r2]\n        sub r0, #0x3d\n        and r0, r1\n        strb r0, [r2]\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        bne _code0_3\n        ldrb r0, [r5]\n        add r0, #0x1\n        strb r0, [r5]\n        mov r1, r6\n        add r1, #0x3d\n        mov r0, #0x8\n        strb r0, [r1]\n        sub r0, #0xa\n        bl ModHealth\n        mov r0, r6\n        mov r1, #0x7a\n        bl sub_0800449C\n_code0_3:\n        pop {r4, r5, r6, r7, pc}\n_data0_1:\n        .4byte gPlayerEntity\n        .4byte gPlayerState",
      "score": "127",
      "id": 135
    },
    {
      "name": "sub_0806DF74",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void DoExitTransition(ScreenTransitionData*);\nextern ScreenTransitionData gUnk_0813AD4C;\n\nvoid sub_0806E014(Entity* this);\nvoid sub_0806E0DC(Entity* this);\n\nextern void (*const gUnk_081142BC[])(Entity*);\n\nextern void sub_08078828(Entity*);\n\nextern Hitbox gUnk_080FD150;\n\n// end of existing headers\n\nvoid sub_0806DF74(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806DF74\nsub_0806DF74:\n        push {r4, lr}\n        mov r4, r0\n        mov r1, #0x0\n        bl sub_0807DD94\n        ldrb r0, [r4, #0xe]\n        cmp r0, #0xff\n        beq _code0_1\n        mov r0, r4\n        add r0, #0x44\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r1, [r4, #0x70]\n        ldrb r0, [r1, #0xe]\n        add r0, #0x1\n        strb r0, [r1, #0xe]\n_code0_0:\n        ldr r1, [r4, #0x68]\n        ldrb r0, [r1, #0xe]\n        add r0, #0x1\n        strb r0, [r1, #0xe]\n        ldr r1, [r4, #0x6c]\n        ldrb r0, [r1, #0xe]\n        add r0, #0x1\n        strb r0, [r1, #0xe]\n        mov r0, #0xff\n        strb r0, [r4, #0xe]\n        mov r0, #0x0\n        bl SetRoomFlag\n_code0_1:\n        pop {r4, pc}",
      "score": "33",
      "id": 137
    },
    {
      "name": "sub_0806E014",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void DoExitTransition(ScreenTransitionData*);\nextern ScreenTransitionData gUnk_0813AD4C;\n\nvoid sub_0806E014(Entity* this);\nvoid sub_0806E0DC(Entity* this);\n\nextern void (*const gUnk_081142BC[])(Entity*);\n\nextern void sub_08078828(Entity*);\n\nextern Hitbox gUnk_080FD150;\n\n// end of existing headers\n\nvoid sub_0806E014(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806E014\nsub_0806E014:\n        push {r4, r5, r6, r7, lr}\n        mov r5, r0\n        bl Random\n        mov r1, #0x70\n        and r1, r0\n        lsr r4, r1, #0x4\n        mov r0, #0xff\n        strb r0, [r5, #0xb]\n        mov r0, #0x1\n        neg r0, r0\n        mov r7, r0\n        strb r0, [r5, #0xe]\n        mov r0, #0x93\n        bl CheckLocalFlag\n        mov r1, r0\n        cmp r1, #0x0\n        bne _code0_0\n        mov r0, r5\n        add r0, #0x44\n        strb r1, [r0]\n        lsl r1, r4, #0x1\n        ldr r0, _data0_0\n        add r6, r1, r0\n        ldr r1, [r5, #0x68]\n        ldrb r0, [r6]\n        strb r0, [r1, #0xf]\n        ldr r1, [r5, #0x68]\n        mov r4, #0x90\n        lsl r4, #0xf\n        mov r0, r5\n        mov r2, r4\n        mov r3, r4\n        bl PositionRelative\n        ldr r1, [r5, #0x6c]\n        ldrb r0, [r6, #0x1]\n        strb r0, [r1, #0xf]\n        ldr r1, [r5, #0x6c]\n        mov r2, #0xd0\n        lsl r2, #0xf\n        mov r0, r5\n        mov r3, r4\n        bl PositionRelative\n        ldr r1, [r5, #0x70]\n        ldrb r0, [r1, #0xf]\n        orr r0, r7\n        strb r0, [r1, #0xf]\n        ldr r1, [r5, #0x70]\n        mov r0, r5\n        bl CopyPosition\n        b _code0_1\n_data0_0:\n        .4byte gUnk_081142CC\n_code0_0:\n        mov r1, r5\n        add r1, #0x44\n        mov r0, #0x1\n        strb r0, [r1]\n        lsl r1, r4, #0x2\n        ldr r0, _data0_1\n        add r6, r1, r0\n        ldr r1, [r5, #0x68]\n        ldrb r0, [r6]\n        strb r0, [r1, #0xf]\n        ldr r1, [r5, #0x68]\n        mov r2, #0xe0\n        lsl r2, #0xe\n        mov r4, #0x90\n        lsl r4, #0xf\n        mov r0, r5\n        mov r3, r4\n        bl PositionRelative\n        ldr r1, [r5, #0x6c]\n        ldrb r0, [r6, #0x1]\n        strb r0, [r1, #0xf]\n        ldr r1, [r5, #0x6c]\n        mov r2, #0xb0\n        lsl r2, #0xf\n        mov r0, r5\n        mov r3, r4\n        bl PositionRelative\n        ldr r1, [r5, #0x70]\n        ldrb r0, [r6, #0x2]\n        strb r0, [r1, #0xf]\n        ldr r1, [r5, #0x70]\n        mov r2, #0xf0\n        lsl r2, #0xf\n        mov r0, r5\n        mov r3, r4\n        bl PositionRelative\n_code0_1:\n        pop {r4, r5, r6, r7, pc}\n_data0_1:\n        .4byte gUnk_081142DC",
      "score": "95",
      "id": 138
    },
    {
      "name": "sub_0806E140",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n\nextern void DoExitTransition(ScreenTransitionData*);\nextern ScreenTransitionData gUnk_0813AD4C;\n\nvoid sub_0806E014(Entity* this);\nvoid sub_0806E0DC(Entity* this);\n\nextern void (*const gUnk_081142BC[])(Entity*);\n\nextern void sub_08078828(Entity*);\n\nextern Hitbox gUnk_080FD150;\n\n// end of existing headers\n\n\n         void sub_0806E140(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806E140\nsub_0806E140:\n        push {r4, r5, lr}\n        mov r3, r0\n        mov r5, r1\n        ldrb r1, [r3, #0xb]\n        cmp r1, #0x0\n        beq _code0_3\n        mov r0, #0x1\n        str r0, [r5, #0x14]\n        mov r1, r3\n        add r1, #0x74\n        ldrh r0, [r1]\n        add r0, #0x1\n        strh r0, [r1]\n        add r1, #0x2\n        ldrh r2, [r1]\n        mov r0, r3\n        add r0, #0x44\n        ldrb r0, [r0]\n        mov r4, r1\n        cmp r0, #0x0\n        bne _code0_0\n        lsl r0, r2, #0x1\n        b _code0_1\n_code0_0:\n        lsl r0, r2, #0x1\n        add r0, r2\n_code0_1:\n        strh r0, [r4]\n        lsl r0, #0x10\n        lsr r0, #0x10\n        ldr r1, _data0_0\n        cmp r0, r1\n        bls _code0_2\n        strh r1, [r4]\n        mov r0, #0x0\n        str r0, [r5, #0x14]\n        ldr r0, _data0_0+0x4\n        bl TextboxNoOverlapFollow\n        b _code0_4\n_data0_0:\n        .4byte 0x3e7\n        .4byte 0x421b\n_code0_2:\n        ldr r0, _data0_1\n        bl TextboxNoOverlapFollow\n        ldr r1, _data0_1+0x4\n        ldrh r0, [r4]\n        str r0, [r1, #0x10]\n        b _code0_4\n_data0_1:\n        .4byte 0x4218\n        .4byte gTextBox\n_code0_3:\n        str r1, [r5, #0x14]\n        mov r0, r3\n        add r0, #0x74\n        strh r1, [r0]\n        mov r4, r3\n        add r4, #0x76\n        strh r1, [r4]\n        ldr r0, _data0_2\n        bl TextboxNoOverlapFollow\n_code0_4:\n        ldr r1, _data0_2+0x4\n        ldrh r0, [r4]\n        strh r0, [r1, #0x6]\n        ldr r2, _data0_2+0x8\n        ldrb r1, [r2, #0x7]\n        mov r0, #0x1\n        orr r0, r1\n        strb r0, [r2, #0x7]\n        pop {r4, r5, pc}\n_data0_2:\n        .4byte 0x421c\n        .4byte gScreenTransition\n        .4byte gActiveScriptInfo",
      "score": "78",
      "id": 139
    },
    {
      "name": "sub_08063AC0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"save.h\"\n#include \"script.h\"\n#include \"npc.h\"\n\nvoid sub_08063B68(Entity* this);\nvoid sub_08063A80(Entity* this);\n\nextern void (*gUnk_0810CDF8[])(Entity*);\n\nextern void CreateSpeechBubbleExclamationMark(Entity*, u32, u32);\n\nextern Dialog gUnk_0810CE04[];\n\n// end of existing headers\n\nvoid sub_08063AC0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08063AC0\nsub_08063AC0:\n        push {r4, lr}\n        mov r4, r0\n        mov r1, #0x20\n        mov r2, #0x20\n        bl sub_0806ED9C\n        cmp r0, #0x0\n        blt _code0_0\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        bne _code0_1\n        bl Random\n        mov r1, #0x3f\n        and r1, r0\n        cmp r1, #0x0\n        bne _code0_0\n        mov r0, r4\n        mov r1, #0x0\n        bl InitAnimationForceUpdate\n        mov r0, #0x1\n        strb r0, [r4, #0xf]\n_code0_0:\n        ldrb r0, [r4, #0xf]\n        cmp r0, #0x0\n        beq _code0_2\n_code0_1:\n        mov r0, r4\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, #0x0\n        strb r0, [r4, #0xf]\n_code0_2:\n        mov r0, r4\n        add r0, #0x39\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        cmp r0, #0x0\n        beq _code0_3\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        bl GetAnimationState\n        mov r1, r0\n        add r1, #0x4\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        ldrb r0, [r4, #0xe]\n        ldr r1, _data0_0\n        add r0, r1\n        bl TextboxNoOverlapFollow\n_code0_3:\n        mov r0, r4\n        bl sub_0806ED78\n        pop {r4, pc}\n_data0_0:\n        .4byte 0xa01",
      "score": "64",
      "id": 140
    },
    {
      "name": "PlayerNormal",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"textbox.h\"\n#include \"utils.h\"\n#include \"area.h\"\n#include \"save.h\"\n#include \"game.h\"\n#include \"object.h\"\n#include \"functions.h\"\n#include \"object.h\"\n\nstatic void (*const sPlayerActions[])(Entity*);\nextern void (*const gUnk_0811BA60[])(Entity*);\nextern void (*const gUnk_0811BA68[])(Entity*);\nextern void (*const gUnk_0811BA74[])(Entity*);\nextern void (*const gUnk_0811BA7C[])(Entity*);\nextern void (*const gUnk_0811BA88[])(Entity*);\nextern void (*const gUnk_0811BA94[])(Entity*);\nextern void (*const gUnk_0811BA9C[])(Entity*);\nextern void (*const gUnk_0811BAD4[])(Entity*);\nextern void (*const gUnk_0811BAE4[])(Entity*);\nextern void (*const gUnk_0811BB3C[])(Entity*);\n\nextern void RespawnPlayer();\nextern void sub_080797EC();\nextern void sub_08079E08();\nextern void sub_08078F60();\nextern void sub_0806F948();\nextern void sub_08077698();\nextern void sub_0805E544();\nextern void sub_080717F8();\nextern void DoExitTransition();\nextern void UnfreezeTime();\nextern void sub_08071A6C();\nextern void sub_08052BB8();\nextern void sub_08079258();\nextern void sub_08071AF0();\nextern void sub_080728AC();\nextern void sub_0807A298();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void sub_080792D8();\nextern Entity* CreatePlayerBomb();\nextern void sub_08072008();\nextern void sub_080791BC();\nextern void sub_08072168();\nextern u32 sub_0806F854();\nextern u32 sub_08019840();\nextern void sub_08072260();\nextern void sub_08079744();\nextern void sub_0807AE20();\nextern u32 sub_0807A894();\nextern u32 sub_080797C4();\nextern u32 Random();\nextern u32 sub_0807AC54();\nextern void sub_0800892E();\nextern void sub_08078F24();\nextern void sub_0807B068();\nextern u32 sub_080001DA();\nextern void sub_08072A60();\nextern u32 sub_0807A2F8();\nextern u32 sub_08052620();\nextern u32 sub_0806F730();\nextern u32 sub_08007DD6();\nextern u32 sub_0807A1E8();\nextern void sub_08073094();\nextern void sub_08074808();\nextern void sub_0805E4E0();\n\ntypedef struct {\n    u8 frame;\n    u8 dummy;\n    u16 speed;\n} PushFrames;\n\nextern PushFrames gUnk_0811BAF0[];\n\nextern Hitbox gUnk_08114F88;\nextern ScreenTransitionData gUnk_0813AB58;\n\n// end of existing headers\n\nvoid PlayerNormal(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start PlayerNormal\nPlayerNormal:\n        push {r4, r5, r6, r7, lr}\n        mov r5, r0\n        ldr r6, _data0_0\n        mov r3, r6\n        add r3, #0xa8\n        mov r4, #0x0\n        strb r4, [r3]\n        ldr r1, [r6, #0x30]\n        mov r7, #0x10\n        mov r0, r1\n        and r0, r7\n        mov r12, r6\n        cmp r0, #0x0\n        beq _code0_2\n        mov r2, r5\n        add r2, #0x29\n        ldrb r1, [r2]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        strb r0, [r2]\n        mov r0, r5\n        add r0, #0x42\n        strb r4, [r0]\n        mov r0, #0xa0\n        lsl r0, #0x1\n        strh r0, [r5, #0x24]\n        mov r0, #0x80\n        strb r0, [r6, #0x6]\n        strb r7, [r3]\n        ldrb r0, [r5, #0x14]\n        lsr r0, #0x1\n        add r0, #0x5c\n        mov r1, r5\n        add r1, #0x58\n        ldrb r1, [r1]\n        cmp r0, r1\n        bne _code0_0\n        ldrh r0, [r5, #0x12]\n        cmp r0, #0x2\n        bne _code0_0\n        ldr r0, _data0_0+0x4\n        bl UpdateAnimationSingleFrame\n        b _code0_1\n_data0_0:\n        .4byte gPlayerState\n        .4byte gPlayerEntity\n_code0_0:\n        mov r0, #0x97\n        lsl r0, #0x2\n        mov r1, r12\n        strh r0, [r1, #0x8]\n_code0_1:\n        ldr r0, _data0_1\n        bl sub_0806F948\n        bl ResetPlayer\n        mov r0, r5\n        bl sub_08077698\n        b _code0_45\n_data0_1:\n        .4byte gPlayerEntity\n_code0_2:\n        mov r0, #0x80\n        lsl r0, #0x5\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        mov r1, r5\n        add r1, #0x40\n        mov r0, #0x1e\n        strb r0, [r1]\n        mov r0, #0xc\n        strb r0, [r3]\n        mov r1, #0x0\n        mov r2, #0x24\n        ldrsh r0, [r5, r2]\n        cmp r0, #0x0\n        bne _code0_3\n        mov r1, #0x1\n_code0_3:\n        mov r0, r5\n        bl sub_08070BEC\n        b _code0_45\n_code0_4:\n        mov r4, #0x80\n        lsl r4, #0xc\n        and r4, r1\n        cmp r4, #0x0\n        beq _code0_5\n        bl sub_08079938\n        b _code0_45\n_code0_5:\n        mov r0, r5\n        bl sub_080085B0\n        mov r0, r5\n        add r0, #0x40\n        strb r4, [r0]\n        bl sub_08078EFC\n        cmp r0, #0x0\n        beq _code0_6\n        b _code0_45\n_code0_6:\n        mov r0, r6\n        add r0, #0x26\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_12\n        ldrb r1, [r6, #0x2]\n        mov r2, #0xc0\n        mov r0, r2\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_12\n        ldrb r0, [r6, #0x3]\n        cmp r0, #0x0\n        bne _code0_7\n        mov r0, r6\n        add r0, #0x21\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_8\n_code0_7:\n        strh r2, [r5, #0x24]\n        b _code0_12\n_code0_8:\n        ldrb r0, [r6, #0x1b]\n        cmp r0, #0x0\n        beq _code0_9\n        mov r0, #0xe0\n        b _code0_11\n_code0_9:\n        ldrb r0, [r6, #0x1c]\n        cmp r0, #0x0\n        beq _code0_10\n        mov r0, #0x80\n        b _code0_11\n_code0_10:\n        mov r0, #0xa0\n        lsl r0, #0x1\n_code0_11:\n        strh r0, [r5, #0x24]\n_code0_12:\n        ldr r4, _data0_2\n        ldrb r0, [r4, #0x6]\n        mov r1, #0x80\n        orr r1, r0\n        strb r1, [r4, #0x6]\n        ldr r0, [r4, #0x30]\n        ldr r6, _data0_2+0x4\n        and r0, r6\n        cmp r0, #0x0\n        bne _code0_13\n        bl sub_0807A1B8\n_code0_13:\n        bl sub_08078EFC\n        cmp r0, #0x0\n        beq _code0_14\n        b _code0_45\n_code0_14:\n        ldrb r0, [r4, #0x2]\n        cmp r0, #0x0\n        beq _code0_15\n        b _code0_21\n_code0_15:\n        ldr r0, [r4, #0x30]\n        mov r1, #0x80\n        lsl r1, #0x3\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_16\n        b _code0_21\n_code0_16:\n        mov r0, r5\n        add r0, #0x42\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        bne _code0_19\n        bl sub_080782C0\n        cmp r0, #0x0\n        beq _code0_19\n        ldr r0, _data0_2+0x8\n        ldrb r0, [r0, #0x6]\n        cmp r0, #0x0\n        bne _code0_17\n        bl ResetPlayer\n_code0_17:\n        ldr r0, [r4, #0x30]\n        and r0, r6\n        cmp r0, #0x0\n        beq _code0_18\n        b _code0_45\n_code0_18:\n        bl sub_0807A1B8\n        bl sub_08078EFC\n        b _code0_45\n_data0_2:\n        .4byte gPlayerState\n        .4byte 0x10000002\n        .4byte gRoomVars\n_code0_19:\n        ldr r0, _data0_3\n        ldr r1, [r0, #0x30]\n        ldr r2, _data0_3+0x4\n        and r1, r2\n        add r0, #0xaa\n        ldrb r0, [r0]\n        orr r1, r0\n        cmp r1, #0x0\n        bne _code0_21\n        bl sub_08019840\n        cmp r0, #0xf\n        bls _code0_20\n        b _code0_45\n_code0_20:\n        lsl r0, #0x2\n        ldr r1, _data0_3+0x8\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_3:\n        .4byte gPlayerState\n        .4byte 0x41635\n        .4byte _other0_5\n        .4byte _case0_0\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _case0_1\n        .4byte _case0_3\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _code0_45\n        .4byte _case0_2\n        ldr r0, _data0_4\n        ldrb r1, [r0, #0x6]\n        mov r2, #0x80\n        eor r1, r2\n        strb r1, [r0, #0x6]\n        b _code0_21\n_data0_4:\n        .4byte gPlayerState\n        ldr r1, _data0_5\n        mov r0, #0x80\n        strb r0, [r1, #0x6]\n        b _code0_21\n_data0_5:\n        .4byte gPlayerState\n        ldrb r1, [r5, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r5, #0x10]\n        bl sub_080797EC\n        b _code0_45\n        ldr r0, _data0_6\n        ldrb r1, [r0, #0x6]\n        mov r2, #0x80\n        eor r1, r2\n        strb r1, [r0, #0x6]\n        bl sub_080797EC\n        b _code0_45\n_data0_6:\n        .4byte gPlayerState\n_code0_21:\n        mov r1, r5\n        add r1, #0x3c\n        mov r0, #0x0\n        strb r0, [r1]\n        mov r6, r5\n        add r6, #0x29\n        ldrb r1, [r6]\n        sub r0, #0x8\n        and r0, r1\n        mov r1, #0x4\n        orr r0, r1\n        strb r0, [r6]\n        mov r0, r5\n        bl sub_0807AC54\n        cmp r0, #0x0\n        beq _code0_22\n        b _code0_45\n_code0_22:\n        mov r0, r5\n        bl sub_08077698\n        bl sub_08078EFC\n        cmp r0, #0x0\n        beq _code0_23\n        b _code0_45\n_code0_23:\n        bl sub_080792D8\n        ldr r4, _data0_7\n        ldrb r1, [r4, #0x2]\n        ldrb r0, [r4, #0xa]\n        orr r0, r1\n        cmp r0, #0x0\n        bne _code0_25\n        bl sub_08079550\n        cmp r0, #0x0\n        beq _code0_24\n        b _code0_45\n_code0_24:\n        mov r0, r5\n        bl sub_08078F74\n        cmp r0, #0x0\n        beq _code0_25\n        b _code0_45\n_code0_25:\n        mov r0, r5\n        bl sub_08073904\n        bl sub_08078EFC\n        cmp r0, #0x0\n        beq _code0_26\n        b _code0_45\n_code0_26:\n        ldrb r2, [r4, #0x2]\n        cmp r2, #0x0\n        beq _code0_31\n        mov r1, r4\n        add r1, #0xa8\n        mov r0, #0x14\n        strb r0, [r1]\n        mov r0, #0xc0\n        and r0, r2\n        cmp r0, #0x0\n        bne _code0_28\n        mov r0, #0x7\n        and r0, r2\n        cmp r0, #0x3\n        beq _code0_27\n        mov r0, #0x20\n        and r0, r2\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x0\n        bne _code0_27\n        strh r0, [r5, #0x24]\n        mov r0, r5\n        bl sub_08008926\n        b _code0_28\n_data0_7:\n        .4byte gPlayerState\n_code0_27:\n        mov r0, #0xff\n        strb r0, [r5, #0x15]\n_code0_28:\n        bl sub_08079E08\n        mov r0, r5\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x2\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_29\n        b _code0_45\n_code0_29:\n        ldr r0, _data0_8\n        ldrb r0, [r0, #0x4]\n        cmp r0, #0x0\n        beq _code0_30\n        b _code0_45\n_code0_30:\n        mov r0, r5\n        bl UpdateAnimationSingleFrame\n        b _code0_45\n_data0_8:\n        .4byte gPlayerState\n_code0_31:\n        mov r0, r5\n        add r0, #0x42\n        ldrb r1, [r0]\n        mov r7, r0\n        cmp r1, #0x0\n        beq _code0_32\n        b _code0_43\n_code0_32:\n        mov r0, r4\n        add r0, #0x26\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_33\n        mov r1, r4\n        add r1, #0xa8\n        mov r0, #0x7\n        strb r0, [r1]\n        mov r0, r5\n        bl sub_0807ACCC\n        b _code0_40\n_code0_33:\n        ldr r0, [r4, #0x30]\n        mov r1, #0x80\n        lsl r1, #0x12\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_34\n        ldrb r0, [r6]\n        mov r1, #0x39\n        neg r1, r1\n        and r1, r0\n        mov r0, #0x8\n        orr r1, r0\n        strb r1, [r6]\n_code0_34:\n        ldrb r1, [r4, #0x1e]\n        mov r0, #0x40\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_35\n        mov r0, r5\n        bl sub_08008AA0\n        b _code0_38\n_code0_35:\n        ldrb r0, [r4, #0x12]\n        cmp r0, #0x17\n        bne _code0_36\n        mov r0, r5\n        bl sub_08008926\n        b _code0_38\n_code0_36:\n        cmp r0, #0x1\n        bne _code0_37\n        bl sub_08078F60\n        b _code0_38\n_code0_37:\n        mov r0, r5\n        bl sub_08008AA0\n_code0_38:\n        ldr r2, _data0_9\n        ldrb r1, [r2, #0x1b]\n        mov r0, #0x10\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_40\n        ldrb r3, [r2, #0xd]\n        strb r3, [r5, #0x15]\n        ldr r0, [r2, #0x30]\n        mov r1, #0x80\n        lsl r1, #0x3\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_40\n        mov r0, #0xc0\n        lsl r0, #0x2\n        strh r0, [r5, #0x24]\n        mov r0, #0x80\n        and r0, r3\n        cmp r0, #0x0\n        beq _code0_39\n        ldrb r1, [r5, #0x14]\n        mov r0, #0xe\n        and r0, r1\n        lsl r0, #0x2\n        strb r0, [r5, #0x15]\n_code0_39:\n        bl sub_0807A108\n_code0_40:\n        mov r4, #0x0\n        ldr r3, _data0_9\n        ldrb r2, [r3, #0x7]\n        ldrb r0, [r5, #0x15]\n        orr r0, r2\n        mov r1, #0x80\n        and r0, r1\n        ldrb r1, [r3, #0xa]\n        orr r0, r1\n        cmp r0, #0x0\n        bne _code0_42\n        mov r0, #0x10\n        and r0, r2\n        cmp r0, #0x0\n        bne _code0_42\n        mov r4, #0x1\n        ldrb r0, [r7]\n        cmp r0, #0x0\n        bne _code0_42\n        ldrb r1, [r3, #0x1e]\n        mov r0, #0x40\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_41\n        ldrb r0, [r3, #0x12]\n        cmp r0, #0x17\n        beq _code0_42\n_code0_41:\n        mov r4, #0x3\n_code0_42:\n        mov r0, r5\n        mov r1, r4\n        bl sub_08070BEC\n        mov r0, r5\n        bl sub_08008AC6\n        ldrb r0, [r7]\n        cmp r0, #0x0\n        bne _code0_45\n        ldr r1, _data0_9\n        ldrb r0, [r1, #0xb]\n        cmp r0, #0x0\n        bne _code0_45\n        ldrb r0, [r1, #0x12]\n        cmp r0, #0x1e\n        beq _code0_45\n        mov r0, r5\n        bl sub_0806F948\n        b _code0_45\n_data0_9:\n        .4byte gPlayerState\n_code0_43:\n        ldr r0, [r4, #0x2c]\n        cmp r0, #0x0\n        bne _code0_44\n        mov r0, r5\n        bl UpdateAnimationSingleFrame\n_code0_44:\n        mov r0, r4\n        add r0, #0x26\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_45\n        ldr r0, _data0_10\n        ldr r0, [r0]\n        mov r1, #0x7\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_45\n        mov r0, r5\n        bl CreateWaterTrace\n_code0_45:\n        pop {r4, r5, r6, r7, pc}\n_data0_10:\n        .4byte gScreenTransition",
      "score": "536",
      "id": 141
    },
    {
      "name": "PortalShrinkUpdate",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"textbox.h\"\n#include \"utils.h\"\n#include \"area.h\"\n#include \"save.h\"\n#include \"game.h\"\n#include \"object.h\"\n#include \"functions.h\"\n#include \"object.h\"\n\nstatic void (*const sPlayerActions[])(Entity*);\nextern void (*const gUnk_0811BA60[])(Entity*);\nextern void (*const gUnk_0811BA68[])(Entity*);\nextern void (*const gUnk_0811BA74[])(Entity*);\nextern void (*const gUnk_0811BA7C[])(Entity*);\nextern void (*const gUnk_0811BA88[])(Entity*);\nextern void (*const gUnk_0811BA94[])(Entity*);\nextern void (*const gUnk_0811BA9C[])(Entity*);\nextern void (*const gUnk_0811BAD4[])(Entity*);\nextern void (*const gUnk_0811BAE4[])(Entity*);\nextern void (*const gUnk_0811BB3C[])(Entity*);\n\nextern void RespawnPlayer();\nextern void sub_080797EC();\nextern void sub_08079E08();\nextern void sub_08078F60();\nextern void sub_0806F948();\nextern void sub_08077698();\nextern void sub_0805E544();\nextern void sub_080717F8();\nextern void DoExitTransition();\nextern void UnfreezeTime();\nextern void sub_08071A6C();\nextern void sub_08052BB8();\nextern void sub_08079258();\nextern void sub_08071AF0();\nextern void sub_080728AC();\nextern void sub_0807A298();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void sub_080792D8();\nextern Entity* CreatePlayerBomb();\nextern void sub_08072008();\nextern void sub_080791BC();\nextern void sub_08072168();\nextern u32 sub_0806F854();\nextern u32 sub_08019840();\nextern void sub_08072260();\nextern void sub_08079744();\nextern void sub_0807AE20();\nextern u32 sub_0807A894();\nextern u32 sub_080797C4();\nextern u32 Random();\nextern u32 sub_0807AC54();\nextern void sub_0800892E();\nextern void sub_08078F24();\nextern void sub_0807B068();\nextern u32 sub_080001DA();\nextern void sub_08072A60();\nextern u32 sub_0807A2F8();\nextern u32 sub_08052620();\nextern u32 sub_0806F730();\nextern u32 sub_08007DD6();\nextern u32 sub_0807A1E8();\nextern void sub_08073094();\nextern void sub_08074808();\nextern void sub_0805E4E0();\n\ntypedef struct {\n    u8 frame;\n    u8 dummy;\n    u16 speed;\n} PushFrames;\n\nextern PushFrames gUnk_0811BAF0[];\n\nextern Hitbox gUnk_08114F88;\nextern ScreenTransitionData gUnk_0813AB58;\n\n// end of existing headers\n\nvoid PortalShrinkUpdate(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start PortalShrinkUpdate\nPortalShrinkUpdate:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r5, r0\n        add r0, #0x81\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_0\n        mov r1, r5\n        add r1, #0x80\n        ldr r0, [r1]\n        add r0, #0x80\n        lsl r0, #0x14\n        lsr r7, r0, #0x17\n        mov r4, r1\n        b _code0_1\n_code0_0:\n        mov r4, r5\n        add r4, #0x80\n        ldrb r1, [r4]\n        lsr r1, #0x6\n        mov r0, #0x3\n        eor r1, r0\n        add r1, #0x1\n        mov r0, #0x10\n        bl __divsi3\n        asr r7, r0, #0x1\n_code0_1:\n        mov r0, r5\n        add r0, #0x84\n        ldr r3, [r0]\n        mov r1, #0x80\n        lsl r1, #0x1\n        mov r2, r0\n        cmp r3, r1\n        bls _code0_2\n        mov r0, r3\n        add r0, #0x80\n        lsl r0, #0x14\n        lsr r3, r0, #0x17\n        b _code0_4\n_code0_2:\n        cmp r3, r1\n        bne _code0_3\n        mov r3, #0x10\n        b _code0_4\n_code0_3:\n        ldr r1, _data0_0\n        lsr r0, r3, #0x5\n        add r0, r1\n        ldrb r3, [r0]\n_code0_4:\n        mov r0, #0x80\n        lsl r0, #0x9\n        mov r8, r0\n        mov r0, r5\n        add r0, #0x5a\n        ldrb r0, [r0]\n        cmp r0, #0x2\n        beq _code0_8\n        cmp r0, #0x2\n        bgt _code0_5\n        cmp r0, #0x1\n        beq _code0_6\n        b _code0_18\n_data0_0:\n        .4byte gUnk_0811BABC\n_code0_5:\n        cmp r0, #0x3\n        beq _code0_13\n        b _code0_18\n_code0_6:\n        mov r1, #0x29\n        add r1, r5\n        mov r12, r1\n        ldrb r1, [r1]\n        mov r0, #0x39\n        neg r0, r0\n        and r0, r1\n        mov r1, r12\n        strb r0, [r1]\n        ldr r0, [r4]\n        cmp r0, #0x80\n        bls _code0_7\n        sub r0, r7\n        str r0, [r4]\n_code0_7:\n        lsl r1, r3, #0x1\n        ldr r0, [r2]\n        add r0, r1\n        str r0, [r2]\n        mov r0, r8\n        lsl r1, r0, #0x1\n        ldr r0, [r5, #0x30]\n        add r0, r1\n        str r0, [r5, #0x30]\n        b _code0_18\n_code0_8:\n        ldr r0, [r4]\n        add r0, r7\n        str r0, [r4]\n        ldr r1, [r2]\n        mov r6, #0x80\n        lsl r6, #0x1\n        cmp r1, r6\n        bls _code0_10\n        ldr r0, _data0_1\n        cmp r1, r0\n        bhi _code0_9\n        lsr r3, #0x1\n_code0_9:\n        sub r0, r1, r3\n        cmp r0, #0xff\n        bhi _code0_11\n        str r6, [r2]\n        b _code0_12\n_data0_1:\n        .4byte 0x17f\n_code0_10:\n        cmp r1, #0x80\n        bls _code0_12\n        sub r0, r1, r3\n_code0_11:\n        str r0, [r2]\n_code0_12:\n        ldr r0, [r5, #0x34]\n        mov r1, r8\n        b _code0_17\n_code0_13:\n        ldr r0, [r4]\n        ldr r6, _data0_2\n        cmp r0, r6\n        bhi _code0_14\n        add r0, r7\n        str r0, [r4]\n_code0_14:\n        ldr r1, [r2]\n        cmp r1, r6\n        bls _code0_15\n        mov r0, #0x8\n        strb r0, [r5, #0xe]\n        mov r0, #0x1e\n        strb r0, [r5, #0xf]\n        mov r0, #0x6\n        strb r0, [r5, #0xd]\n        b _code0_16\n_data0_2:\n        .4byte 0x33f\n_code0_15:\n        lsl r0, r3, #0x1\n        add r0, r1, r0\n        str r0, [r2]\n_code0_16:\n        mov r0, r8\n        lsl r1, r0, #0x1\n        ldr r0, [r5, #0x34]\n_code0_17:\n        sub r0, r1\n        str r0, [r5, #0x34]\n_code0_18:\n        ldr r1, [r4]\n        ldr r2, [r2]\n        mov r0, r5\n        mov r3, #0x0\n        bl sub_0805EC9C\n        mov r0, r5\n        bl UpdateAnimationSingleFrame\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "172",
      "id": 142
    },
    {
      "name": "sub_08070DC4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"textbox.h\"\n#include \"utils.h\"\n#include \"area.h\"\n#include \"save.h\"\n#include \"game.h\"\n#include \"object.h\"\n#include \"functions.h\"\n#include \"object.h\"\n\nstatic void (*const sPlayerActions[])(Entity*);\nextern void (*const gUnk_0811BA60[])(Entity*);\nextern void (*const gUnk_0811BA68[])(Entity*);\nextern void (*const gUnk_0811BA74[])(Entity*);\nextern void (*const gUnk_0811BA7C[])(Entity*);\nextern void (*const gUnk_0811BA88[])(Entity*);\nextern void (*const gUnk_0811BA94[])(Entity*);\nextern void (*const gUnk_0811BA9C[])(Entity*);\nextern void (*const gUnk_0811BAD4[])(Entity*);\nextern void (*const gUnk_0811BAE4[])(Entity*);\nextern void (*const gUnk_0811BB3C[])(Entity*);\n\nextern void RespawnPlayer();\nextern void sub_080797EC();\nextern void sub_08079E08();\nextern void sub_08078F60();\nextern void sub_0806F948();\nextern void sub_08077698();\nextern void sub_0805E544();\nextern void sub_080717F8();\nextern void DoExitTransition();\nextern void UnfreezeTime();\nextern void sub_08071A6C();\nextern void sub_08052BB8();\nextern void sub_08079258();\nextern void sub_08071AF0();\nextern void sub_080728AC();\nextern void sub_0807A298();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void sub_080792D8();\nextern Entity* CreatePlayerBomb();\nextern void sub_08072008();\nextern void sub_080791BC();\nextern void sub_08072168();\nextern u32 sub_0806F854();\nextern u32 sub_08019840();\nextern void sub_08072260();\nextern void sub_08079744();\nextern void sub_0807AE20();\nextern u32 sub_0807A894();\nextern u32 sub_080797C4();\nextern u32 Random();\nextern u32 sub_0807AC54();\nextern void sub_0800892E();\nextern void sub_08078F24();\nextern void sub_0807B068();\nextern u32 sub_080001DA();\nextern void sub_08072A60();\nextern u32 sub_0807A2F8();\nextern u32 sub_08052620();\nextern u32 sub_0806F730();\nextern u32 sub_08007DD6();\nextern u32 sub_0807A1E8();\nextern void sub_08073094();\nextern void sub_08074808();\nextern void sub_0805E4E0();\n\ntypedef struct {\n    u8 frame;\n    u8 dummy;\n    u16 speed;\n} PushFrames;\n\nextern PushFrames gUnk_0811BAF0[];\n\nextern Hitbox gUnk_08114F88;\nextern ScreenTransitionData gUnk_0813AB58;\n\n// end of existing headers\n\nvoid sub_08070DC4(Entity* this) {\n    UpdateAnimationSingleFrame(this);\n    sub_080085B0(this);\n    sub_08079E08();\n    sub_0807A1B8();\n\n    if (sub_08078EFC() || sub_08003FC4(this, 0x2000))\n        return;\n\n    gPlayerState.jumpStatus = 0;\n\n    if (sub_08078EFC() || sub_08079D48())\n        return;\n\n    if (gPlayerState.swimState != 0) {\n        gPlayerState.jumpStatus = 0;\n        sub_080791D0();\n        return;\n    }\n\n    if (--this->actionDelay != 0xFF) {\n        this->field_0x20 = 0x10000;\n        return;\n    }\n\n    this->flags |= 0x80;\n\n    if ((gPlayerState.field_0x14 == 0) && sub_08008B22()) {\n        gPlayerState.field_0x10[1] = 7;\n        sub_08079938();\n        sub_080791BC();\n        return;\n    }\n\n    this->spriteIndex = 1;\n    this->actionDelay = 8;\n    this->subAction++;\n\n    if ((gPlayerState.flags.all & 0x80) == 0)\n        gPlayerState.field_0x8 = 0x100;\n}\n",
      "asmCode": "thumb_func_start sub_08070DC4\nsub_08070DC4:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        bl UpdateAnimationSingleFrame\n        mov r0, r4\n        bl sub_080085B0\n        bl sub_08079E08\n        bl sub_0807A1B8\n        bl sub_08078EFC\n        cmp r0, #0x0\n        bne _code0_4\n        mov r1, #0x80\n        lsl r1, #0x6\n        mov r0, r4\n        bl sub_08003FC4\n        cmp r0, #0x0\n        bne _code0_4\n        ldr r6, _data0_0\n        strb r0, [r6, #0x2]\n        bl sub_08078EFC\n        mov r5, r0\n        cmp r5, #0x0\n        bne _code0_4\n        bl sub_08079D48\n        cmp r0, #0x0\n        bne _code0_0\n        mov r0, r6\n        add r0, #0x26\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_1\n_code0_0:\n        strb r5, [r6, #0x2]\n        bl sub_080791D0\n        b _code0_4\n_data0_0:\n        .4byte gPlayerState\n_code0_1:\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0xff\n        beq _code0_2\n        mov r0, #0x80\n        lsl r0, #0x9\n        str r0, [r4, #0x20]\n        b _code0_4\n_code0_2:\n        ldrb r0, [r4, #0x10]\n        mov r1, #0x80\n        orr r0, r1\n        strb r0, [r4, #0x10]\n        ldrb r0, [r6, #0x14]\n        cmp r0, #0x0\n        bne _code0_3\n        bl sub_08008B22\n        cmp r0, #0x0\n        beq _code0_3\n        mov r0, #0x7\n        strb r0, [r6, #0x11]\n        bl sub_08079938\n        bl sub_080791BC\n        b _code0_4\n_code0_3:\n        mov r0, #0x1\n        strh r0, [r4, #0x12]\n        mov r0, #0x8\n        strb r0, [r4, #0xe]\n        ldrb r0, [r4, #0xd]\n        add r0, #0x1\n        strb r0, [r4, #0xd]\n        ldr r2, _data0_1\n        ldr r0, [r2, #0x30]\n        mov r1, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_4\n        mov r0, #0x80\n        lsl r0, #0x1\n        strh r0, [r2, #0x8]\n_code0_4:\n        pop {r4, r5, r6, pc}\n_data0_1:\n        .4byte gPlayerState",
      "score": "87",
      "id": 143
    },
    {
      "name": "sub_08072D54",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"entity.h\"\n#include \"player.h\"\n#include \"textbox.h\"\n#include \"utils.h\"\n#include \"area.h\"\n#include \"save.h\"\n#include \"game.h\"\n#include \"object.h\"\n#include \"functions.h\"\n#include \"object.h\"\n\nstatic void (*const sPlayerActions[])(Entity*);\nextern void (*const gUnk_0811BA60[])(Entity*);\nextern void (*const gUnk_0811BA68[])(Entity*);\nextern void (*const gUnk_0811BA74[])(Entity*);\nextern void (*const gUnk_0811BA7C[])(Entity*);\nextern void (*const gUnk_0811BA88[])(Entity*);\nextern void (*const gUnk_0811BA94[])(Entity*);\nextern void (*const gUnk_0811BA9C[])(Entity*);\nextern void (*const gUnk_0811BAD4[])(Entity*);\nextern void (*const gUnk_0811BAE4[])(Entity*);\nextern void (*const gUnk_0811BB3C[])(Entity*);\n\nextern void RespawnPlayer();\nextern void sub_080797EC();\nextern void sub_08079E08();\nextern void sub_08078F60();\nextern void sub_0806F948();\nextern void sub_08077698();\nextern void sub_0805E544();\nextern void sub_080717F8();\nextern void DoExitTransition();\nextern void UnfreezeTime();\nextern void sub_08071A6C();\nextern void sub_08052BB8();\nextern void sub_08079258();\nextern void sub_08071AF0();\nextern void sub_080728AC();\nextern void sub_0807A298();\nextern u32 sub_08079B24();\nextern void sub_08079708();\nextern void sub_080792D8();\nextern Entity* CreatePlayerBomb();\nextern void sub_08072008();\nextern void sub_080791BC();\nextern void sub_08072168();\nextern u32 sub_0806F854();\nextern u32 sub_08019840();\nextern void sub_08072260();\nextern void sub_08079744();\nextern void sub_0807AE20();\nextern u32 sub_0807A894();\nextern u32 sub_080797C4();\nextern u32 Random();\nextern u32 sub_0807AC54();\nextern void sub_0800892E();\nextern void sub_08078F24();\nextern void sub_0807B068();\nextern u32 sub_080001DA();\nextern void sub_08072A60();\nextern u32 sub_0807A2F8();\nextern u32 sub_08052620();\nextern u32 sub_0806F730();\nextern u32 sub_08007DD6();\nextern u32 sub_0807A1E8();\nextern void sub_08073094();\nextern void sub_08074808();\nextern void sub_0805E4E0();\n\ntypedef struct {\n    u8 frame;\n    u8 dummy;\n    u16 speed;\n} PushFrames;\n\nextern PushFrames gUnk_0811BAF0[];\n\nextern Hitbox gUnk_08114F88;\nextern ScreenTransitionData gUnk_0813AB58;\n\n// end of existing headers\n\nvoid sub_08072D54(Entity* this) {\n    u32 bVar1;\n    u32 uVar2;\n    u32 iVar3;\n\n    UpdateAnimationSingleFrame(this);\n    sub_0806F854(this, 0, -12);\n    if (this->actionDelay != 0) {\n        sub_0806F69C(this);\n    } else {\n        uVar2 = sub_0806F730(this);\n        uVar2 = GetTileType(uVar2, this->collisionLayer);\n        switch (this->field_0xf) {\n            case 0:\n                if (sub_08007DD6(uVar2, gUnk_0811BBD4[gPlayerEntity.animationState >> 1])) {\n                    this->actionDelay = 1;\n                    this->field_0xf = 1;\n                }\n                break;\n            case 1:\n                if (sub_08007DD6(uVar2, gUnk_0811BBD4[gPlayerEntity.animationState >> 1])) {\n                    this->actionDelay = 1;\n                    this->field_0xf = 1;\n                }\n                break;\n            case 3:\n                if (this->actionDelay == 0) {\n                    sub_08079E08();\n                } else {\n                    sub_0806F69C(this);\n                }\n                break;\n            case 2:\n                this->animationState ^= 4;\n                if (sub_08007DD6(uVar2, gUnk_0811BBD4[gPlayerEntity.animationState >> 1]) != 0) {\n                    this->actionDelay = 1;\n                    this->field_0xf = 3;\n                }\n                break;\n            default:\n                this->animationState ^= 4;\n                if (sub_08007DD6(uVar2, gUnk_0811BBD4[gPlayerEntity.animationState >> 1])) {\n                    this->field_0xf = 4;\n                } else {\n                    this->actionDelay = 1;\n                }\n                break;\n        }\n\n        if (this->actionDelay != 0) {\n            sub_0806F69C(this);\n        } else {\n            sub_08079E08();\n        }\n        this->actionDelay = 0;\n    }\n\n    this->actionDelay = bVar1;\n    if (!sub_08003FC4(this, 0x2000)) {\n        this->flags |= 0x80;\n        if (this->collisionLayer == 1) {\n            sub_0800455E(this);\n        } else {\n            sub_08004542(this);\n        }\n        sub_08008790(this, 7);\n        if (gPlayerState.field_0x14 != 0) {\n            if (sub_08008B22() == 0) {\n                gPlayerState.field_0x10[1] = 7;\n                if (!(gPlayerState.flags.all & 0x80)) {\n                    sub_080791BC();\n                }\n            }\n        } else {\n            if ((gPlayerState.flags.all & 8)) {\n                gPlayerState.field_0x8 = 0x424;\n            } else {\n                gPlayerState.field_0x8 = 0x820;\n            }\n            this->actionDelay = 6;\n            this->subAction = 3;\n            this->field_0x42 = 0;\n            SoundReq(0x7d);\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08072D54\nsub_08072D54:\n        push {r4, r5, lr}\n        mov r4, r0\n        bl UpdateAnimationSingleFrame\n        mov r2, #0xc\n        neg r2, r2\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_0806F854\n        ldrb r0, [r4, #0xe]\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, r4\n        bl sub_0806F69C\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        b _code0_14\n_code0_0:\n        mov r0, r4\n        bl sub_0806F730\n        mov r1, r4\n        add r1, #0x38\n        ldrb r1, [r1]\n        bl GetTileType\n        mov r2, r0\n        ldrb r5, [r4, #0xf]\n        cmp r5, #0x1\n        beq _code0_3\n        cmp r5, #0x1\n        bgt _code0_1\n        cmp r5, #0x0\n        beq _code0_2\n        b _code0_11\n_code0_1:\n        cmp r5, #0x2\n        beq _code0_5\n        cmp r5, #0x3\n        beq _code0_7\n        b _code0_11\n_code0_2:\n        ldr r1, _data0_0\n        ldr r0, _data0_0+0x4\n        ldrb r0, [r0, #0x14]\n        lsr r0, #0x1\n        lsl r0, #0x2\n        add r0, r1\n        ldr r1, [r0]\n        mov r0, r2\n        bl sub_08007DD6\n        cmp r0, #0x0\n        beq _code0_11\n        mov r0, #0x1\n        strb r0, [r4, #0xe]\n        strb r0, [r4, #0xf]\n        b _code0_11\n_data0_0:\n        .4byte gUnk_0811BBD4\n        .4byte gPlayerEntity\n_code0_3:\n        ldr r1, _data0_1\n        ldr r0, _data0_1+0x4\n        ldrb r0, [r0, #0x14]\n        lsr r0, #0x1\n        lsl r0, #0x2\n        add r0, r1\n        ldr r1, [r0]\n        mov r0, r2\n        bl sub_08007DD6\n        cmp r0, #0x0\n        beq _code0_4\n        strb r5, [r4, #0xe]\n        b _code0_11\n_data0_1:\n        .4byte gUnk_0811BBD4\n        .4byte gPlayerEntity\n_code0_4:\n        mov r0, #0x2\n        strb r0, [r4, #0xf]\n        b _code0_11\n_code0_5:\n        ldrb r0, [r4, #0x14]\n        mov r5, #0x4\n        eor r0, r5\n        strb r0, [r4, #0x14]\n        ldr r1, _data0_2\n        ldr r0, _data0_2+0x4\n        ldrb r0, [r0, #0x14]\n        lsr r0, #0x1\n        lsl r0, #0x2\n        add r0, r1\n        ldr r1, [r0]\n        mov r0, r2\n        bl sub_08007DD6\n        cmp r0, #0x0\n        beq _code0_6\n        mov r0, #0x1\n        strb r0, [r4, #0xe]\n        mov r0, #0x3\n        strb r0, [r4, #0xf]\n_code0_6:\n        ldrb r0, [r4, #0x14]\n        eor r0, r5\n        b _code0_10\n_data0_2:\n        .4byte gUnk_0811BBD4\n        .4byte gPlayerEntity\n_code0_7:\n        ldrb r0, [r4, #0x14]\n        mov r1, #0x4\n        eor r0, r1\n        strb r0, [r4, #0x14]\n        ldr r1, _data0_3\n        ldr r0, _data0_3+0x4\n        ldrb r0, [r0, #0x14]\n        lsr r0, #0x1\n        lsl r0, #0x2\n        add r0, r1\n        ldr r1, [r0]\n        mov r0, r2\n        bl sub_08007DD6\n        cmp r0, #0x0\n        beq _code0_8\n        mov r0, #0x1\n        strb r0, [r4, #0xe]\n        b _code0_9\n_data0_3:\n        .4byte gUnk_0811BBD4\n        .4byte gPlayerEntity\n_code0_8:\n        mov r0, #0x4\n        strb r0, [r4, #0xf]\n_code0_9:\n        ldrb r0, [r4, #0x14]\n        mov r1, #0x4\n        eor r0, r1\n_code0_10:\n        strb r0, [r4, #0x14]\n_code0_11:\n        ldrb r0, [r4, #0xe]\n        cmp r0, #0x0\n        beq _code0_12\n        mov r0, r4\n        bl sub_0806F69C\n        b _code0_13\n_code0_12:\n        bl sub_08079E08\n_code0_13:\n        mov r0, #0x0\n_code0_14:\n        strb r0, [r4, #0xe]\n        mov r1, #0x80\n        lsl r1, #0x6\n        mov r0, r4\n        bl sub_08003FC4\n        cmp r0, #0x0\n        bne _code0_20\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x80\n        orr r0, r1\n        strb r0, [r4, #0x10]\n        mov r0, r4\n        add r0, #0x38\n        ldrb r0, [r0]\n        cmp r0, #0x1\n        bne _code0_15\n        mov r0, r4\n        bl sub_0800455E\n        b _code0_16\n_code0_15:\n        mov r0, r4\n        bl sub_08004542\n_code0_16:\n        mov r0, r4\n        mov r1, #0x7\n        bl sub_08008790\n        ldr r5, _data0_4\n        ldrb r0, [r5, #0x14]\n        cmp r0, #0x0\n        beq _code0_17\n        bl sub_08008B22\n        cmp r0, #0x0\n        beq _code0_20\n        mov r0, #0x7\n        strb r0, [r5, #0x11]\n        ldr r0, [r5, #0x30]\n        mov r1, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_20\n        bl sub_080791BC\n        b _code0_20\n_data0_4:\n        .4byte gPlayerState\n_code0_17:\n        ldr r0, [r5, #0x30]\n        mov r1, #0x8\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_18\n        ldr r0, _data0_5\n        b _code0_19\n_data0_5:\n        .4byte 0x424\n_code0_18:\n        mov r0, #0x82\n        lsl r0, #0x4\n_code0_19:\n        strh r0, [r5, #0x8]\n        mov r1, #0x0\n        mov r0, #0x6\n        strb r0, [r4, #0xe]\n        mov r0, #0x3\n        strb r0, [r4, #0xd]\n        mov r0, r4\n        add r0, #0x42\n        strb r1, [r0]\n        mov r0, #0x7d\n        bl SoundReq\n_code0_20:\n        pop {r4, r5, pc}",
      "score": "221",
      "id": 144
    },
    {
      "name": "sub_0806076C",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"script.h\"\n#include \"flags.h\"\n\nextern void sub_08060528(Entity*);\nextern void sub_0806EE04(Entity*, void*, u32);\nextern void sub_080604DC(Entity*);\nextern void sub_0806EE20(Entity*);\nextern void sub_080606D8(Entity*);\nextern void sub_080606C0(Entity*);\n\ntypedef struct {\n    s16 x;\n    s16 y;\n} Coords16;\n\nextern Coords16 gUnk_0810A66C[];\nextern s8* gUnk_0810A918[];\n\nextern void (*const gUnk_0810AA24[])(Entity*);\nextern Dialog gUnk_0810AA30[];\n\n// end of existing headers\n\nvoid sub_0806076C(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806076C\nsub_0806076C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x8\n        mov r7, r0\n        mov r9, r1\n        ldr r0, [r7, #0x34]\n        cmp r0, #0x0\n        bge _code0_0\n        ldr r1, _data0_0\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n        b _code0_6\n_data0_0:\n        .4byte gActiveScriptInfo\n_code0_0:\n        mov r4, r7\n        add r4, #0x69\n        ldrb r0, [r4]\n        add r0, #0x1\n        strb r0, [r4]\n        mov r5, r7\n        add r5, #0x38\n        mov r0, #0x1\n        strb r0, [r5]\n        mov r0, r7\n        bl sub_080606C0\n        ldr r1, _data0_1\n        mov r2, r7\n        add r2, #0x68\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        lsl r0, #0x2\n        add r0, r1\n        ldr r6, [r0]\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        add r6, r0\n        mov r10, r4\n        mov r8, r2\n_code0_1:\n        ldrb r0, [r6]\n        add r0, #0x5\n        lsl r0, #0x18\n        asr r0, #0x18\n        cmp r0, #0x5\n        bls _code0_2\n        b _code0_6\n_code0_2:\n        lsl r0, #0x2\n        ldr r1, _data0_1+0x4\n        add r0, r1\n        ldr r0, [r0]\n        mov pc, r0\n_data0_1:\n        .4byte gUnk_0810A918\n        .4byte _other0_1\n        .4byte _case0_5\n        .4byte _case0_4\n        .4byte _case0_3\n        .4byte _case0_2\n        .4byte _case0_1\n        .4byte _case0_0\n        add r6, #0x1\n        mov r5, #0x0\n        ldrsb r5, [r6, r5]\n        add r6, #0x1\n        bl Random\n        mov r1, r5\n        bl __modsi3\n        add r0, r6, r0\n        ldrb r0, [r0]\n        mov r1, #0x0\n        mov r2, r8\n        strb r0, [r2]\n        mov r3, r10\n        strb r1, [r3]\n        b _code0_6\n        mov r1, r7\n        add r1, #0x6a\n        mov r0, #0x96\n        lsl r0, #0x1\n        strh r0, [r1]\n        b _code0_5\n        mov r0, #0x1\n        strb r0, [r5]\n        b _code0_5\n        mov r0, #0x2\n        strb r0, [r5]\n        b _code0_5\n        mov r0, #0x1e\n        mov r4, r9\n        strh r0, [r4, #0x10]\n        ldrb r1, [r7, #0x18]\n        sub r0, #0x22\n        and r0, r1\n        strb r0, [r7, #0x18]\n        b _code0_5\n        add r6, #0x1\n        mov r5, #0x0\n        ldrsb r5, [r6, r5]\n        add r6, #0x1\n        bl Random\n        mov r1, r5\n        bl __modsi3\n        str r0, [sp, #0x4]\n        mov r2, #0x0\n        cmp r2, r5\n        bhs _code0_4\n        ldr r0, _data0_2\n        mov r9, r0\n_code0_3:\n        ldr r1, [sp, #0x4]\n        add r0, r6, r1\n        ldrb r0, [r0]\n        mov r3, r8\n        strb r0, [r3]\n        mov r0, #0x0\n        ldrsb r0, [r3, r0]\n        lsl r0, #0x2\n        ldr r4, _data0_2+0x4\n        add r0, r4\n        ldr r0, [r0]\n        mov r1, #0x0\n        ldrsb r1, [r0, r1]\n        lsl r1, #0x2\n        ldr r0, _data0_2+0x8\n        add r1, r0\n        ldrh r0, [r1]\n        mov r3, r9\n        ldrh r3, [r3, #0x6]\n        add r0, r3\n        strh r0, [r7, #0x2e]\n        ldrh r0, [r1, #0x2]\n        mov r4, r9\n        ldrh r4, [r4, #0x8]\n        add r0, r4\n        strh r0, [r7, #0x32]\n        mov r0, r7\n        str r2, [sp]\n        bl sub_080040A8\n        cmp r0, #0x0\n        beq _code0_4\n        ldr r0, [sp, #0x4]\n        add r0, #0x1\n        mov r1, r5\n        bl __modsi3\n        str r0, [sp, #0x4]\n        ldr r2, [sp]\n        add r2, #0x1\n        cmp r2, r5\n        blo _code0_3\n_code0_4:\n        mov r0, #0x0\n        mov r1, r10\n        strb r0, [r1]\n        b _code0_6\n_data0_2:\n        .4byte gRoomControls\n        .4byte gUnk_0810A918\n        .4byte gUnk_0810A66C\n_code0_5:\n        mov r2, r10\n        ldrb r0, [r2]\n        add r0, #0x1\n        strb r0, [r2]\n        add r6, #0x1\n        b _code0_1\n_code0_6:\n        add sp, #0x8\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}",
      "score": "179",
      "id": 145
    },
    {
      "name": "sub_080608E4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"player.h\"\n#include \"room.h\"\n#include \"structures.h\"\n#include \"save.h\"\n#include \"script.h\"\n#include \"flags.h\"\n\nextern void sub_08060528(Entity*);\nextern void sub_0806EE04(Entity*, void*, u32);\nextern void sub_080604DC(Entity*);\nextern void sub_0806EE20(Entity*);\nextern void sub_080606D8(Entity*);\nextern void sub_080606C0(Entity*);\n\ntypedef struct {\n    s16 x;\n    s16 y;\n} Coords16;\n\nextern Coords16 gUnk_0810A66C[];\nextern s8* gUnk_0810A918[];\n\nextern void (*const gUnk_0810AA24[])(Entity*);\nextern Dialog gUnk_0810AA30[];\n\n// end of existing headers\n\nvoid sub_080608E4(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_080608E4\nsub_080608E4:\n        push {r4, r5, r6, r7, lr}\n        mov r4, r0\n        mov r5, r1\n        mov r0, #0x0\n        str r0, [r5, #0x14]\n        ldr r0, [r4, #0x34]\n        cmp r0, #0x0\n        blt _code0_2\n        mov r0, r4\n        add r0, #0x38\n        ldrb r1, [r0]\n        ldr r6, _data0_0\n        cmp r1, #0x1\n        bne _code0_0\n        mov r0, r6\n        add r0, #0x38\n        ldrb r0, [r0]\n        cmp r0, #0x2\n        beq _code0_2\n_code0_0:\n        cmp r1, #0x2\n        bne _code0_1\n        mov r0, r6\n        add r0, #0x38\n        ldrb r0, [r0]\n        cmp r0, #0x1\n        beq _code0_2\n_code0_1:\n        ldr r2, [r5, #0x4]\n        lsl r2, #0x4\n        ldrb r0, [r4, #0x14]\n        lsr r0, #0x1\n        lsl r0, #0x2\n        ldr r1, _data0_0+0x4\n        add r0, r1\n        add r2, r0\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        add r1, r0\n        mov r7, #0x32\n        ldrsh r3, [r4, r7]\n        mov r0, #0x1\n        ldrsb r0, [r2, r0]\n        add r3, r0\n        mov r7, #0x2e\n        ldrsh r0, [r6, r7]\n        sub r1, r0, r1\n        mov r7, #0x32\n        ldrsh r0, [r6, r7]\n        sub r3, r0, r3\n        mov r0, #0x2\n        ldrsb r0, [r2, r0]\n        add r1, r0\n        ldrb r2, [r2, #0x3]\n        lsl r2, #0x18\n        asr r2, #0x18\n        add r3, r2\n        lsl r0, #0x1\n        cmp r0, r1\n        bls _code0_2\n        lsl r0, r2, #0x1\n        cmp r0, r3\n        bls _code0_2\n        mov r0, #0x1\n        str r0, [r5, #0x14]\n        mov r1, r4\n        add r1, #0x6a\n        ldrh r0, [r1]\n        add r0, #0x2\n        strh r0, [r1]\n_code0_2:\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gPlayerEntity\n        .4byte gUnk_0810AA70",
      "score": "79",
      "id": 146
    },
    {
      "name": "sub_080AA320",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"game.h\"\n\nextern void (*const gUnk_08129C7C[])(Entity*);\n\nextern void (*const gUnk_08129C90[])(Entity*);\nvoid sub_080AA1D8(Entity*);\n\nvoid sub_080AA270(Entity*);\n\nbool32 sub_080AA2E0(Entity*);\nvoid sub_080AA320(Entity*);\n\nvoid sub_080AA3E0(Entity*, u32);\nbool32 sub_080AA374(Entity*);\n\nextern u8 gUnk_08129CA4[];\nextern Hitbox* gUnk_08129CF4[];\nextern u8 gUnk_08129CAC[];\n\nextern Entity* sub_08049DF4(u32);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\n\nextern s32 sub_080AF090(Entity*);\n\nextern Hitbox gUnk_080FD150;\n\nextern s8 gUnk_08129D14[];\nextern u32 sub_0806F824(Entity*, Entity*, u32, u32);\n\n// end of existing headers\n\nvoid sub_080AA320(Entity* this) {\n    u32 uVar2;\n    Entity* parent;\n\n    parent = this->parent;\n    this->action = 2;\n    this->field_0x82.HALF.LO = 1;\n    this->field_0xf = 0;\n    parent->action = 2;\n    parent->field_0xf = 0x30;\n    parent->field_0x80.HWORD = 0x50;\n    parent->speed = 0;\n    parent->direction = sub_08049F84(parent, 0);\n    // TODO regalloc\n    uVar2 = parent->direction + 4;\n    this->animationState = Direction8Round(uVar2) >> 2;\n    parent->animationState = DirectionRound(uVar2) >> 2;\n    sub_080AA3E0(parent, 1);\n    sub_080AA1D8(this);\n}\n",
      "asmCode": "thumb_func_start sub_080AA320\nsub_080AA320:\n        push {r4, r5, lr}\n        mov r5, r0\n        ldr r4, [r5, #0x50]\n        mov r2, #0x0\n        mov r1, #0x2\n        strb r1, [r5, #0xc]\n        mov r3, r5\n        add r3, #0x82\n        mov r0, #0x1\n        strb r0, [r3]\n        strb r2, [r5, #0xf]\n        strb r1, [r4, #0xc]\n        mov r0, #0x30\n        strb r0, [r4, #0xf]\n        mov r1, r4\n        add r1, #0x80\n        mov r0, #0x50\n        strh r0, [r1]\n        strh r2, [r4, #0x24]\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_08049F84\n        strb r0, [r4, #0x15]\n        ldrb r0, [r4, #0x15]\n        add r0, #0x4\n        mov r1, #0x1c\n        and r0, r1\n        lsr r1, r0, #0x2\n        strb r1, [r5, #0x14]\n        mov r1, #0x18\n        and r0, r1\n        lsr r0, #0x2\n        strb r0, [r4, #0x14]\n        mov r0, r4\n        mov r1, #0x1\n        bl sub_080AA3E0\n        mov r0, r5\n        bl sub_080AA1D8\n        pop {r4, r5, pc}",
      "score": "41",
      "id": 147
    },
    {
      "name": "sub_080AA374",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n#include \"audio.h\"\n#include \"random.h\"\n#include \"game.h\"\n\nextern void (*const gUnk_08129C7C[])(Entity*);\n\nextern void (*const gUnk_08129C90[])(Entity*);\nvoid sub_080AA1D8(Entity*);\n\nvoid sub_080AA270(Entity*);\n\nbool32 sub_080AA2E0(Entity*);\nvoid sub_080AA320(Entity*);\n\nvoid sub_080AA3E0(Entity*, u32);\nbool32 sub_080AA374(Entity*);\n\nextern u8 gUnk_08129CA4[];\nextern Hitbox* gUnk_08129CF4[];\nextern u8 gUnk_08129CAC[];\n\nextern Entity* sub_08049DF4(u32);\nextern u32 sub_08049F1C(Entity*, Entity*, u32);\n\nextern s32 sub_080AF090(Entity*);\n\nextern Hitbox gUnk_080FD150;\n\nextern s8 gUnk_08129D14[];\nextern u32 sub_0806F824(Entity*, Entity*, u32, u32);\n\n// end of existing headers\n\nbool32 sub_080AA374(Entity* this) {\n    u32 uVar1;\n    u32 animationState;\n    Entity* entity;\n    bool32 result;\n\n    result = FALSE;\n    if ((this->attachedEntity != NULL) && (this->attachedEntity->next != NULL)) {\n        // TODO regalloc\n        animationState = this->attachedEntity->animationState;\n        uVar1 =\n            sub_0806F824(this, this->attachedEntity, gUnk_08129D14[animationState], gUnk_08129D14[animationState + 1]);\n        if (sub_0806FCB8(this, this->attachedEntity->x.HALF.HI + gUnk_08129D14[animationState],\n                         this->attachedEntity->y.HALF.HI + gUnk_08129D14[animationState + 1], 8) != 0) {\n            result = TRUE;\n        } else {\n            sub_08004596(this, uVar1);\n        }\n    }\n    return result;\n}\n",
      "asmCode": "thumb_func_start sub_080AA374\nsub_080AA374:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r6, r0\n        mov r0, #0x0\n        mov r8, r0\n        ldr r5, [r6, #0x54]\n        cmp r5, #0x0\n        beq _code0_1\n        ldr r0, [r5, #0x4]\n        cmp r0, #0x0\n        beq _code0_1\n        ldrb r4, [r5, #0x14]\n        ldr r0, _data0_0\n        add r4, r0\n        mov r2, #0x0\n        ldrsb r2, [r4, r2]\n        mov r3, #0x1\n        ldrsb r3, [r4, r3]\n        mov r0, r6\n        mov r1, r5\n        bl sub_0806F824\n        mov r7, r0\n        mov r0, #0x2e\n        ldrsh r1, [r5, r0]\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        add r1, r0\n        mov r0, #0x32\n        ldrsh r2, [r5, r0]\n        mov r0, #0x1\n        ldrsb r0, [r4, r0]\n        add r2, r0\n        mov r0, r6\n        mov r3, #0x8\n        bl sub_0806FCB8\n        cmp r0, #0x0\n        beq _code0_0\n        mov r0, #0x1\n        mov r8, r0\n        b _code0_1\n_data0_0:\n        .4byte gUnk_08129D14\n_code0_0:\n        mov r0, r6\n        mov r1, r7\n        bl sub_08004596\n_code0_1:\n        mov r0, r8\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "54",
      "id": 148
    },
    {
      "name": "sub_080AA544",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n#include \"flags.h\"\n#include \"utils.h\"\n\nextern void (*const gUnk_08129FB8[])(Entity*);\n\nvoid sub_080AA494(Entity*);\nvoid sub_080AA534(Entity*);\n\nvoid sub_080AA464(Entity*);\n\nvoid sub_080AA544(Entity*);\n\nextern u16 gUnk_08129FD0[];\nvoid sub_080AA654(Entity*, u32);\n\nextern s8 gUnk_08129FF8[];\nextern u16 gUnk_08129FE4[];\nextern u32 sub_080002C8(u16, u8);\n\nextern u32 gUnk_0812A004;\nextern Entity* LoadRoomEntity(EntityData*);\n\n// end of existing headers\n\nvoid sub_080AA544(Entity* this) {\n    u8* pbVar1;\n    s32 iVar2;\n    u32 uVar3;\n    s32 iVar4;\n    u16* puVar5;\n    u32 param;\n    s8* tmp;\n\n    if (this->type2 < 9) {\n        tmp = gUnk_08129FF8;\n        param = TILE(this->x.HALF.HI, this->y.HALF.HI) + tmp[this->type2];\n        uVar3 = 0;\n        iVar4 = 0;\n        do {\n            iVar2 = sub_080002C8((param - tmp[uVar3]) & 0xffff, this->collisionLayer);\n            if (iVar2 == 0x3e) {\n                iVar4 += 1;\n            }\n            uVar3 += 1;\n        } while (uVar3 < 9);\n\n        if (iVar4 == 8) {\n            uVar3 = 0;\n            puVar5 = gUnk_08129FD0;\n            do {\n                sub_0807B7D8((u32)*puVar5, param - tmp[uVar3], this->collisionLayer);\n                puVar5 += 1;\n                uVar3 += 1;\n            } while (uVar3 < 9);\n            sub_080AA654(this, param);\n            SetFlag((u16)this->speed);\n        } else {\n            sub_0807B7D8(gUnk_08129FE4[this->type2],\n                         param -\n                             // TODO this array access is wrong\n                             *((s8*)gUnk_08129FE4 + this->type2),\n                         this->collisionLayer);\n        }\n    } else {\n        sub_0807BA8C(TILE(this->x.HALF.HI, this->y.HALF.HI), this->collisionLayer);\n        SetFlag((u16)this->speed);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080AA544\nsub_080AA544:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r6, r0\n        ldrb r0, [r6, #0xb]\n        cmp r0, #0x8\n        bhi _code0_4\n        ldr r0, _data0_0\n        mov r9, r0\n        mov r1, #0x2e\n        ldrsh r2, [r6, r1]\n        ldr r1, _data0_0+0x4\n        ldrh r0, [r1, #0x6]\n        sub r2, r0\n        asr r2, #0x4\n        mov r3, #0x3f\n        and r2, r3\n        mov r4, #0x32\n        ldrsh r0, [r6, r4]\n        ldrh r1, [r1, #0x8]\n        sub r0, r1\n        asr r0, #0x4\n        and r0, r3\n        lsl r0, #0x6\n        orr r2, r0\n        ldrb r0, [r6, #0xb]\n        add r0, r9\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        add r7, r2, r0\n        mov r4, #0x0\n        mov r5, #0x0\n        mov r0, #0x38\n        add r0, r6\n        mov r8, r0\n_code0_0:\n        mov r1, r9\n        add r0, r1, r4\n        ldrb r0, [r0]\n        lsl r0, #0x18\n        asr r0, #0x18\n        sub r0, r7, r0\n        lsl r0, #0x10\n        lsr r0, #0x10\n        mov r2, r8\n        ldrb r1, [r2]\n        bl sub_080002C8\n        cmp r0, #0x3e\n        bne _code0_1\n        add r5, #0x1\n_code0_1:\n        add r4, #0x1\n        cmp r4, #0x8\n        bls _code0_0\n        cmp r5, #0x8\n        bne _code0_3\n        mov r4, #0x0\n        ldr r5, _data0_0+0x8\n_code0_2:\n        ldrh r0, [r5]\n        mov r3, r9\n        add r1, r3, r4\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        sub r1, r7, r1\n        mov r3, r8\n        ldrb r2, [r3]\n        bl sub_0807B7D8\n        add r5, #0x2\n        add r4, #0x1\n        cmp r4, #0x8\n        bls _code0_2\n        mov r0, r6\n        mov r1, r7\n        bl sub_080AA654\n        ldrh r0, [r6, #0x24]\n        bl SetFlag\n        b _code0_5\n_data0_0:\n        .4byte gUnk_08129FF8\n        .4byte gRoomControls\n        .4byte gUnk_08129FD0\n_code0_3:\n        ldr r2, _data0_1\n        ldrb r1, [r6, #0xb]\n        lsl r0, r1, #0x1\n        add r0, r2\n        ldrh r0, [r0]\n        add r1, r9\n        ldrb r1, [r1]\n        lsl r1, #0x18\n        asr r1, #0x18\n        sub r1, r7, r1\n        mov r4, r8\n        ldrb r2, [r4]\n        bl sub_0807B7D8\n        b _code0_5\n_data0_1:\n        .4byte gUnk_08129FE4\n_code0_4:\n        mov r1, #0x2e\n        ldrsh r0, [r6, r1]\n        ldr r2, _data0_2\n        ldrh r1, [r2, #0x6]\n        sub r0, r1\n        asr r0, #0x4\n        mov r3, #0x3f\n        and r0, r3\n        mov r4, #0x32\n        ldrsh r1, [r6, r4]\n        ldrh r2, [r2, #0x8]\n        sub r1, r2\n        asr r1, #0x4\n        and r1, r3\n        lsl r1, #0x6\n        orr r0, r1\n        mov r1, r6\n        add r1, #0x38\n        ldrb r1, [r1]\n        bl sub_0807BA8C\n        ldrh r0, [r6, #0x24]\n        bl SetFlag\n_code0_5:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}\n_data0_2:\n        .4byte gRoomControls",
      "score": "134",
      "id": 149
    },
    {
      "name": "sub_080AA9E0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"flags.h\"\n\nextern void (*const gUnk_0812A014[])(Entity*);\n\nextern void (*const gUnk_0812A02C[])(Entity*);\n\nextern u8 gUnk_0812A03C[];\n\nvoid sub_080AA6C0(Entity*);\nvoid sub_080AAAA8(Entity*);\n\nextern Hitbox* gUnk_0812A04C[];\nvoid sub_080AAA68(Entity*);\n\nvoid sub_080AA9E0(Entity*);\n\nextern void (*const gUnk_0812A05C[])(Entity*);\nextern void sub_0806FBB4(Entity*);\n\nextern u16 gUnk_0812A084[];\n\nextern u32 sub_080002D4(s32, s32, u32);\nextern s8 gUnk_0812A064[];\nextern s8 gUnk_0812A06C[];\n\n// end of existing headers\n\nvoid sub_080AA9E0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AA9E0\nsub_080AA9E0:\n        push {r4, r5, lr}\n        mov r5, r0\n        ldrb r1, [r5, #0xa]\n        mov r0, #0x1\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        ldr r0, _data0_0\n        mov r2, #0x2e\n        ldrsh r1, [r0, r2]\n        mov r2, #0x2e\n        ldrsh r0, [r5, r2]\n        b _code0_1\n_data0_0:\n        .4byte gPlayerEntity\n_code0_0:\n        ldr r0, _data0_1\n        mov r2, #0x32\n        ldrsh r1, [r0, r2]\n        mov r2, #0x32\n        ldrsh r0, [r5, r2]\n_code0_1:\n        sub r4, r1, r0\n        ldrb r2, [r5, #0xa]\n        lsl r1, r2, #0x2\n        ldr r0, _data0_1+0x4\n        add r3, r1, r0\n        cmp r2, #0x2\n        bgt _code0_2\n        cmp r2, #0x1\n        bge _code0_4\n        cmp r2, #0x0\n        beq _code0_3\n        b _code0_6\n_data0_1:\n        .4byte gPlayerEntity\n        .4byte gUnk_0812A074\n_code0_2:\n        cmp r2, #0x3\n        bne _code0_6\n_code0_3:\n        cmp r4, #0x4\n        ble _code0_6\n        b _code0_5\n_code0_4:\n        mov r0, #0x4\n        neg r0, r0\n        cmp r4, r0\n        bge _code0_6\n_code0_5:\n        add r3, #0x2\n_code0_6:\n        ldrb r0, [r3]\n        mov r4, r5\n        add r4, #0x29\n        mov r1, #0x7\n        and r1, r0\n        ldrb r2, [r4]\n        mov r0, #0x8\n        neg r0, r0\n        and r0, r2\n        orr r0, r1\n        strb r0, [r4]\n        ldrb r0, [r3, #0x1]\n        strb r0, [r5, #0x15]\n        ldrb r0, [r3]\n        cmp r0, #0x5\n        bne _code0_7\n        mov r0, r5\n        bl sub_08078930\n_code0_7:\n        pop {r4, r5, pc}",
      "score": "74",
      "id": 150
    },
    {
      "name": "sub_080AACE0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"coord.h\"\n#include \"player.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"random.h\"\n\nextern void (*const gUnk_0812A418[])(Entity*);\n\nextern void (*const gUnk_0812A430[])(Entity*);\n\nextern void (*const gUnk_0812A440[])(Entity*);\n\nvoid sub_080AAF74(Entity*);\nvoid sub_080AB034(Entity*);\n\nextern void sub_0800449C(Entity*, u32);\n\n// end of existing headers\n\nvoid sub_080AACE0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AACE0\nsub_080AACE0:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xa]\n        cmp r0, #0x0\n        beq _code0_0\n        ldrb r0, [r4, #0xb]\n        cmp r0, #0x0\n        beq _code0_0\n        bl DeleteThisEntity\n_code0_0:\n        ldrb r1, [r4, #0x18]\n        lsl r0, r1, #0x1e\n        lsr r2, r0, #0x1e\n        mov r5, r4\n        add r5, #0x86\n        cmp r2, #0x1\n        bne _code0_1\n        mov r0, #0x4\n        neg r0, r0\n        and r0, r1\n        strb r0, [r4, #0x18]\n        strb r2, [r5]\n        mov r0, r4\n        mov r1, #0x2\n        mov r2, #0x0\n        bl CreateFx\n_code0_1:\n        ldr r2, [r4, #0x50]\n        ldrb r0, [r4, #0xb]\n        cmp r0, #0x0\n        bne _code0_3\n        mov r1, r2\n        add r1, #0x74\n        mov r0, #0x3\n        strb r0, [r1]\n        add r1, #0xc\n        mov r0, r4\n        add r0, #0x81\n        ldrb r0, [r0]\n        lsr r0, #0x1\n        ldrb r2, [r1]\n        add r0, r2\n        strb r0, [r1]\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x8\n        bls _code0_2\n        mov r0, #0x8\n        b _code0_4\n_code0_2:\n        cmp r0, #0x0\n        bne _code0_5\n        mov r0, #0x1\n        b _code0_4\n_code0_3:\n        mov r1, r2\n        add r1, #0x84\n        mov r0, #0x0\n        strb r0, [r1]\n        sub r1, #0x45\n        mov r0, #0x2b\n_code0_4:\n        strb r0, [r1]\n_code0_5:\n        ldrb r0, [r5]\n        cmp r0, #0x0\n        bne _code0_6\n        mov r0, r4\n        mov r1, #0x2\n        mov r2, #0x0\n        bl CreateFx\n_code0_6:\n        bl DeleteThisEntity\n        pop {r4, r5, pc}",
      "score": "76",
      "id": 151
    },
    {
      "name": "sub_080AB170",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A494[])(Entity*);\n\nextern u8 gEntCount;\n\nbool32 sub_080AB12C(Entity* this);\n\n// end of existing headers\n\nvoid sub_080AB170(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AB170\nsub_080AB170:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        ldr r6, [r4, #0x50]\n        ldr r0, [r6, #0x4]\n        cmp r0, #0x0\n        bne _code0_0\n        bl DeleteThisEntity\n_code0_0:\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x0\n        bne _code0_1\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        sub r0, #0x3a\n        and r0, r1\n        strb r0, [r2]\n        mov r0, #0x5\n        strb r0, [r4, #0x1e]\n        ldrb r1, [r2]\n        sub r0, #0xd\n        and r0, r1\n        mov r1, #0x3\n        orr r0, r1\n        strb r0, [r2]\n        ldr r0, _data0_0\n        str r0, [r4, #0x48]\n_code0_1:\n        ldr r5, [r6, #0x50]\n        mov r0, r4\n        add r0, #0x7c\n        mov r2, r5\n        add r2, #0x7c\n        ldrb r1, [r0]\n        mov r3, r0\n        ldrb r2, [r2]\n        cmp r1, r2\n        beq _code0_2\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x80\n        orr r0, r1\n        b _code0_3\n_data0_0:\n        .4byte gUnk_080FD460\n_code0_2:\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n_code0_3:\n        strb r0, [r4, #0x10]\n        mov r0, r5\n        add r0, #0x7c\n        ldrb r0, [r0]\n        strb r0, [r3]\n        mov r0, r5\n        add r0, #0x5a\n        ldrb r1, [r0]\n        mov r0, #0x20\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_4\n        mov r0, #0x1f\n        and r0, r1\n        ldr r1, _data0_1\n        add r0, r1\n        mov r2, #0x0\n        ldrsb r2, [r0, r2]\n        mov r3, #0x1\n        ldrsb r3, [r0, r3]\n        mov r0, r5\n        mov r1, r4\n        bl sub_0806FA90\n        b _code0_5\n_data0_1:\n        .4byte gUnk_0812A4A8\n_code0_4:\n        mov r3, #0xa\n        neg r3, r3\n        mov r0, r5\n        mov r1, r4\n        mov r2, #0x0\n        bl sub_0806FA90\n_code0_5:\n        mov r1, #0x2e\n        ldrsh r0, [r6, r1]\n        mov r2, #0x2e\n        ldrsh r1, [r4, r2]\n        sub r0, r1\n        ldrb r2, [r4, #0xa]\n        mul r0, r2\n        mov r3, r2\n        cmp r0, #0x0\n        bge _code0_6\n        add r0, #0x3\n_code0_6:\n        asr r0, #0x2\n        ldrh r5, [r4, #0x2e]\n        add r0, r5\n        strh r0, [r4, #0x2e]\n        mov r1, #0x32\n        ldrsh r0, [r6, r1]\n        mov r5, #0x32\n        ldrsh r1, [r4, r5]\n        sub r0, r1\n        mul r0, r3\n        cmp r0, #0x0\n        bge _code0_7\n        add r0, #0x3\n_code0_7:\n        asr r0, #0x2\n        ldrh r1, [r4, #0x32]\n        add r0, r1\n        strh r0, [r4, #0x32]\n        mov r3, #0x36\n        ldrsh r0, [r6, r3]\n        mov r5, #0x36\n        ldrsh r1, [r4, r5]\n        sub r0, r1\n        mul r0, r2\n        cmp r0, #0x0\n        bge _code0_8\n        add r0, #0x3\n_code0_8:\n        asr r0, #0x2\n        ldrh r1, [r4, #0x36]\n        add r0, r1\n        strh r0, [r4, #0x36]\n        pop {r4, r5, r6, pc}",
      "score": "132",
      "id": 152
    },
    {
      "name": "sub_080AB634",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A58C[])(Entity*);\n\nextern void (*const gUnk_0812A5A0[])(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nbool32 sub_080AB5F4(Entity*);\n\nbool32 sub_080AB634(Entity*);\n\nextern void sub_080043A8(Entity*);\nextern void CreateItemOnGround(Entity*);\nextern void CreateChestSpawner(Entity*);\n\n// end of existing headers\n\nbool32 sub_080AB634(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AB634\nsub_080AB634:\n        push {r4, r5, r6, lr}\n        mov r6, r0\n        ldr r0, [r6, #0x50]\n        mov r5, #0x0\n        mov r4, r0\n        add r4, #0x20\n_code0_0:\n        ldr r1, [r4]\n        cmp r1, #0x0\n        beq _code0_2\n        mov r0, r6\n        bl sub_080177A0\n        cmp r0, #0x0\n        beq _code0_2\n        ldr r1, [r4]\n        ldrb r0, [r1, #0xc]\n        cmp r0, #0x2\n        bhi _code0_1\n        mov r0, #0x3\n        strb r0, [r1, #0xc]\n        ldr r1, [r4]\n        mov r0, #0x1e\n        strb r0, [r1, #0xe]\n        ldr r2, [r4]\n        ldrb r0, [r2, #0x18]\n        mov r3, #0x4\n        neg r3, r3\n        mov r1, r3\n        and r0, r1\n        strb r0, [r2, #0x18]\n        ldr r0, [r4]\n        mov r1, #0x45\n        mov r2, #0x0\n        bl CreateFx\n_code0_1:\n        mov r0, r6\n        bl DeleteEntity\n        mov r0, #0x1\n        b _code0_3\n_code0_2:\n        add r4, #0x4\n        add r5, #0x1\n        cmp r5, #0x3\n        bls _code0_0\n        mov r0, #0x0\n_code0_3:\n        pop {r4, r5, r6, pc}",
      "score": "49",
      "id": 153
    },
    {
      "name": "sub_080AB758",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A5E8[])(Entity*);\n\nextern Hitbox gUnk_0812A614;\n\nvoid sub_080AB758(Entity*);\n\nvoid sub_080AB888(Entity*);\n\nextern Hitbox gUnk_0812A614;\nextern Hitbox gUnk_0812A61C;\n\nextern Hitbox* gUnk_0812A5F4[];\n\n// end of existing headers\n\nvoid sub_080AB758(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AB758\nsub_080AB758:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        sub sp, #0x4\n        mov r5, r0\n        mov r6, #0x6\n        mov r7, #0x0\n        mov r4, #0x0\n        mov r0, #0x32\n        ldrsh r2, [r5, r0]\n        ldr r1, _data0_0\n        ldrh r0, [r1, #0x8]\n        add r0, #0xd4\n        lsl r0, #0x10\n        lsr r0, #0x10\n        mov r8, r1\n        cmp r2, r0\n        bhi _code0_2\n        mov r3, #0x7\n_code0_0:\n        mov r0, r4\n        and r0, r3\n        cmp r0, #0x7\n        bne _code0_1\n        mov r0, r5\n        mov r1, #0x4\n        mov r2, r6\n        str r3, [sp]\n        bl sub_080AB844\n        add r6, #0x3e\n        add r7, #0x3e\n        ldr r3, [sp]\n_code0_1:\n        add r4, #0x1\n        and r4, r3\n        mov r1, #0x32\n        ldrsh r0, [r5, r1]\n        add r0, r7\n        lsl r1, r4, #0x3\n        add r2, r0, r1\n        ldr r0, _data0_0\n        ldrh r0, [r0, #0x8]\n        add r0, #0xd4\n        lsl r0, #0x10\n        lsr r0, #0x10\n        cmp r2, r0\n        bls _code0_0\n_code0_2:\n        mov r4, #0x0\n        mov r1, #0x32\n        ldrsh r0, [r5, r1]\n        add r2, r0, r7\n        mov r1, r8\n        ldrh r0, [r1, #0x8]\n        add r0, #0xd4\n        lsl r0, #0x10\n        lsr r0, #0x10\n        cmp r2, r0\n        bhi _code0_5\n        mov r3, #0x3\n_code0_3:\n        mov r0, r4\n        and r0, r3\n        cmp r0, #0x3\n        bne _code0_4\n        mov r0, r5\n        mov r1, #0x3\n        mov r2, r6\n        str r3, [sp]\n        bl sub_080AB844\n        add r6, #0x1e\n        add r7, #0x1e\n        ldr r3, [sp]\n_code0_4:\n        add r4, #0x1\n        and r4, r3\n        mov r1, #0x32\n        ldrsh r0, [r5, r1]\n        add r0, r7\n        lsl r1, r4, #0x3\n        add r2, r0, r1\n        ldr r0, _data0_0\n        ldrh r0, [r0, #0x8]\n        add r0, #0xd4\n        lsl r0, #0x10\n        lsr r0, #0x10\n        cmp r2, r0\n        bls _code0_3\n_code0_5:\n        mov r0, #0x2\n        and r0, r4\n        cmp r0, #0x0\n        beq _code0_6\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, r6\n        bl sub_080AB844\n        add r6, #0xe\n        b _code0_7\n_data0_0:\n        .4byte gRoomControls\n_code0_6:\n        mov r0, #0x1\n        and r4, r0\n        cmp r4, #0x0\n        beq _code0_7\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, r6\n        bl sub_080AB844\n        add r6, #0x6\n_code0_7:\n        mov r0, r5\n        mov r1, #0x6\n        mov r2, r6\n        bl sub_080AB844\n        add sp, #0x4\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "122",
      "id": 154
    },
    {
      "name": "sub_080AB950",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n#include \"utils.h\"\n\nextern void (*const gUnk_0812A6B4[])(Entity*);\nvoid sub_080AB9DC(Entity*);\n\n// end of existing headers\n\nvoid sub_080AB950(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AB950\nsub_080AB950:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xa]\n        cmp r0, #0x0\n        bne _code0_1\n        mov r0, r4\n        bl ProcessMovement\n        ldrb r0, [r4, #0x15]\n        lsr r0, #0x3\n        ldr r1, _data0_0\n        lsl r5, r0, #0x1\n        add r1, r5, r1\n        ldrh r1, [r1]\n        ldrh r0, [r4, #0x2a]\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_0\n        ldrb r1, [r4, #0x15]\n        mov r0, r4\n        bl sub_080AB9FC\n        cmp r0, #0x0\n        beq _code0_5\n_code0_0:\n        bl Random\n        ldr r2, _data0_0+0x4\n        mov r1, #0x1\n        and r1, r0\n        add r1, r5\n        add r1, r2\n        ldrb r0, [r1]\n        strb r0, [r4, #0x15]\n        b _code0_5\n_data0_0:\n        .4byte gUnk_0812A6C4\n        .4byte gUnk_0812A6BC\n_code0_1:\n        ldr r0, [r4, #0x50]\n        cmp r0, #0x0\n        bne _code0_2\n        bl DeleteThisEntity\n_code0_2:\n        ldr r0, [r4, #0x50]\n        ldr r0, [r0, #0x4]\n        cmp r0, #0x0\n        bne _code0_3\n        bl DeleteThisEntity\n_code0_3:\n        ldr r1, [r4, #0x54]\n        cmp r1, #0x0\n        beq _code0_4\n        ldr r0, [r1, #0x4]\n        cmp r0, #0x0\n        beq _code0_4\n        mov r0, r1\n        add r0, #0x68\n        ldrh r0, [r0]\n        strh r0, [r4, #0x2e]\n        mov r0, r1\n        add r0, #0x6a\n        ldrh r0, [r0]\n        strh r0, [r4, #0x32]\n        b _code0_5\n_code0_4:\n        bl DeleteThisEntity\n_code0_5:\n        mov r0, r4\n        bl GetNextFrame\n        pop {r4, r5, pc}",
      "score": "70",
      "id": 155
    },
    {
      "name": "sub_080AB9FC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n#include \"utils.h\"\n\nextern void (*const gUnk_0812A6B4[])(Entity*);\nvoid sub_080AB9DC(Entity*);\n\n// end of existing headers\n\nvoid sub_080AB9FC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AB9FC\nsub_080AB9FC:\n        push {r4, r5, r6, r7, lr}\n        mov r5, r0\n        mov r4, r1\n        add r0, #0x38\n        ldrb r0, [r0]\n        bl GetLayerByIndex\n        mov r1, #0x2e\n        ldrsh r3, [r5, r1]\n        ldr r2, _data0_0\n        ldrh r1, [r2, #0x6]\n        sub r3, r1\n        asr r3, #0x4\n        mov r6, #0x3f\n        and r3, r6\n        mov r7, #0x32\n        ldrsh r1, [r5, r7]\n        ldrh r2, [r2, #0x8]\n        sub r1, r2\n        asr r1, #0x4\n        and r1, r6\n        lsl r1, #0x6\n        orr r3, r1\n        ldr r1, _data0_0+0x4\n        lsr r4, #0x3\n        lsl r4, #0x1\n        add r4, r1\n        mov r2, #0x0\n        ldrsh r1, [r4, r2]\n        add r3, r1\n        ldr r7, _data0_0+0x8\n        add r0, r7\n        add r0, r3\n        ldrb r0, [r0]\n        cmp r0, #0x1f\n        bls _code0_0\n        cmp r0, #0x3f\n        bhi _code0_0\n        mov r0, #0x1\n        b _code0_1\n_data0_0:\n        .4byte gRoomControls\n        .4byte gUnk_080B4488\n        .4byte 0x2004\n_code0_0:\n        mov r0, #0x0\n_code0_1:\n        pop {r4, r5, r6, r7, pc}",
      "score": "49",
      "id": 156
    },
    {
      "name": "sub_080ABA74",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n\nextern void (*const gUnk_0812A6CC[])(Entity*);\n\n// end of existing headers\n\nvoid sub_080ABA74(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ABA74\nsub_080ABA74:\n        push {lr}\n        mov r2, r0\n        ldrb r0, [r2, #0xc]\n        add r0, #0x1\n        strb r0, [r2, #0xc]\n        mov r0, r2\n        add r0, #0x86\n        ldrh r0, [r0]\n        strh r0, [r2, #0x24]\n        ldrh r1, [r2, #0x2e]\n        mov r0, r2\n        add r0, #0x68\n        strh r1, [r0]\n        ldrh r0, [r2, #0x32]\n        mov r1, r2\n        add r1, #0x6a\n        strh r0, [r1]\n        mov r0, r2\n        add r0, #0x84\n        ldrh r1, [r0]\n        sub r0, #0x18\n        strh r1, [r0]\n        ldrb r0, [r2, #0xa]\n        cmp r0, #0x6\n        bhi _code0_0\n        mov r0, #0x0\n        b _code0_1\n_code0_0:\n        mov r0, #0x1\n_code0_1:\n        strb r0, [r2, #0xb]\n        ldr r0, _data0_0\n        ldrb r1, [r2, #0xa]\n        add r0, r1, r0\n        ldrb r3, [r0]\n        ldrb r0, [r2, #0xb]\n        cmp r0, #0x0\n        bne _code0_2\n        mov r0, #0x8\n        strb r0, [r2, #0x15]\n        ldrh r0, [r2, #0x32]\n        add r0, r3\n        strh r0, [r2, #0x32]\n        b _code0_3\n_data0_0:\n        .4byte gUnk_0812A6D4\n_code0_2:\n        mov r0, #0x10\n        strb r0, [r2, #0x15]\n        ldrh r0, [r2, #0x2e]\n        add r0, r3\n        strh r0, [r2, #0x2e]\n_code0_3:\n        mov r0, r2\n        bl InitializeAnimation\n        pop {pc}",
      "score": "58",
      "id": 157
    },
    {
      "name": "sub_080ABAE0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n\nextern void (*const gUnk_0812A6CC[])(Entity*);\n\n// end of existing headers\n\nvoid sub_080ABAE0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ABAE0\nsub_080ABAE0:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        bl sub_080AF090\n        ldrb r0, [r4, #0xb]\n        cmp r0, #0x0\n        bne _code0_0\n        mov r1, #0x2e\n        ldrsh r0, [r4, r1]\n        mov r1, r4\n        add r1, #0x68\n        mov r2, #0x0\n        ldrsh r1, [r1, r2]\n        sub r3, r0, r1\n        b _code0_1\n_code0_0:\n        mov r0, #0x32\n        ldrsh r1, [r4, r0]\n        mov r0, r4\n        add r0, #0x6a\n        mov r2, #0x0\n        ldrsh r0, [r0, r2]\n        sub r3, r1, r0\n_code0_1:\n        mov r0, r4\n        add r0, #0x6c\n        mov r1, #0x0\n        ldrsh r2, [r0, r1]\n        mov r6, r0\n        cmp r2, #0x0\n        bge _code0_2\n        neg r3, r3\n        neg r2, r2\n_code0_2:\n        lsl r1, r3, #0x10\n        lsl r0, r2, #0x10\n        cmp r1, r0\n        bls _code0_6\n        ldrb r0, [r4, #0x15]\n        mov r1, #0x10\n        eor r0, r1\n        strb r0, [r4, #0x15]\n        ldrb r0, [r4, #0xb]\n        mov r5, r0\n        cmp r5, #0x0\n        bne _code0_3\n        mov r0, r4\n        add r0, #0x68\n        ldrh r0, [r0]\n        strh r0, [r4, #0x2e]\n        ldrb r2, [r4, #0x18]\n        lsl r1, r2, #0x19\n        lsr r1, #0x1f\n        mov r0, #0x1\n        eor r1, r0\n        lsl r1, #0x6\n        sub r0, #0x42\n        b _code0_4\n_code0_3:\n        mov r0, r4\n        add r0, #0x6a\n        ldrh r0, [r0]\n        strh r0, [r4, #0x32]\n        ldrb r2, [r4, #0x18]\n        lsr r1, r2, #0x7\n        mov r0, #0x1\n        eor r1, r0\n        lsl r1, #0x7\n        mov r0, #0x7f\n_code0_4:\n        and r0, r2\n        orr r0, r1\n        strb r0, [r4, #0x18]\n        cmp r3, #0x0\n        ble _code0_6\n        lsl r0, r5, #0x18\n        cmp r0, #0x0\n        bne _code0_5\n        ldrh r0, [r6]\n        ldrh r2, [r4, #0x2e]\n        add r0, r2\n        strh r0, [r4, #0x2e]\n        b _code0_6\n_code0_5:\n        ldrh r0, [r6]\n        ldrh r1, [r4, #0x32]\n        add r0, r1\n        strh r0, [r4, #0x32]\n_code0_6:\n        mov r0, r4\n        bl GetNextFrame\n        pop {r4, r5, r6, pc}",
      "score": "93",
      "id": 158
    },
    {
      "name": "sub_080ABBA8",
      "projectId": "1",
      "cCode": "\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"audio.h\"\n\nextern void (*const gUnk_0812A7D4[])(Entity*);\n\nextern void (*const gUnk_0812A808[])(Entity*);\n\nextern void sub_0800449C(Entity*, u32);\nextern void sub_08079D84(void);\n\nextern s32 sub_080AF090(Entity*);\n\n// end of existing headers\n\nvoid sub_080ABBA8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ABBA8\nsub_080ABBA8:\n        push {lr}\n        mov r2, r0\n        ldrb r0, [r2, #0xa]\n        cmp r0, #0x1\n        beq _code0_0\n        cmp r0, #0x1\n        bgt _code0_2\n        cmp r0, #0x0\n        bne _code0_2\n        ldr r0, _data0_0\n        b _code0_1\n_data0_0:\n        .4byte gUnk_0812A7EC\n_code0_0:\n        ldr r0, _data0_1\n_code0_1:\n        ldrb r1, [r2, #0xc]\n        lsl r1, #0x2\n        add r1, r0\n        ldr r1, [r1]\n        mov r0, r2\n        bl _call_via_r1\n        b _code0_3\n_data0_1:\n        .4byte gUnk_0812A7F8\n_code0_2:\n        ldr r0, _data0_2\n        ldrb r1, [r2, #0xc]\n        lsl r1, #0x2\n        add r1, r0\n        ldr r1, [r1]\n        mov r0, r2\n        bl _call_via_r1\n_code0_3:\n        pop {pc}\n_data0_2:\n        .4byte gUnk_0812A800",
      "score": "39",
      "id": 159
    },
    {
      "name": "sub_080ABBF4",
      "projectId": "1",
      "cCode": "\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"audio.h\"\n\nextern void (*const gUnk_0812A7D4[])(Entity*);\n\nextern void (*const gUnk_0812A808[])(Entity*);\n\nextern void sub_0800449C(Entity*, u32);\nextern void sub_08079D84(void);\n\nextern s32 sub_080AF090(Entity*);\n\n// end of existing headers\n\nvoid sub_080ABBF4(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ABBF4\nsub_080ABBF4:\n        push {r4, lr}\n        mov r4, r0\n        add r0, #0x41\n        ldrb r1, [r0]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        ldrb r0, [r4, #0xa]\n        cmp r0, #0x0\n        blt _code0_4\n        cmp r0, #0x1\n        ble _code0_3\n        cmp r0, #0x2\n        bne _code0_4\n        mov r0, #0x3f\n        and r0, r1\n        cmp r0, #0x3\n        beq _code0_2\n        cmp r0, #0x3\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_4\n_code0_0:\n        cmp r0, #0x14\n        beq _code0_2\n        b _code0_4\n_code0_1:\n        mov r0, #0x4\n        neg r0, r0\n        bl ModHealth\n_code0_2:\n        mov r0, r4\n        bl CreateDust\n        bl DeleteThisEntity\n        b _code0_4\n_code0_3:\n        mov r0, #0x3f\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_4\n        mov r0, #0x2\n        neg r0, r0\n        bl ModHealth\n        bl DeleteThisEntity\n_code0_4:\n        pop {r4, pc}",
      "score": "50",
      "id": 160
    },
    {
      "name": "sub_080ABE04",
      "projectId": "1",
      "cCode": "\n#include \"entity.h\"\n#include \"enemy.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"audio.h\"\n\nextern void (*const gUnk_0812A7D4[])(Entity*);\n\nextern void (*const gUnk_0812A808[])(Entity*);\n\nextern void sub_0800449C(Entity*, u32);\nextern void sub_08079D84(void);\n\nextern s32 sub_080AF090(Entity*);\n\n// end of existing headers\n\nvoid sub_080ABE04(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ABE04\nsub_080ABE04:\n        push {r4, r5, lr}\n        mov r4, r0\n        bl Random\n        mov r5, r0\n        mov r0, #0xff\n        and r5, r0\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldr r0, _data0_0\n        str r0, [r4, #0x20]\n        ldrh r0, [r4, #0x36]\n        sub r0, #0xa0\n        strh r0, [r4, #0x36]\n        ldr r3, _data0_0+0x4\n        ldrh r2, [r3, #0x6]\n        ldr r1, _data0_0+0x8\n        mov r0, r1\n        and r0, r2\n        mov r2, #0x8\n        orr r0, r2\n        strh r0, [r4, #0x2e]\n        ldrh r0, [r3, #0x8]\n        and r1, r0\n        orr r1, r2\n        strh r1, [r4, #0x32]\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        mov r0, #0x10\n        and r0, r5\n        cmp r0, #0x0\n        beq _code0_0\n        add r1, #0x10\n        b _code0_1\n_data0_0:\n        .4byte 0xffff0000\n        .4byte gRoomControls\n        .4byte 0x7ff0\n_code0_0:\n        add r1, #0xc0\n_code0_1:\n        mov r0, #0xe0\n        and r0, r5\n        lsr r0, #0x1\n        add r0, r1, r0\n        strh r0, [r4, #0x2e]\n        mov r0, #0xf\n        and r5, r0\n        lsl r0, r5, #0x4\n        ldrh r1, [r4, #0x32]\n        add r0, r1\n        strh r0, [r4, #0x32]\n        mov r0, r4\n        bl sub_08004168\n        mov r0, r4\n        mov r1, #0x0\n        bl InitializeAnimation\n        ldr r0, _data0_1\n        bl SoundReq\n        pop {r4, r5, pc}\n_data0_1:\n        .4byte 0x12d",
      "score": "63",
      "id": 161
    },
    {
      "name": "sub_080ABFEC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"player.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A954[])(Entity*);\n\nextern void (*const gUnk_0812A968[])(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nextern s32 sub_080A7EB0(Entity*);\n\n// end of existing headers\n\nvoid sub_080ABFEC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ABFEC\nsub_080ABFEC:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r1, [r4, #0xa]\n        add r1, #0x1\n        bl InitializeAnimation\n        ldrb r1, [r4, #0xa]\n        cmp r1, #0x0\n        beq _code0_0\n        cmp r1, #0x1\n        beq _code0_1\n        mov r1, #0x0\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        strb r1, [r4, #0xe]\n        mov r0, #0xff\n        strb r0, [r4, #0xf]\n        ldr r1, _data0_0\n        ldrb r0, [r4, #0xb]\n        lsl r0, #0x1\n        add r0, r1\n        ldrh r0, [r0]\n        strh r0, [r4, #0x24]\n        mov r1, r4\n        add r1, #0x44\n        mov r0, #0x88\n        strb r0, [r1]\n        ldr r0, _data0_0+0x4\n        b _code0_3\n_data0_0:\n        .4byte gUnk_0812A97C\n        .4byte 0x193\n_code0_0:\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        strb r1, [r4, #0xe]\n        mov r0, #0x7\n        strb r0, [r4, #0xf]\n        mov r1, r4\n        add r1, #0x85\n        mov r0, #0x18\n        strb r0, [r1]\n        sub r1, #0x41\n        mov r0, #0x88\n        b _code0_2\n_code0_1:\n        strb r1, [r4, #0xc]\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x10]\n        mov r1, r4\n        add r1, #0x85\n        mov r0, #0x18\n_code0_2:\n        strb r0, [r1]\n        ldr r0, [r4, #0x50]\n        mov r1, r4\n        bl CopyPositionAndSpriteOffset\n        ldrh r0, [r4, #0x36]\n        sub r0, #0x14\n        strh r0, [r4, #0x36]\n        ldr r0, _data0_1\n_code0_3:\n        bl SoundReq\n        pop {r4, pc}\n_data0_1:\n        .4byte 0x149",
      "score": "69",
      "id": 162
    },
    {
      "name": "sub_080AC168",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"player.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A954[])(Entity*);\n\nextern void (*const gUnk_0812A968[])(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nextern s32 sub_080A7EB0(Entity*);\n\n// end of existing headers\n\nvoid sub_080AC168(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AC168\nsub_080AC168:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        bl GetNextFrame\n        ldr r0, [r4, #0x34]\n        ldr r1, _data0_0\n        add r0, r1\n        str r0, [r4, #0x34]\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        lsl r0, #0x18\n        lsr r6, r0, #0x18\n        cmp r6, #0x0\n        bne _code0_4\n        mov r0, #0x4\n        strb r0, [r4, #0xc]\n        strb r0, [r4, #0xe]\n        bl Random\n        mov r5, r0\n        mov r0, #0x7\n        and r5, r0\n        ldr r0, _data0_0+0x4\n        add r0, r5, r0\n        ldrb r0, [r0]\n        strb r0, [r4, #0xf]\n        ldr r1, _data0_0+0x8\n        mov r0, r4\n        bl GetFacingDirection\n        mov r1, r0\n        ldr r0, [r4, #0x50]\n        add r0, #0x84\n        ldrb r0, [r0]\n        cmp r0, #0x3\n        bne _code0_0\n        ldr r0, _data0_0+0xc\n        add r0, r5, r0\n        ldrb r0, [r0]\n        sub r1, r0\n        strb r6, [r4, #0xb]\n        b _code0_3\n_data0_0:\n        .4byte 0xffff8000\n        .4byte gUnk_0812A982\n        .4byte gPlayerEntity\n        .4byte gUnk_0812A98A\n_code0_0:\n        cmp r0, #0x2\n        bne _code0_1\n        ldr r0, _data0_1\n        add r0, r5, r0\n        ldrb r0, [r0]\n        sub r1, r0\n        mov r0, #0x1\n        b _code0_2\n_data0_1:\n        .4byte gUnk_0812A98A\n_code0_1:\n        ldr r0, _data0_2\n        add r0, r5, r0\n        ldrb r0, [r0]\n        lsr r0, #0x1\n        sub r1, r0\n        mov r0, #0x2\n_code0_2:\n        strb r0, [r4, #0xb]\n_code0_3:\n        mov r0, #0x1f\n        and r1, r0\n        strb r1, [r4, #0x15]\n_code0_4:\n        pop {r4, r5, r6, pc}\n_data0_2:\n        .4byte gUnk_0812A98A",
      "score": "75",
      "id": 163
    },
    {
      "name": "sub_080AC200",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"player.h\"\n#include \"coord.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A954[])(Entity*);\n\nextern void (*const gUnk_0812A968[])(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nextern s32 sub_080A7EB0(Entity*);\n\n// end of existing headers\n\nvoid sub_080AC200(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AC200\nsub_080AC200:\n        push {r4, r5, lr}\n        mov r4, r0\n        bl GetNextFrame\n        ldrb r0, [r4, #0xe]\n        sub r0, #0x1\n        strb r0, [r4, #0xe]\n        mov r5, #0xff\n        lsl r0, #0x18\n        cmp r0, #0x0\n        bne _code0_5\n        mov r0, #0x10\n        strb r0, [r4, #0xe]\n        mov r0, #0x21\n        bl sub_080A7EE0\n        mov r1, r0\n        cmp r1, #0x0\n        beq _code0_0\n        mov r0, #0x2\n        strb r0, [r1, #0xa]\n        ldrb r0, [r4, #0xb]\n        strb r0, [r1, #0xb]\n        ldrb r0, [r4, #0x15]\n        strb r0, [r1, #0x15]\n        ldr r0, [r4, #0x50]\n        str r0, [r1, #0x50]\n        mov r0, r4\n        bl CopyPosition\n_code0_0:\n        ldrb r0, [r4, #0xf]\n        sub r0, #0x1\n        strb r0, [r4, #0xf]\n        and r0, r5\n        cmp r0, #0x0\n        bne _code0_1\n        bl DeleteThisEntity\n_code0_1:\n        ldr r0, [r4, #0x50]\n        add r0, #0x84\n        ldrb r0, [r0]\n        cmp r0, #0x3\n        bne _code0_2\n        ldrb r0, [r4, #0x15]\n        add r0, #0x3\n        b _code0_4\n_code0_2:\n        cmp r0, #0x2\n        bne _code0_3\n        ldrb r0, [r4, #0x15]\n        add r0, #0x3\n        b _code0_4\n_code0_3:\n        ldrb r0, [r4, #0x15]\n        add r0, #0x2\n_code0_4:\n        mov r1, #0x1f\n        and r0, r1\n        strb r0, [r4, #0x15]\n_code0_5:\n        pop {r4, r5, pc}",
      "score": "61",
      "id": 164
    },
    {
      "name": "sub_080AC388",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"coord.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A9A8[])(Entity*);\n\nextern u16 gUnk_0812A9B4[];\nbool32 sub_080AC5E4(Entity*);\nvoid sub_080AC388(Entity*);\n\nextern u8 gUnk_0812A9BA[];\nextern Hitbox gUnk_080FD458;\n\nextern Hitbox gUnk_080FD168;\nextern Hitbox gUnk_080FD448;\n\nextern void (*const gUnk_0812A994[])(Entity*);\n\nvoid sub_080AC6F0(Entity*);\nvoid sub_080AC760(Entity*);\nvoid sub_080AC7C4(Entity*);\n\nextern u8 gEntCount;\n\n// end of existing headers\n\nvoid sub_080AC388(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AC388\nsub_080AC388:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        mov r5, r0\n        ldr r1, _data0_0\n        ldrb r0, [r5, #0xa]\n        add r0, r1\n        ldrb r3, [r0]\n        ldr r0, [r5, #0x50]\n        mov r10, r0\n        ldrb r0, [r0, #0x14]\n        mov r1, #0x80\n        mov r9, r1\n        mov r1, r9\n        eor r1, r0\n        mov r6, r5\n        add r6, #0x7c\n        ldrh r4, [r6]\n        lsr r0, r4, #0x8\n        sub r1, r0\n        mov r2, r5\n        add r2, #0x7a\n        ldrh r7, [r2]\n        mov r12, r7\n        mov r7, #0x0\n        ldrsh r0, [r2, r7]\n        cmp r0, #0x0\n        bge _code0_1\n        sub r0, r1, r3\n        mov r7, #0xff\n        mov r8, r7\n        and r0, r7\n        cmp r0, #0x7f\n        bhi _code0_0\n        mov r1, #0x0\n        ldrsh r0, [r2, r1]\n        neg r0, r0\n        strh r0, [r2]\n        mov r2, r10\n        ldrb r0, [r2, #0x14]\n        mov r7, r9\n        eor r0, r7\n        sub r0, r3\n        b _code0_2\n_data0_0:\n        .4byte gUnk_0812A9B8\n_code0_0:\n        mov r2, r12\n        add r0, r4, r2\n        strh r0, [r6]\n        add r0, r1, r3\n        mov r7, r8\n        and r0, r7\n        cmp r0, #0x80\n        bls _code0_5\n        mov r1, r10\n        ldrb r0, [r1, #0x14]\n        mov r2, r9\n        eor r0, r2\n        add r0, r3\n        b _code0_4\n_code0_1:\n        add r0, r1, r3\n        mov r7, #0xff\n        mov r8, r7\n        and r0, r7\n        cmp r0, #0x80\n        bls _code0_3\n        mov r1, #0x0\n        ldrsh r0, [r2, r1]\n        neg r0, r0\n        strh r0, [r2]\n        mov r2, r10\n        ldrb r0, [r2, #0x14]\n        mov r7, r9\n        eor r0, r7\n        add r0, r3\n_code0_2:\n        mov r1, #0xff\n        and r0, r1\n        lsl r0, #0x8\n        strh r0, [r6]\n        mov r0, r5\n        bl sub_080AC884\n        b _code0_5\n_code0_3:\n        mov r2, r12\n        add r0, r4, r2\n        strh r0, [r6]\n        sub r0, r1, r3\n        mov r7, r8\n        and r0, r7\n        sub r0, #0x1\n        cmp r0, #0x7e\n        bhi _code0_5\n        mov r1, r10\n        ldrb r0, [r1, #0x14]\n        mov r2, r9\n        eor r0, r2\n        sub r0, r3\n_code0_4:\n        mov r1, #0xff\n        and r0, r1\n        lsl r0, #0x8\n        mov r1, #0x80\n        orr r0, r1\n        strh r0, [r6]\n_code0_5:\n        mov r0, r5\n        add r0, #0x7c\n        ldrh r0, [r0]\n        lsr r0, #0x8\n        strb r0, [r5, #0x15]\n        mov r0, r5\n        bl sub_080AC6F0\n        mov r0, r5\n        bl sub_080AC760\n        mov r0, r5\n        bl sub_080AC7C4\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}",
      "score": "128",
      "id": 165
    },
    {
      "name": "sub_080AC5E4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"coord.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A9A8[])(Entity*);\n\nextern u16 gUnk_0812A9B4[];\nbool32 sub_080AC5E4(Entity*);\nvoid sub_080AC388(Entity*);\n\nextern u8 gUnk_0812A9BA[];\nextern Hitbox gUnk_080FD458;\n\nextern Hitbox gUnk_080FD168;\nextern Hitbox gUnk_080FD448;\n\nextern void (*const gUnk_0812A994[])(Entity*);\n\nvoid sub_080AC6F0(Entity*);\nvoid sub_080AC760(Entity*);\nvoid sub_080AC7C4(Entity*);\n\nextern u8 gEntCount;\n\n// end of existing headers\n\nbool32 sub_080AC5E4(Entity* this) {\n    // TODO regalloc\n    Entity* entity;\n    Entity* entity2;\n    Entity* entity3;\n    Entity* entity4;\n    u8 uVar3;\n\n    if (this->type == 0) {\n        if (0x43 < gEntCount) {\n            return 0;\n        }\n        this->field_0x78.HALF.HI = 0x11;\n        entity = sub_080A7EE0(0x22);\n        entity->type = this->type;\n        entity->type2 = 1;\n        entity->parent = this->parent;\n        entity->field_0x78.HALF.HI = 0x12;\n        this->attachedEntity = entity;\n        entity2 = sub_080A7EE0(0x22);\n        entity2->type = this->type;\n        entity2->type2 = 2;\n        entity2->parent = this->parent;\n        entity2->field_0x78.HALF.HI = 0x14;\n        uVar3 = entity2->field_0x78.HALF.HI;\n        entity->attachedEntity = entity2;\n        entity3 = sub_080A7EE0(0x22);\n        entity3->type = this->type;\n        entity3->type2 = 3;\n        entity3->parent = this->parent;\n        entity3->attachedEntity = NULL;\n        entity3->field_0x78.HALF.HI = 0;\n        entity2->attachedEntity = entity3;\n    } else {\n        if (0x44 < gEntCount) {\n            return 0;\n        }\n        this->field_0x78.HALF.HI = 0xf;\n        entity = sub_080A7EE0(0x22);\n        entity->type = this->type;\n        entity->type2 = 1;\n        entity->parent = this->parent;\n        entity->field_0x78.HALF.HI = 0x10;\n        uVar3 = entity->field_0x78.HALF.HI;\n        this->attachedEntity = entity;\n        entity2 = sub_080A7EE0(0x22);\n        entity2->type = this->type;\n        entity2->type2 = 2;\n        entity2->parent = this->parent;\n        entity2->attachedEntity = NULL;\n        entity2->field_0x78.HALF.HI = 0x20;\n        entity->attachedEntity = entity2;\n    }\n    entity4 = sub_080A7EE0(0x22);\n    entity4->type = this->type;\n    entity4->type2 = 4;\n    entity4->parent = this->parent;\n    entity4->attachedEntity = this;\n    entity4->field_0x78.HALF.HI = uVar3;\n    return 1;\n}\n",
      "asmCode": "thumb_func_start sub_080AC5E4\nsub_080AC5E4:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r5, r0\n        ldrb r4, [r5, #0xa]\n        cmp r4, #0x0\n        bne _code0_0\n        ldr r0, _data0_0\n        ldrb r0, [r0]\n        cmp r0, #0x43\n        bhi _code0_1\n        mov r1, r5\n        add r1, #0x79\n        mov r0, #0x11\n        strb r0, [r1]\n        mov r0, #0x22\n        bl sub_080A7EE0\n        mov r6, r0\n        ldrb r0, [r5, #0xa]\n        strb r0, [r6, #0xa]\n        mov r0, #0x1\n        strb r0, [r6, #0xb]\n        ldr r0, [r5, #0x50]\n        str r0, [r6, #0x50]\n        mov r1, r6\n        add r1, #0x79\n        mov r0, #0x12\n        strb r0, [r1]\n        str r6, [r5, #0x54]\n        mov r0, #0x22\n        bl sub_080A7EE0\n        mov r7, r0\n        ldrb r0, [r5, #0xa]\n        strb r0, [r7, #0xa]\n        mov r0, #0x2\n        strb r0, [r7, #0xb]\n        ldr r0, [r5, #0x50]\n        str r0, [r7, #0x50]\n        mov r0, r7\n        add r0, #0x79\n        mov r1, #0x14\n        mov r8, r1\n        mov r1, r8\n        strb r1, [r0]\n        str r7, [r6, #0x54]\n        mov r0, #0x22\n        bl sub_080A7EE0\n        ldrb r1, [r5, #0xa]\n        strb r1, [r0, #0xa]\n        mov r1, #0x3\n        strb r1, [r0, #0xb]\n        ldr r1, [r5, #0x50]\n        str r1, [r0, #0x50]\n        str r4, [r0, #0x54]\n        mov r1, r0\n        add r1, #0x79\n        strb r4, [r1]\n        str r0, [r7, #0x54]\n        b _code0_3\n_data0_0:\n        .4byte gEntCount\n_code0_0:\n        ldr r0, _data0_1\n        ldrb r0, [r0]\n        cmp r0, #0x44\n        bls _code0_2\n_code0_1:\n        mov r0, #0x0\n        b _code0_4\n_data0_1:\n        .4byte gEntCount\n_code0_2:\n        mov r1, r5\n        add r1, #0x79\n        mov r0, #0x0\n        mov r9, r0\n        mov r0, #0xf\n        strb r0, [r1]\n        mov r0, #0x22\n        bl sub_080A7EE0\n        mov r6, r0\n        ldrb r0, [r5, #0xa]\n        strb r0, [r6, #0xa]\n        mov r0, #0x1\n        strb r0, [r6, #0xb]\n        ldr r0, [r5, #0x50]\n        str r0, [r6, #0x50]\n        mov r0, r6\n        add r0, #0x79\n        mov r1, #0x10\n        mov r8, r1\n        mov r1, r8\n        strb r1, [r0]\n        str r6, [r5, #0x54]\n        mov r0, #0x22\n        bl sub_080A7EE0\n        mov r7, r0\n        ldrb r0, [r5, #0xa]\n        strb r0, [r7, #0xa]\n        mov r0, #0x2\n        strb r0, [r7, #0xb]\n        ldr r0, [r5, #0x50]\n        str r0, [r7, #0x50]\n        mov r0, r9\n        str r0, [r7, #0x54]\n        mov r1, r7\n        add r1, #0x79\n        mov r0, #0x20\n        strb r0, [r1]\n        str r7, [r6, #0x54]\n_code0_3:\n        mov r0, #0x22\n        bl sub_080A7EE0\n        mov r6, r0\n        ldrb r0, [r5, #0xa]\n        strb r0, [r6, #0xa]\n        mov r0, #0x4\n        strb r0, [r6, #0xb]\n        ldr r0, [r5, #0x50]\n        str r0, [r6, #0x50]\n        str r5, [r6, #0x54]\n        mov r0, r6\n        add r0, #0x79\n        mov r1, r8\n        strb r1, [r0]\n        mov r0, #0x1\n_code0_4:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}",
      "score": "134",
      "id": 166
    },
    {
      "name": "sub_080AC6F0",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"coord.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A9A8[])(Entity*);\n\nextern u16 gUnk_0812A9B4[];\nbool32 sub_080AC5E4(Entity*);\nvoid sub_080AC388(Entity*);\n\nextern u8 gUnk_0812A9BA[];\nextern Hitbox gUnk_080FD458;\n\nextern Hitbox gUnk_080FD168;\nextern Hitbox gUnk_080FD448;\n\nextern void (*const gUnk_0812A994[])(Entity*);\n\nvoid sub_080AC6F0(Entity*);\nvoid sub_080AC760(Entity*);\nvoid sub_080AC7C4(Entity*);\n\nextern u8 gEntCount;\n\n// end of existing headers\n\nvoid sub_080AC6F0(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AC6F0\nsub_080AC6F0:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0x15]\n        mov r2, #0x1f\n        and r2, r0\n        lsr r0, #0x5\n        lsl r1, r0, #0x1\n        add r3, r1, r0\n        ldr r1, _data0_0\n        ldrb r0, [r4, #0x14]\n        add r0, r1\n        ldrb r0, [r0]\n        sub r0, r3\n        mov r5, r1\n        cmp r0, #0x3\n        bhi _code0_4\n        cmp r0, #0x1\n        beq _code0_1\n        cmp r0, #0x1\n        blo _code0_0\n        cmp r0, #0x2\n        beq _code0_2\n        cmp r2, #0x19\n        bhi _code0_6\n        b _code0_4\n_data0_0:\n        .4byte gUnk_0812A9C0\n_code0_0:\n        cmp r2, #0x6\n        bls _code0_6\n        b _code0_4\n_code0_1:\n        sub r0, r2, #0x5\n        b _code0_3\n_code0_2:\n        mov r0, r2\n        sub r0, #0xf\n_code0_3:\n        cmp r0, #0xc\n        bls _code0_6\n_code0_4:\n        add r0, r3, #0x3\n        cmp r2, #0x1a\n        bhi _code0_5\n        add r0, r3, #0x2\n        cmp r2, #0x10\n        bhi _code0_5\n        mov r0, r3\n        cmp r2, #0x5\n        bls _code0_5\n        add r0, #0x1\n_code0_5:\n        mov r1, #0x18\n        bl __modsi3\n        strb r0, [r4, #0x14]\n        add r0, r5\n        ldrb r0, [r0]\n        strb r0, [r4, #0x1e]\n_code0_6:\n        pop {r4, r5, pc}",
      "score": "62",
      "id": 167
    },
    {
      "name": "sub_080AC760",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"coord.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A9A8[])(Entity*);\n\nextern u16 gUnk_0812A9B4[];\nbool32 sub_080AC5E4(Entity*);\nvoid sub_080AC388(Entity*);\n\nextern u8 gUnk_0812A9BA[];\nextern Hitbox gUnk_080FD458;\n\nextern Hitbox gUnk_080FD168;\nextern Hitbox gUnk_080FD448;\n\nextern void (*const gUnk_0812A994[])(Entity*);\n\nvoid sub_080AC6F0(Entity*);\nvoid sub_080AC760(Entity*);\nvoid sub_080AC7C4(Entity*);\n\nextern u8 gEntCount;\n\n// end of existing headers\n\nvoid sub_080AC760(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AC760\nsub_080AC760:\n        push {r4, r5, r6, lr}\n        mov r6, r0\n        ldr r4, [r6, #0x54]\n        ldrb r0, [r4, #0x15]\n        ldrb r3, [r6, #0x15]\n        sub r2, r0, r3\n        mov r1, #0xff\n        and r2, r1\n        mov r0, r2\n        add r0, #0x8\n        and r0, r1\n        cmp r0, #0x10\n        ble _code0_2\n        cmp r2, #0x80\n        ble _code0_0\n        mov r0, r3\n        sub r0, #0x8\n        b _code0_1\n_code0_0:\n        mov r0, r3\n        add r0, #0x8\n_code0_1:\n        strb r0, [r4, #0x15]\n_code0_2:\n        ldr r5, [r4, #0x54]\n        ldr r0, [r5, #0x54]\n        cmp r0, #0x0\n        bne _code0_3\n        ldr r0, [r6, #0x50]\n        ldrb r0, [r0, #0x14]\n        mov r1, #0x80\n        eor r0, r1\n        b _code0_5\n_code0_3:\n        ldrb r0, [r5, #0x15]\n        ldrb r3, [r4, #0x15]\n        sub r2, r0, r3\n        mov r1, #0xff\n        and r2, r1\n        mov r0, r2\n        add r0, #0x8\n        and r0, r1\n        cmp r0, #0x10\n        ble _code0_6\n        cmp r2, #0x80\n        ble _code0_4\n        mov r0, r3\n        sub r0, #0x8\n        b _code0_5\n_code0_4:\n        mov r0, r3\n        add r0, #0x8\n_code0_5:\n        strb r0, [r5, #0x15]\n_code0_6:\n        pop {r4, r5, r6, pc}",
      "score": "58",
      "id": 168
    },
    {
      "name": "sub_080AC7C4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"random.h\"\n#include \"coord.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812A9A8[])(Entity*);\n\nextern u16 gUnk_0812A9B4[];\nbool32 sub_080AC5E4(Entity*);\nvoid sub_080AC388(Entity*);\n\nextern u8 gUnk_0812A9BA[];\nextern Hitbox gUnk_080FD458;\n\nextern Hitbox gUnk_080FD168;\nextern Hitbox gUnk_080FD448;\n\nextern void (*const gUnk_0812A994[])(Entity*);\n\nvoid sub_080AC6F0(Entity*);\nvoid sub_080AC760(Entity*);\nvoid sub_080AC7C4(Entity*);\n\nextern u8 gEntCount;\n\n// end of existing headers\n\nvoid sub_080AC7C4(Entity* this) {\n    // TODO regalloc\n    Entity* entity1;\n    Entity* entity2;\n    Entity* entity3;\n    s32 iVar1;\n    s32 iVar2;\n    s32 iVar3;\n\n    entity1 = this->attachedEntity;\n    entity2 = entity1->attachedEntity;\n    entity3 = entity2->attachedEntity;\n    if (entity3 != NULL) {\n        CopyPosition(this->parent, entity3);\n    } else {\n        entity3 = this->parent;\n    }\n    PositionRelative(entity3, entity2, (entity2->field_0x78.HALF.HI << 8) * gSineTable[entity2->direction],\n                     -((entity2->field_0x78.HALF.HI << 8) * gSineTable[entity2->direction + 0x40]));\n    PositionRelative(entity2, entity1, (entity1->field_0x78.HALF.HI << 8) * gSineTable[entity1->direction],\n                     -((entity1->field_0x78.HALF.HI << 8) * gSineTable[entity1->direction + 0x40]));\n    PositionRelative(entity1, this, (this->field_0x78.HALF.HI << 8) * gSineTable[this->direction],\n                     -((this->field_0x78.HALF.HI << 8) * gSineTable[this->direction + 0x40]));\n}\n",
      "asmCode": "thumb_func_start sub_080AC7C4\nsub_080AC7C4:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r4, r0\n        ldr r0, [r4, #0x54]\n        mov r8, r0\n        ldr r7, [r0, #0x54]\n        ldr r5, [r7, #0x54]\n        cmp r5, #0x0\n        beq _code0_0\n        ldr r0, [r4, #0x50]\n        mov r1, r5\n        bl CopyPosition\n        b _code0_1\n_code0_0:\n        ldr r5, [r4, #0x50]\n_code0_1:\n        mov r0, r7\n        add r0, #0x79\n        ldrb r2, [r0]\n        lsl r2, #0x8\n        ldr r3, _data0_0\n        mov r9, r3\n        ldrb r1, [r7, #0x15]\n        lsl r0, r1, #0x1\n        add r0, r9\n        mov r3, #0x0\n        ldrsh r0, [r0, r3]\n        mov r6, r0\n        mul r6, r2\n        add r1, #0x40\n        lsl r1, #0x1\n        add r1, r9\n        mov r3, #0x0\n        ldrsh r0, [r1, r3]\n        mul r0, r2\n        neg r3, r0\n        mov r0, r5\n        mov r1, r7\n        mov r2, r6\n        bl PositionRelative\n        mov r0, r8\n        add r0, #0x79\n        ldrb r2, [r0]\n        lsl r2, #0x8\n        mov r0, r8\n        ldrb r1, [r0, #0x15]\n        lsl r0, r1, #0x1\n        add r0, r9\n        mov r3, #0x0\n        ldrsh r0, [r0, r3]\n        mov r6, r0\n        mul r6, r2\n        add r1, #0x40\n        lsl r1, #0x1\n        add r1, r9\n        mov r3, #0x0\n        ldrsh r0, [r1, r3]\n        mul r0, r2\n        neg r3, r0\n        mov r0, r7\n        mov r1, r8\n        mov r2, r6\n        bl PositionRelative\n        mov r0, r4\n        add r0, #0x79\n        ldrb r2, [r0]\n        lsl r2, #0x8\n        ldrb r1, [r4, #0x15]\n        lsl r0, r1, #0x1\n        add r0, r9\n        mov r3, #0x0\n        ldrsh r0, [r0, r3]\n        mov r6, r0\n        mul r6, r2\n        add r1, #0x40\n        lsl r1, #0x1\n        add r1, r9\n        mov r3, #0x0\n        ldrsh r0, [r1, r3]\n        mul r0, r2\n        neg r3, r0\n        mov r0, r8\n        mov r1, r4\n        mov r2, r6\n        bl PositionRelative\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gSineTable",
      "score": "95",
      "id": 169
    },
    {
      "name": "sub_080AC8DC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"coord.h\"\n#include \"player.h\"\n#include \"audio.h\"\n\nextern void (*const gUnk_0812A9D8[])(Entity*);\n\nextern void (*const gUnk_0812A9EC[])(Entity*);\n\nvoid sub_080AC954(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nextern s32 sub_080A7EB0(Entity*);\n\n// end of existing headers\n\nvoid sub_080AC8DC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080AC8DC\nsub_080AC8DC:\n        push {r4, lr}\n        mov r4, r0\n        add r0, #0x41\n        ldrb r0, [r0]\n        mov r1, #0x7f\n        and r1, r0\n        cmp r1, #0x0\n        blt _code0_1\n        cmp r1, #0x3\n        ble _code0_0\n        cmp r1, #0x1f\n        bgt _code0_1\n        cmp r1, #0x1e\n        blt _code0_1\n_code0_0:\n        bl DeleteThisEntity\n        b _code0_2\n_code0_1:\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x3\n        beq _code0_2\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x10]\n        ldrh r0, [r4, #0x24]\n        lsl r0, #0x10\n        asr r0, #0x11\n        strh r0, [r4, #0x24]\n        mov r0, r4\n        mov r1, #0x1\n        bl InitializeAnimation\n_code0_2:\n        mov r0, r4\n        bl sub_080AC8C4\n        pop {r4, pc}",
      "score": "40",
      "id": 170
    },
    {
      "name": "sub_080ACA68",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812AA5C[])(Entity*);\n\nextern void (*const gUnk_0812AA74[])(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nextern s32 sub_080A7EB0(Entity*);\n\nvoid sub_080ACB90(Entity*);\n\n// end of existing headers\n\nvoid sub_080ACA68(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ACA68\nsub_080ACA68:\n        push {r4, lr}\n        mov r4, r0\n        add r0, #0x41\n        ldrb r0, [r0]\n        mov r1, #0x7f\n        and r1, r0\n        cmp r1, #0xc\n        bgt _code0_0\n        cmp r1, #0xa\n        bge _code0_1\n        cmp r1, #0x6\n        beq _code0_1\n        b _code0_4\n_code0_0:\n        cmp r1, #0x1a\n        bne _code0_4\n_code0_1:\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x7f\n        and r0, r1\n        strb r0, [r4, #0x10]\n        mov r1, #0x80\n        lsl r1, #0x1\n        mov r0, r1\n        ldrh r1, [r4, #0x24]\n        add r0, r1\n        strh r0, [r4, #0x24]\n        ldr r0, [r4, #0x4c]\n        str r0, [r4, #0x54]\n        mov r0, r4\n        bl sub_080ACB40\n        cmp r0, #0x0\n        beq _code0_2\n        mov r0, #0x0\n        b _code0_3\n_code0_2:\n        mov r0, r4\n        add r0, #0x3e\n        ldrb r0, [r0]\n_code0_3:\n        strb r0, [r4, #0x15]\n        mov r0, #0xd8\n        bl SoundReq\n        b _code0_5\n_code0_4:\n        bl DeleteThisEntity\n_code0_5:\n        pop {r4, pc}",
      "score": "52",
      "id": 171
    },
    {
      "name": "sub_080ACB40",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n\nextern void (*const gUnk_0812AA5C[])(Entity*);\n\nextern void (*const gUnk_0812AA74[])(Entity*);\n\nextern s32 sub_080AF090(Entity*);\nextern s32 sub_080A7EB0(Entity*);\n\nvoid sub_080ACB90(Entity*);\n\n// end of existing headers\n\nvoid sub_080ACB40(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080ACB40\nsub_080ACB40:\n        push {lr}\n        mov r2, r0\n        ldr r0, [r2, #0x50]\n        ldr r1, [r0, #0x50]\n        ldr r3, [r2, #0x54]\n        ldr r0, [r1, #0x64]\n        ldr r0, [r0, #0x1c]\n        ldr r0, [r0, #0x54]\n        cmp r0, r2\n        beq _code0_0\n        ldr r0, [r0, #0x54]\n        cmp r3, r0\n        beq _code0_3\n_code0_0:\n        ldr r1, [r1, #0x64]\n        ldr r0, [r1, #0x20]\n        ldr r0, [r0, #0x54]\n        cmp r0, r2\n        beq _code0_1\n        ldr r0, [r0, #0x54]\n        cmp r3, r0\n        beq _code0_3\n_code0_1:\n        ldr r0, [r1, #0x24]\n        ldr r0, [r0, #0x54]\n        cmp r0, r2\n        beq _code0_2\n        ldr r0, [r0, #0x54]\n        cmp r3, r0\n        beq _code0_3\n_code0_2:\n        ldr r0, [r1, #0x28]\n        ldr r0, [r0, #0x54]\n        cmp r0, r2\n        beq _code0_4\n        ldr r0, [r0, #0x54]\n        cmp r3, r0\n        bne _code0_4\n_code0_3:\n        mov r0, #0x0\n        b _code0_5\n_code0_4:\n        mov r0, #0x1\n_code0_5:\n        pop {pc}",
      "score": "47",
      "id": 172
    },
    {
      "name": "sub_080A83B4",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"enemy.h\"\n\nextern void (*const gUnk_08129650[])(Entity*);\n\nextern void (*const gUnk_08129664[])(Entity*);\n\nextern bool32 AllocMutableHitbox(Entity*);\n\ntypedef struct {\n    u8 offsetX;\n    u8 offsetY;\n    u8 width;\n    u8 height;\n} Test;\n\nextern Test gUnk_0812966C[];\n\n// end of existing headers\n\nvoid sub_080A83B4(Entity* this) {\n    u8 frames;\n    Entity* parent;\n    u32 tmp;\n    Test* a;\n\n    parent = this->parent;\n    if (parent == NULL) {\n        DeleteThisEntity();\n    }\n    if (parent->next == NULL) {\n        DeleteThisEntity();\n    }\n    frames = parent->frames.all * 4;\n    a = &gUnk_0812966C[frames / 4];\n    this->hitbox->offset_x = a->offsetX;\n    // TODO offset used to increate a pointer is already increated here?\n    if (parent->frameSpriteSettings == 0x40) {\n        this->hitbox->offset_x = -this->hitbox->offset_x;\n    }\n    this->hitbox->offset_y = a->offsetY;\n    this->hitbox->width = a->width;\n    this->hitbox->height = a->height;\n    if (parent->field_0x43 != 0) {\n        if ((this->flags & 0x80) != 0) {\n            this->flags &= 0x7f;\n        }\n    } else {\n        if ((this->flags & 0x80) == 0) {\n            this->flags |= 0x80;\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start sub_080A83B4\nsub_080A83B4:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldr r5, [r4, #0x50]\n        cmp r5, #0x0\n        bne _code0_0\n        bl DeleteThisEntity\n_code0_0:\n        ldr r0, [r5, #0x4]\n        cmp r0, #0x0\n        bne _code0_1\n        bl DeleteThisEntity\n_code0_1:\n        mov r0, r5\n        add r0, #0x5a\n        ldrb r0, [r0]\n        lsl r0, #0x1a\n        lsr r0, #0x18\n        ldr r1, _data0_0\n        add r2, r0, r1\n        ldr r1, [r4, #0x48]\n        ldrb r0, [r2]\n        strb r0, [r1]\n        add r2, #0x1\n        mov r0, r5\n        add r0, #0x5b\n        ldrb r0, [r0]\n        cmp r0, #0x40\n        bne _code0_2\n        ldr r1, [r4, #0x48]\n        ldrb r0, [r1]\n        neg r0, r0\n        strb r0, [r1]\n_code0_2:\n        ldr r1, [r4, #0x48]\n        ldrb r0, [r2]\n        strb r0, [r1, #0x1]\n        add r2, #0x1\n        ldr r1, [r4, #0x48]\n        ldrb r0, [r2]\n        strb r0, [r1, #0x6]\n        ldr r1, [r4, #0x48]\n        ldrb r0, [r2, #0x1]\n        strb r0, [r1, #0x7]\n        mov r0, r5\n        add r0, #0x43\n        ldrb r0, [r0]\n        cmp r0, #0x0\n        beq _code0_3\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_5\n        mov r0, #0x7f\n        and r0, r1\n        b _code0_4\n_data0_0:\n        .4byte gUnk_0812966C\n_code0_3:\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x80\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_5\n        mov r0, #0x80\n        orr r0, r1\n_code0_4:\n        strb r0, [r4, #0x10]\n_code0_5:\n        pop {r4, r5, pc}",
      "score": "72",
      "id": 173
    },
    {
      "name": "sub_0802594C",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\nextern u32 sub_080002E0(u32, u32);\nextern u32 sub_080002C8(u16, u8);\nextern u16 sub_080002A8(u32, u32, u32);\nextern u16 sub_080002D4(u32, u32, u32);\nextern void sub_0804AA1C(Entity*);\nextern Entity* sub_08049DF4(u32);\n\nextern u8 gUnk_080B37A0[];\nextern u8 gUnk_080B3E80[];\n\nbool32 sub_080258C4(Entity*);\nvoid sub_08025B18(Entity*);\nvoid sub_08025C2C(Entity*);\nvoid sub_08025BD4(Entity*);\nvoid sub_080256B4(Entity*);\nbool32 sub_08025C44(Entity*);\nu32 sub_08025C60(Entity*);\nbool32 sub_0802571C(Entity*);\nvoid sub_08025A54(Entity*);\nvoid sub_08025AE8(Entity*);\nbool32 sub_0802594C(Entity*, u32);\nbool32 sub_080257EC(Entity*, u32, u32);\nbool32 sub_08025AB8(u32, u32);\n\nextern void (*const gUnk_080CBF9C[])(Entity*);\nextern void (*const gUnk_080CBFB4[])(Entity*);\nextern const u8 gUnk_080CBFE8[];\nextern void (*const gUnk_080CBFEC[])(Entity*);\nextern const u8 gUnk_080CBFF8[];\nextern const u16 gUnk_080CC000[];\nextern const s8 gUnk_080CC020[];\nextern const u8 gUnk_080CC050[];\nextern const s8* const gUnk_080CC090[];\nextern const s8 gUnk_080CC0A0[];\nextern const s8 gUnk_080CC0A8[];\nextern const s8 gUnk_080CC0BA[];\nextern const s8 gUnk_080CC0C2[];\n\n// end of existing headers\n\nbool32 sub_0802594C(Entity* this, u32 param_2) {\n    const s8* unk = gUnk_080CC090[param_2];\n    u32 uVar1 = this->collisionLayer;\n    RoomControls* ctrl = &gRoomControls;\n    u16 xDiff = (this->x.HALF.HI - ctrl->roomOriginX + 8) & -0x10;\n    u16 yDiff = (this->y.HALF.HI - ctrl->roomOriginY + 8) & -0x10;\n    do {\n        u16 iVar9 = xDiff + unk[0];\n        u16 iVar11 = yDiff + unk[1];\n        u32 bVar4 = sub_080002D4(iVar9 - 0x00, iVar11 - 0x00, uVar1);\n        u32 bVar5 = sub_080002D4(iVar9 - 0x10, iVar11 - 0x00, uVar1);\n        u32 bVar6 = sub_080002D4(iVar9 - 0x00, iVar11 - 0x10, uVar1);\n        u32 bVar7 = sub_080002D4(iVar9 - 0x10, iVar11 - 0x10, uVar1);\n        if ((bVar6 | bVar4 | bVar5 | bVar7) == 0) {\n            this->field_0x7c.HALF.LO = ctrl->roomOriginX + iVar9;\n            this->field_0x7c.HALF.HI = ctrl->roomOriginY + iVar11;\n            return TRUE;\n        }\n        unk += 2;\n    } while (unk[0] != 0x7f);\n\n    return 0;\n}\n",
      "asmCode": "thumb_func_start sub_0802594C\nsub_0802594C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x14\n        mov r10, r0\n        ldr r0, _data0_0\n        lsl r1, #0x2\n        add r1, r0\n        ldr r7, [r1]\n        mov r0, r10\n        add r0, #0x38\n        ldrb r0, [r0]\n        mov r9, r0\n        ldr r3, _data0_0+0x4\n        mov r1, r10\n        ldrh r0, [r1, #0x2e]\n        ldrh r1, [r3, #0x6]\n        sub r0, r1\n        add r0, #0x8\n        mov r1, #0x10\n        neg r1, r1\n        mov r2, r1\n        and r0, r2\n        lsl r0, #0x10\n        lsr r0, #0x10\n        str r0, [sp]\n        mov r1, r10\n        ldrh r0, [r1, #0x32]\n        ldrh r1, [r3, #0x8]\n        sub r0, r1\n        add r0, #0x8\n        and r0, r2\n        lsl r0, #0x10\n        lsr r0, #0x10\n        str r0, [sp, #0x4]\n_code0_0:\n        mov r0, #0x0\n        ldrsb r0, [r7, r0]\n        ldr r1, [sp]\n        lsl r4, r1, #0x10\n        asr r4, #0x10\n        add r4, r0\n        lsl r4, #0x10\n        mov r0, #0x1\n        ldrsb r0, [r7, r0]\n        ldr r1, [sp, #0x4]\n        lsl r5, r1, #0x10\n        asr r5, #0x10\n        add r5, r0\n        lsl r5, #0x10\n        lsr r0, r4, #0x10\n        str r0, [sp, #0x8]\n        asr r4, #0x10\n        lsr r1, r5, #0x10\n        str r1, [sp, #0xc]\n        asr r5, #0x10\n        mov r0, r4\n        mov r1, r5\n        mov r2, r9\n        bl sub_080002D4\n        mov r6, r0\n        lsl r6, #0x18\n        lsr r6, #0x18\n        mov r0, #0x10\n        neg r0, r0\n        add r0, r4\n        mov r8, r0\n        mov r1, r5\n        mov r2, r9\n        bl sub_080002D4\n        mov r3, r0\n        lsl r3, #0x18\n        lsr r3, #0x18\n        sub r5, #0x10\n        mov r0, r4\n        mov r1, r5\n        mov r2, r9\n        str r3, [sp, #0x10]\n        bl sub_080002D4\n        mov r4, r0\n        lsl r4, #0x18\n        lsr r4, #0x18\n        mov r0, r8\n        mov r1, r5\n        mov r2, r9\n        bl sub_080002D4\n        ldr r3, [sp, #0x10]\n        orr r6, r3\n        orr r4, r6\n        orr r4, r0\n        lsl r4, #0x18\n        cmp r4, #0x0\n        beq _code0_1\n        add r7, #0x2\n        mov r0, #0x0\n        ldrsb r0, [r7, r0]\n        cmp r0, #0x7f\n        bne _code0_0\n        mov r0, #0x0\n        b _code0_2\n_data0_0:\n        .4byte gUnk_080CC090\n        .4byte gRoomControls\n_code0_1:\n        ldr r2, _data0_1\n        ldrh r0, [r2, #0x6]\n        ldr r1, [sp, #0x8]\n        add r0, r1\n        mov r1, r10\n        add r1, #0x7c\n        strh r0, [r1]\n        ldrh r0, [r2, #0x8]\n        ldr r1, [sp, #0xc]\n        add r0, r1\n        mov r1, r10\n        add r1, #0x7e\n        strh r0, [r1]\n        mov r0, #0x1\n_code0_2:\n        add sp, #0x14\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_1:\n        .4byte gRoomControls",
      "score": "131",
      "id": 174
    },
    {
      "name": "sub_0806A674",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"script.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n\nextern void sub_0806A8C8(Entity*);\n\nextern void (*gUnk_08112260[])(Entity*);\nextern void (*gUnk_08112278[])(Entity*);\n\nextern void script_08012F0C;\n\nextern void sub_08078850(Entity*, u32, u32, u32*);\nextern u32 gUnk_0811229C;\n\nextern void sub_0807F950(Entity* this, ScriptExecutionContext* context);\n\nextern u8 gUnk_081122A0[];\n\nvoid sub_0806A9B0(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806A914(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806A674(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_0806A674\nsub_0806A674:\n        push {r4, lr}\n        sub sp, #0x8\n        mov r4, r0\n        ldr r1, _data0_0\n        mov r0, sp\n        mov r2, #0x8\n        bl memcpy\n        ldrb r3, [r4, #0xc]\n        cmp r3, #0x1\n        beq _code0_3\n        cmp r3, #0x1\n        bgt _code0_0\n        cmp r3, #0x0\n        beq _code0_2\n        b _code0_17\n_data0_0:\n        .4byte gUnk_08112294\n_code0_0:\n        cmp r3, #0x2\n        bne _code0_1\n        b _code0_16\n_code0_1:\n        b _code0_17\n_code0_2:\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        mov r2, r4\n        add r2, #0x29\n        ldrb r1, [r2]\n        sub r0, #0x9\n        and r0, r1\n        mov r1, #0x6\n        orr r0, r1\n        strb r0, [r2]\n        mov r0, r4\n        mov r1, #0x13\n        bl InitializeAnimation\n        b _code0_17\n_code0_3:\n        ldr r0, _data0_1\n        ldr r0, [r0]\n        mov r1, #0x80\n        lsl r1, #0x1\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        mov r0, #0x0\n        mov r1, #0x2\n        strb r1, [r4, #0xc]\n        mov r1, r4\n        add r1, #0x63\n        strb r0, [r1]\n        sub r1, #0x1\n        strb r0, [r1]\n        b _code0_17\n_data0_1:\n        .4byte gActiveScriptInfo\n_code0_4:\n        ldr r0, [r4, #0x50]\n        add r0, #0x58\n        ldrb r0, [r0]\n        cmp r0, #0x9\n        bne _code0_12\n        mov r2, r4\n        add r2, #0x29\n        ldrb r0, [r2]\n        mov r1, #0x8\n        neg r1, r1\n        and r1, r0\n        mov r0, #0x3\n        orr r1, r0\n        strb r1, [r2]\n        ldrb r2, [r4, #0xe]\n        cmp r2, #0x0\n        bne _code0_5\n        bl Random\n        mov r2, r0\n        mov r1, #0x7\n        and r0, r1\n        strb r0, [r4, #0xe]\n        lsr r0, r2, #0x8\n        mov r1, #0x7\n        and r0, r1\n        add r0, sp\n        ldrb r1, [r0]\n        mov r0, r4\n        add r0, #0x68\n        strb r1, [r0]\n        b _code0_8\n_code0_5:\n        ldr r0, _data0_2\n        ldr r0, [r0]\n        mov r1, #0x3\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_8\n        sub r0, r2, #0x1\n        strb r0, [r4, #0xe]\n        mov r2, r4\n        add r2, #0x62\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        mov r1, r4\n        add r1, #0x68\n        cmp r0, #0x0\n        bgt _code0_6\n        strb r3, [r1]\n_code0_6:\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        cmp r0, #0xf\n        ble _code0_7\n        mov r0, #0xff\n        strb r0, [r1]\n_code0_7:\n        ldrb r0, [r1]\n        ldrb r1, [r2]\n        add r0, r1\n        strb r0, [r2]\n_code0_8:\n        ldrb r2, [r4, #0xf]\n        cmp r2, #0x0\n        bne _code0_9\n        bl Random\n        mov r2, r0\n        mov r1, #0x7\n        and r0, r1\n        strb r0, [r4, #0xf]\n        lsr r0, r2, #0x8\n        mov r1, #0x7\n        and r0, r1\n        add r0, sp\n        ldrb r1, [r0]\n        mov r0, r4\n        add r0, #0x69\n        strb r1, [r0]\n        b _code0_17\n_data0_2:\n        .4byte gScreenTransition\n_code0_9:\n        ldr r0, _data0_3\n        ldr r0, [r0]\n        lsr r0, #0x4\n        mov r1, #0x3\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_17\n        sub r0, r2, #0x1\n        strb r0, [r4, #0xf]\n        mov r3, r4\n        add r3, #0x63\n        mov r0, #0x0\n        ldrsb r0, [r3, r0]\n        mov r2, r4\n        add r2, #0x69\n        cmp r0, #0x0\n        blt _code0_10\n        mov r0, #0xff\n        strb r0, [r2]\n_code0_10:\n        mov r1, #0x0\n        ldrsb r1, [r3, r1]\n        mov r0, #0x8\n        neg r0, r0\n        cmp r1, r0\n        bgt _code0_11\n        mov r0, #0x1\n        strb r0, [r2]\n_code0_11:\n        ldrb r0, [r2]\n        ldrb r1, [r3]\n        add r0, r1\n        strb r0, [r3]\n        b _code0_17\n_data0_3:\n        .4byte gScreenTransition\n_code0_12:\n        mov r2, r4\n        add r2, #0x29\n        ldrb r0, [r2]\n        mov r1, #0x8\n        neg r1, r1\n        and r1, r0\n        mov r0, #0x6\n        orr r1, r0\n        strb r1, [r2]\n        mov r1, r4\n        add r1, #0x62\n        ldrb r0, [r1]\n        mov r2, #0x0\n        ldrsb r2, [r1, r2]\n        cmp r2, #0x0\n        beq _code0_14\n        cmp r2, #0x0\n        ble _code0_13\n        sub r0, #0x1\n        strb r0, [r1]\n_code0_13:\n        ldrb r2, [r1]\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        bge _code0_14\n        add r0, r2, #0x1\n        strb r0, [r1]\n_code0_14:\n        mov r1, r4\n        add r1, #0x63\n        ldrb r0, [r1]\n        mov r2, #0x0\n        ldrsb r2, [r1, r2]\n        cmp r2, #0x0\n        beq _code0_17\n        cmp r2, #0x0\n        ble _code0_15\n        sub r0, #0x1\n        strb r0, [r1]\n_code0_15:\n        ldrb r2, [r1]\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        bge _code0_17\n        add r0, r2, #0x1\n        strb r0, [r1]\n        b _code0_17\n_code0_16:\n        mov r0, r4\n        bl GetNextFrame\n_code0_17:\n        add sp, #0x8\n        pop {r4, pc}",
      "score": "234",
      "id": 175
    },
    {
      "name": "sub_0806AA50",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"script.h\"\n#include \"audio.h\"\n#include \"functions.h\"\n#include \"random.h\"\n#include \"flags.h\"\n#include \"textbox.h\"\n\nextern void sub_0806A8C8(Entity*);\n\nextern void (*gUnk_08112260[])(Entity*);\nextern void (*gUnk_08112278[])(Entity*);\n\nextern void script_08012F0C;\n\nextern void sub_08078850(Entity*, u32, u32, u32*);\nextern u32 gUnk_0811229C;\n\nextern void sub_0807F950(Entity* this, ScriptExecutionContext* context);\n\nextern u8 gUnk_081122A0[];\n\nvoid sub_0806A9B0(Entity*, ScriptExecutionContext*);\n\nvoid sub_0806A914(Entity* this);\n\n// end of existing headers\n\nvoid sub_0806AA50(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_0806AA50\nsub_0806AA50:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r6, r0\n        mov r5, r1\n        ldrb r0, [r5, #0x18]\n        cmp r0, #0x1\n        beq _code0_12\n        cmp r0, #0x1\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_14\n_code0_0:\n        cmp r0, #0x2\n        beq _code0_13\n        b _code0_14\n_code0_1:\n        str r0, [r5, #0x14]\n        mov r0, #0x8f\n        bl CheckLocalFlag\n        cmp r0, #0x0\n        bne _code0_2\n        ldr r2, _data0_0\n        b _code0_4\n_data0_0:\n        .4byte gUnk_081122A8\n_code0_2:\n        mov r0, #0x15\n        bl GetInventoryValue\n        cmp r0, #0x0\n        bne _code0_3\n        ldr r2, _data0_1\n        b _code0_4\n_data0_1:\n        .4byte gUnk_081122B0\n_code0_3:\n        ldr r2, _data0_2\n_code0_4:\n        ldr r1, _data0_2+0x4\n        ldr r0, [r1, #0x68]\n        lsl r0, #0x1\n        add r0, r2\n        ldrh r7, [r0]\n        mov r8, r1\n        mov r4, r8\n        ldr r0, [r4, #0x68]\n        add r0, #0x1\n        str r0, [r4, #0x68]\n        cmp r0, #0x2\n        bls _code0_5\n        mov r0, #0x0\n        str r0, [r4, #0x68]\n_code0_5:\n        mov r0, r7\n        mov r1, r6\n        bl TextboxNoOverlap\n        ldr r0, [r5, #0x4]\n        cmp r0, #0x1\n        beq _code0_7\n        cmp r0, #0x1\n        blo _code0_6\n        cmp r0, #0x2\n        beq _code0_8\n        b _code0_10\n_data0_2:\n        .4byte gUnk_081122B8\n        .4byte gRoomVars\n_code0_6:\n        mov r0, r4\n        add r0, #0xac\n        str r6, [r0]\n        mov r0, r6\n        mov r1, #0x7\n        bl PrependEntityToList\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r6, #0x20]\n        b _code0_10\n_code0_7:\n        mov r0, r4\n        add r0, #0xac\n        ldr r0, [r0]\n        mov r1, #0x7\n        bl FindNextDuplicateID\n        mov r1, r0\n        mov r0, r4\n        add r0, #0xb0\n        b _code0_9\n_code0_8:\n        mov r0, r8\n        add r0, #0xb0\n        ldr r0, [r0]\n        mov r1, #0x7\n        bl FindNextDuplicateID\n        mov r1, r0\n        mov r0, r8\n        add r0, #0xb4\n_code0_9:\n        str r1, [r0]\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r1, #0x20]\n_code0_10:\n        ldr r0, _data0_3\n        cmp r7, r0\n        bne _code0_11\n        mov r0, #0x8f\n        bl SetLocalFlag\n        mov r0, #0x1\n        str r0, [r5, #0x14]\n_code0_11:\n        mov r0, #0x1\n        strb r0, [r5, #0x18]\n        b _code0_14\n_data0_3:\n        .4byte 0x441e\n_code0_12:\n        ldr r0, _data0_4\n        ldr r1, [r5, #0x4]\n        lsl r1, #0x2\n        add r0, #0xac\n        add r1, r0\n        ldr r1, [r1]\n        mov r2, #0x36\n        ldrsh r0, [r1, r2]\n        cmp r0, #0x0\n        blt _code0_14\n        mov r0, #0xc0\n        lsl r0, #0x9\n        str r0, [r1, #0x20]\n        mov r0, #0x2\n        strb r0, [r5, #0x18]\n        b _code0_14\n_data0_4:\n        .4byte gRoomVars\n_code0_13:\n        mov r1, #0x36\n        ldrsh r0, [r6, r1]\n        cmp r0, #0x0\n        bge _code0_15\n_code0_14:\n        ldr r1, _data0_5\n        mov r0, #0x0\n        strb r0, [r1, #0x6]\n_code0_15:\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}\n_data0_5:\n        .4byte gActiveScriptInfo",
      "score": "153",
      "id": 176
    },
    {
      "name": "sub_08050B3C",
      "projectId": "1",
      "cCode": "#include \"fileScreen.h\"\n#include \"main.h\"\n#include \"player.h\"\n#include \"utils.h\"\n#include \"screen.h\"\n#include \"menu.h\"\n#include \"random.h\"\n#include \"textbox.h\"\n#include \"object.h\"\n#include \"functions.h\"\n\n// copy, erase, start\n#define NUM_FILE_OPERATIONS 3\n\n// end of existing headers\n\nvoid sub_08050B3C(u16* arg0) {\n    unk_08050B3C sp;\n    int var0;\n    int var1;\n    int var2;\n    int var3;\n    int var4;\n    int var5;\n    int var6;\n    int var7;\n    u16* var8;\n\n    sp.unk0 = arg0;\n    var0 = gSave.stats.health / 2;\n    if (var0 == 0) {\n        var0 = 1;\n    }\n\n    var1 = gSave.stats.maxHealth / 2;\n    if (var1 == 0) {\n        return;\n    }\n\n    if (var0 > var1) {\n        var0 = var1;\n    }\n\n    sp.unk4 = var0 & 0x3;\n    var2 = var0 * 2;\n    var5 = var2;\n    if (var2 > 10) {\n        var5 = 10;\n    }\n\n    var6 = var2;\n    var6 -= 10;\n    var7 = var6;\n    if (var6 < 0) {\n        var7 = 0;\n    }\n\n    var1 = var1 >> 2;\n    var4 = var1;\n    if (var1 > 10) {\n        var1 = 10;\n    }\n\n    var4 -= 10;\n    sp.unk0[0] = 0xF24C;\n    DmaCopy16(3, &gUnk_080FC914[10 - var5], &sp.unk0[1], var1 * 2);\n    if (var4 > 0) {\n        sp.unk0[0x20] = 0xF24C;\n        DmaCopy16(3, &gUnk_080FC914[10 - var7], &sp.unk0[1], var4 * 2);\n    }\n\n    if (!sp.unk4) {\n        return;\n    }\n\n    var8 = sp.unk0;\n    if (var2 >= 10) {\n        var2 = var6;\n        var8 += 0x20;\n    }\n\n    var8[var2 + 1] = sp.unk4 - 0xDB3;\n}\n",
      "asmCode": "thumb_func_start sub_08050B3C\nsub_08050B3C:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        sub sp, #0x8\n        str r0, [sp]\n        ldr r1, _data0_0\n        mov r0, r1\n        add r0, #0xaa\n        ldrb r0, [r0]\n        lsr r2, r0, #0x1\n        cmp r2, #0x0\n        bne _code0_0\n        mov r2, #0x1\n_code0_0:\n        mov r0, r1\n        add r0, #0xab\n        ldrb r0, [r0]\n        lsr r3, r0, #0x1\n        cmp r3, #0x0\n        beq _code0_7\n        cmp r2, r3\n        ble _code0_1\n        mov r2, r3\n_code0_1:\n        mov r0, #0x3\n        and r0, r2\n        str r0, [sp, #0x4]\n        mov r0, r2\n        asr r5, r0, #0x2\n        mov r12, r5\n        cmp r5, #0xa\n        ble _code0_2\n        mov r2, #0xa\n        mov r12, r2\n_code0_2:\n        mov r6, r5\n        sub r6, #0xa\n        mov r9, r6\n        cmp r6, #0x0\n        bge _code0_3\n        mov r7, #0x0\n        mov r9, r7\n_code0_3:\n        mov r0, r3\n        asr r3, r0, #0x2\n        mov r0, r3\n        cmp r3, #0xa\n        ble _code0_4\n        mov r3, #0xa\n_code0_4:\n        mov r4, r0\n        sub r4, #0xa\n        ldr r2, [sp]\n        ldr r0, _data0_0+0x4\n        mov r10, r0\n        strh r0, [r2]\n        ldr r1, _data0_0+0x8\n        mov r7, #0xa\n        mov r8, r7\n        mov r0, r8\n        mov r7, r12\n        sub r0, r7\n        lsl r0, #0x1\n        ldr r7, _data0_0+0xc\n        mov r12, r7\n        add r0, r12\n        str r0, [r1]\n        add r0, r2, #0x2\n        str r0, [r1, #0x4]\n        mov r0, #0x80\n        lsl r0, #0x18\n        orr r3, r0\n        str r3, [r1, #0x8]\n        ldr r0, [r1, #0x8]\n        cmp r4, #0x0\n        ble _code0_5\n        add r2, #0x40\n        mov r3, r10\n        strh r3, [r2]\n        mov r7, r8\n        mov r3, r9\n        sub r0, r7, r3\n        lsl r0, #0x1\n        add r0, r12\n        str r0, [r1]\n        add r0, r2, #0x2\n        str r0, [r1, #0x4]\n        mov r7, #0x80\n        lsl r7, #0x18\n        orr r4, r7\n        str r4, [r1, #0x8]\n        ldr r0, [r1, #0x8]\n_code0_5:\n        ldr r0, [sp, #0x4]\n        cmp r0, #0x0\n        beq _code0_7\n        ldr r2, [sp]\n        cmp r5, #0x9\n        ble _code0_6\n        mov r5, r6\n        add r2, #0x40\n_code0_6:\n        lsl r0, r5, #0x1\n        add r0, r2\n        ldr r2, [sp, #0x4]\n        ldr r3, _data0_0+0x10\n        add r1, r2, r3\n        strh r1, [r0, #0x2]\n_code0_7:\n        add sp, #0x8\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gSave\n        .4byte 0xf24c\n        .4byte 0x40000d4\n        .4byte gUnk_080FC914\n        .4byte 0xfffff24d",
      "score": "125",
      "id": 178
    },
    {
      "name": "SittingPerson_Head",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"npc.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"random.h\"\n\nextern void (*gUnk_0810CBD8[])(Entity*);\n\nextern Dialog gUnk_0810CC08[];\n\nextern SpriteLoadData gUnk_0810CB78[];\nextern void sub_08096208(Entity*, u32);\n\n// end of existing headers\n\nvoid SittingPerson_Head(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start SittingPerson_Head\nSittingPerson_Head:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r5, [r4, #0xa]\n        lsl r5, #0x2\n        ldr r0, _data0_0\n        add r5, r0\n        mov r0, r4\n        add r0, #0x5a\n        ldrb r0, [r0]\n        mov r2, #0xf\n        and r2, r0\n        ldrb r0, [r5]\n        add r2, r0\n        mov r0, r4\n        mov r1, #0x0\n        bl SetExtraSpriteFrame\n        ldr r2, _data0_0+0x4\n        ldrb r1, [r4, #0x1e]\n        mov r0, #0x3\n        and r0, r1\n        ldrb r1, [r4, #0xa]\n        lsl r1, #0x2\n        add r0, r1\n        add r0, r2\n        ldrb r2, [r0]\n        ldrb r0, [r5, #0x1]\n        add r2, r0\n        mov r0, r4\n        mov r1, #0x1\n        bl SetExtraSpriteFrame\n        mov r0, r4\n        mov r1, #0x1\n        mov r2, #0x0\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r4\n        bl sub_0807000C\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gUnk_0810CBC0\n        .4byte gUnk_0810CD88",
      "score": "42",
      "id": 179
    },
    {
      "name": "sub_08063758",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"npc.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"random.h\"\n\nextern void (*gUnk_0810CBD8[])(Entity*);\n\nextern Dialog gUnk_0810CC08[];\n\nextern SpriteLoadData gUnk_0810CB78[];\nextern void sub_08096208(Entity*, u32);\n\n// end of existing headers\n\nvoid sub_08063758(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08063758\nsub_08063758:\n        push {r4, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xa]\n        lsl r1, r0, #0x1\n        add r1, r0\n        lsl r1, #0x2\n        ldr r0, _data0_0\n        add r1, r0\n        mov r0, r4\n        bl LoadExtraSpriteData\n        cmp r0, #0x0\n        beq _code0_2\n        mov r2, #0x1\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0xe]\n        and r1, r2\n        lsl r1, #0x6\n        ldrb r2, [r4, #0x18]\n        sub r0, #0x42\n        and r0, r2\n        orr r0, r1\n        strb r0, [r4, #0x18]\n        lsl r0, #0x19\n        cmp r0, #0x0\n        blt _code0_0\n        mov r0, #0x6\n        b _code0_1\n_data0_0:\n        .4byte gUnk_0810CB78\n_code0_0:\n        mov r0, #0x2\n_code0_1:\n        strb r0, [r4, #0x14]\n        ldrb r0, [r4, #0x14]\n        mov r1, #0x0\n        strb r0, [r4, #0xe]\n        mov r0, r4\n        add r0, #0x69\n        strb r1, [r0]\n        mov r0, r4\n        bl sub_0807DD50\n        mov r0, r4\n        bl sub_080637B8\n_code0_2:\n        pop {r4, pc}",
      "score": "48",
      "id": 180
    },
    {
      "name": "sub_08063850",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"npc.h\"\n#include \"functions.h\"\n#include \"save.h\"\n#include \"random.h\"\n\nextern void (*gUnk_0810CBD8[])(Entity*);\n\nextern Dialog gUnk_0810CC08[];\n\nextern SpriteLoadData gUnk_0810CB78[];\nextern void sub_08096208(Entity*, u32);\n\n// end of existing headers\n\nvoid sub_08063850(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08063850\nsub_08063850:\n        push {lr}\n        ldrb r3, [r0, #0x18]\n        lsl r3, #0x19\n        lsr r3, #0x1f\n        neg r2, r3\n        orr r2, r3\n        asr r2, #0x1f\n        mov r3, #0x4\n        and r2, r3\n        ldr r1, [r1, #0x4]\n        add r1, r2\n        ldrb r2, [r0, #0x14]\n        lsr r2, #0x1\n        add r1, r2\n        bl InitializeAnimation\n        pop {pc}",
      "score": "18",
      "id": 181
    },
    {
      "name": "sub_08028604",
      "projectId": "1",
      "cCode": "#include \"enemy.h\"\n#include \"entity.h\"\n#include \"random.h\"\n#include \"functions.h\"\n\nextern bool32 sub_0806FC80(Entity*, Entity*, u32);\nextern Entity* sub_08049DF4(u32);\n\nvoid sub_08028604(Entity*);\nvoid sub_08028754(Entity*);\nvoid sub_08028784(Entity*);\nvoid sub_080287E0(Entity*);\nvoid sub_08028728(Entity*);\nbool32 sub_080286CC(Entity*);\nbool32 sub_080288A4(Entity*);\nvoid sub_08028858(Entity*);\nvoid sub_080288C0(Entity*);\nbool32 sub_08028828(u32, u32);\nvoid sub_080287B4(Entity*);\n\nextern void (*const gUnk_080CC790[])(Entity*);\nextern void (*const gUnk_080CC7A8[])(Entity*);\nextern const u8 gUnk_080CC7BC[];\nextern const s8 gUnk_080CC7C0[];\nextern const u8 gUnk_080CC7D0[];\nextern const u16 gUnk_080CC7D8[];\n\nextern const Hitbox* const gUnk_080CC944[];\n\n// end of existing headers\n\nvoid sub_08028604(Entity* this) {\n    this->field_0xf = 0;\n    if (this->field_0x82.HALF.LO == 1) {\n        this->actionDelay = gUnk_080CC7BC[Random() & 3];\n        this->speed = 0x80;\n        if (sub_08049FA0(this) != 0) {\n            this->direction = gUnk_080CC7D0[Random() & 7] + 0x18 + (this->direction & 0x18);\n        } else {\n            u32 iVar3 = sub_08049EE4(this);\n            u32 uVar1;\n            if (this->field_0x82.HALF.HI == '\\0') {\n                uVar1 = gUnk_080CC7C0[Random() & 0xf];\n            } else {\n                uVar1 = gUnk_080CC7C0[Random() & 7];\n                this->actionDelay = this->actionDelay + 0x10;\n                this->field_0x82.HALF.HI--;\n            }\n            this->direction = iVar3 + uVar1 + (4U & 0x18);\n        }\n    } else {\n        this->actionDelay = 0xc;\n        this->speed = 0;\n    }\n\n    if (this->direction >> 2 != this->animationState) {\n        this->animationState = this->direction >> 2;\n        sub_080287E0(this);\n    }\n}\n",
      "asmCode": "thumb_func_start sub_08028604\nsub_08028604:\n        push {r4, r5, r6, lr}\n        mov r4, r0\n        mov r1, #0x0\n        strb r1, [r4, #0xf]\n        add r0, #0x82\n        ldrb r0, [r0]\n        cmp r0, #0x1\n        bne _code0_3\n        bl Random\n        ldr r2, _data0_0\n        mov r1, #0x3\n        and r1, r0\n        add r1, r2\n        ldrb r0, [r1]\n        strb r0, [r4, #0xe]\n        mov r0, #0x80\n        strh r0, [r4, #0x24]\n        mov r0, r4\n        bl sub_08049FA0\n        cmp r0, #0x0\n        beq _code0_0\n        bl Random\n        ldr r2, _data0_0+0x4\n        mov r1, #0x7\n        and r1, r0\n        add r1, r2\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        add r0, #0x18\n        ldrb r1, [r4, #0x15]\n        add r0, r1\n        mov r1, #0x18\n        and r0, r1\n        strb r0, [r4, #0x15]\n        b _code0_4\n_data0_0:\n        .4byte gUnk_080CC7BC\n        .4byte gUnk_080CC7D0\n_code0_0:\n        mov r0, r4\n        bl sub_08049EE4\n        mov r5, r0\n        mov r6, r4\n        add r6, #0x83\n        ldrb r0, [r6]\n        cmp r0, #0x0\n        bne _code0_1\n        bl Random\n        ldr r2, _data0_1\n        mov r1, #0xf\n        and r1, r0\n        add r1, r2\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        add r5, r0\n        b _code0_2\n_data0_1:\n        .4byte gUnk_080CC7C0\n_code0_1:\n        bl Random\n        ldr r2, _data0_2\n        mov r1, #0x7\n        and r1, r0\n        add r1, r2\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        add r5, r0\n        ldrb r0, [r4, #0xe]\n        add r0, #0x10\n        strb r0, [r4, #0xe]\n        ldrb r0, [r6]\n        sub r0, #0x1\n        strb r0, [r6]\n_code0_2:\n        add r0, r5, #0x4\n        mov r1, #0x18\n        and r0, r1\n        strb r0, [r4, #0x15]\n        b _code0_4\n_data0_2:\n        .4byte gUnk_080CC7C0\n_code0_3:\n        mov r0, #0xc\n        strb r0, [r4, #0xe]\n        strh r1, [r4, #0x24]\n        ldrb r0, [r4, #0x15]\n_code0_4:\n        lsr r5, r0, #0x2\n        ldrb r0, [r4, #0x14]\n        cmp r5, r0\n        beq _code0_5\n        strb r5, [r4, #0x14]\n        mov r0, r4\n        bl sub_080287E0\n_code0_5:\n        pop {r4, r5, r6, pc}",
      "score": "98",
      "id": 184
    },
    {
      "name": "sub_080650CC",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"script.h\"\n#include \"room.h\"\n#include \"textbox.h\"\n#include \"functions.h\"\n\nextern void CreateSpeechBubbleQuestionMark(Entity*, u32, u32);\nextern void CreateSpeechBubbleExclamationMark(Entity*, u32, u32);\n\nextern void (*const gUnk_0810FDC8[])(Entity*);\n\nextern void (*const gUnk_0810FDA4[])(Entity*);\n\nextern bool32 sub_08056338(void);\n\nextern void sub_08078850(Entity*, u32, u8, u32*);\nextern u32 gUnk_0810FDA0;\nextern u16 script_080142B0;\n\n// end of existing headers\n\nvoid sub_080650CC(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_080650CC\nsub_080650CC:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r5, r0\n        ldr r6, _data0_0\n        ldr r0, [r6, #0x68]\n        mov r1, #0x1\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_0\n        mov r1, #0x0\n        mov r0, #0x4\n        strb r0, [r5, #0xc]\n        strb r1, [r5, #0xd]\n        mov r0, r5\n        add r0, #0x84\n        ldr r0, [r0]\n        ldr r1, _data0_0+0x4\n        bl InitScriptExecutionContext\n        b _code0_5\n_data0_0:\n        .4byte gRoomVars\n        .4byte script_080143C0\n_code0_0:\n        mov r2, r5\n        add r2, #0x5a\n        ldrb r1, [r2]\n        mov r0, #0x20\n        and r0, r1\n        lsl r0, #0x18\n        lsr r4, r0, #0x18\n        cmp r4, #0x0\n        bne _code0_3\n        mov r3, r5\n        add r3, #0x39\n        mov r0, #0x0\n        ldrsb r0, [r3, r0]\n        cmp r0, #0x0\n        beq _code0_3\n        strb r4, [r3]\n        ldrb r0, [r5, #0xc]\n        add r0, #0x1\n        strb r0, [r5, #0xc]\n        mov r0, r5\n        mov r1, #0x7\n        bl InitializeAnimation\n        ldrb r0, [r6, #0x6]\n        cmp r0, #0x0\n        bne _code0_1\n        ldr r7, _data0_1\n        b _code0_2\n_data0_1:\n        .4byte 0x2c01\n_code0_1:\n        ldrb r0, [r6, #0x6]\n        bl GetSaleItemConfirmMessageID\n        mov r7, r0\n        ldrb r0, [r6, #0x6]\n        bl GetItemPrice\n        mov r8, r0\n        mov r0, #0x4\n        strb r0, [r5, #0xc]\n        strb r4, [r5, #0xd]\n        mov r0, r5\n        add r0, #0x84\n        ldr r0, [r0]\n        ldr r1, _data0_2\n        bl InitScriptExecutionContext\n_code0_2:\n        mov r0, r7\n        mov r1, r5\n        bl TextboxNoOverlap\n        ldr r1, _data0_2+0x4\n        mov r2, r8\n        lsl r0, r2, #0x10\n        lsr r0, #0x10\n        str r0, [r1, #0x10]\n        b _code0_5\n_data0_2:\n        .4byte script_08014384\n        .4byte gTextBox\n_code0_3:\n        ldrb r1, [r2]\n        mov r0, #0x40\n        and r0, r1\n        cmp r0, #0x0\n        beq _code0_4\n        ldr r4, _data0_3\n        bl Random\n        mov r1, #0xf\n        and r1, r0\n        add r1, r4\n        ldrb r1, [r1]\n        mov r0, r5\n        bl InitializeAnimation\n        b _code0_5\n_data0_3:\n        .4byte gUnk_0810FDB8\n_code0_4:\n        mov r0, r5\n        bl GetNextFrame\n_code0_5:\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "107",
      "id": 185
    },
    {
      "name": "Sturgeon",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"createObject.h\"\n#include \"flags.h\"\n#include \"script.h\"\n\nextern u16 gUnk_0810FA54[];\n\nextern SpriteLoadData gUnk_0810FA38;\n\nextern void sub_0806EE04(Entity*, void*, u32);\nextern u32 gUnk_0810FA5A;\nvoid sub_08064CC0(Entity* this);\n\nextern void (*const gUnk_0810FA44[])(Entity*);\nvoid sub_08064C9C(Entity* this);\n\n// end of existing headers\n\nvoid Sturgeon(Entity* this) {\n    u8 uVar2;\n\n    if ((this->flags & 2) == 0) {\n        gUnk_0810FA44[this->action](this);\n        sub_0806ED78(this);\n    } else {\n        uVar2 = this->action;\n        if (uVar2 == 0) {\n            if (LoadExtraSpriteData(this, &gUnk_0810FA38) != 0) {\n                this->action = 1;\n                this->actionDelay = 0;\n                sub_0807DD50(this);\n            }\n        } else {\n            if ((uVar2 & 0x80) != 0) {\n                if (UpdateFuseInteraction(this) != 0) {\n                    this->action = 1;\n                }\n            } else {\n                if (this->interactType == 2) {\n                    this->action = 0xff;\n                    this->interactType = uVar2 & 0x80;\n                    InitAnimationForceUpdate(this, sub_0806F5A4(GetFacingDirection(this, &gPlayerEntity)));\n                    sub_0806F118(this);\n                } else {\n                    sub_0807DD94(this, NULL);\n                    sub_08064C9C(this);\n                }\n            }\n        }\n    }\n}\n",
      "asmCode": "thumb_func_start Sturgeon\nSturgeon:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r1, [r4, #0x10]\n        mov r0, #0x2\n        and r0, r1\n        cmp r0, #0x0\n        bne _code0_0\n        ldr r0, _data0_0\n        ldrb r1, [r4, #0xc]\n        lsl r1, #0x2\n        add r1, r0\n        ldr r1, [r1]\n        mov r0, r4\n        bl _call_via_r1\n        mov r0, r4\n        bl sub_0806ED78\n        b _code0_4\n_data0_0:\n        .4byte gUnk_0810FA44\n_code0_0:\n        ldrb r1, [r4, #0xc]\n        mov r5, r1\n        cmp r5, #0x0\n        bne _code0_1\n        ldr r1, _data0_1\n        mov r0, r4\n        bl LoadExtraSpriteData\n        cmp r0, #0x0\n        beq _code0_4\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        strb r5, [r4, #0xe]\n        mov r0, r4\n        bl sub_0807DD50\n        b _code0_4\n_data0_1:\n        .4byte gUnk_0810FA38\n_code0_1:\n        mov r0, #0x80\n        and r0, r1\n        lsl r0, #0x18\n        lsr r3, r0, #0x18\n        cmp r3, #0x0\n        beq _code0_2\n        mov r0, r4\n        bl UpdateFuseInteraction\n        cmp r0, #0x0\n        beq _code0_4\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        b _code0_4\n_code0_2:\n        mov r2, r4\n        add r2, #0x39\n        mov r0, #0x0\n        ldrsb r0, [r2, r0]\n        cmp r0, #0x2\n        bne _code0_3\n        mov r0, #0xff\n        orr r0, r1\n        strb r0, [r4, #0xc]\n        strb r3, [r2]\n        ldr r1, _data0_2\n        mov r0, r4\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        mov r1, r0\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        mov r0, r4\n        bl sub_0806F118\n        b _code0_4\n_data0_2:\n        .4byte gPlayerEntity\n_code0_3:\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_0807DD94\n        mov r0, r4\n        bl sub_08064C9C\n_code0_4:\n        pop {r4, r5, pc}",
      "score": "84",
      "id": 187
    },
    {
      "name": "sub_08064B88",
      "projectId": "1",
      "cCode": "#include \"entity.h\"\n#include \"functions.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"createObject.h\"\n#include \"flags.h\"\n#include \"script.h\"\n\nextern u16 gUnk_0810FA54[];\n\nextern SpriteLoadData gUnk_0810FA38;\n\nextern void sub_0806EE04(Entity*, void*, u32);\nextern u32 gUnk_0810FA5A;\nvoid sub_08064CC0(Entity* this);\n\nextern void (*const gUnk_0810FA44[])(Entity*);\nvoid sub_08064C9C(Entity* this);\n\n// end of existing headers\n\nvoid sub_08064B88(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08064B88\nsub_08064B88:\n        push {r4, r5, lr}\n        mov r4, r0\n        mov r5, r4\n        add r5, #0x39\n        mov r0, #0x0\n        ldrsb r0, [r5, r0]\n        cmp r0, #0x1\n        beq _code0_5\n        cmp r0, #0x1\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_5\n_code0_0:\n        cmp r0, #0x2\n        beq _code0_3\n        b _code0_5\n_code0_1:\n        mov r0, r4\n        bl sub_0806EE20\n        mov r2, r0\n        mov r0, r4\n        add r0, #0x3e\n        ldrb r0, [r0]\n        strb r0, [r4, #0x14]\n        cmp r2, #0x0\n        beq _code0_2\n        mov r1, #0x7f\n        and r1, r2\n        mov r0, r4\n        bl InitializeAnimation\n_code0_2:\n        mov r0, r4\n        bl GetNextFrame\n        b _code0_7\n_code0_3:\n        mov r0, #0x3\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        bl GetAnimationState\n        mov r1, r0\n        cmp r1, #0x0\n        bge _code0_4\n        ldrb r1, [r4, #0x14]\n_code0_4:\n        mov r0, r4\n        add r0, #0x58\n        ldrb r0, [r0]\n        strb r0, [r4, #0xf]\n        mov r0, r4\n        bl InitializeAnimation\n        mov r0, #0x0\n        strb r0, [r5]\n        mov r0, r4\n        bl sub_0806F118\n        b _code0_7\n_code0_5:\n        mov r0, #0x2\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        bl GetAnimationState\n        mov r1, r0\n        cmp r1, #0x0\n        bge _code0_6\n        ldrb r1, [r4, #0x14]\n_code0_6:\n        mov r0, r4\n        add r0, #0x58\n        ldrb r0, [r0]\n        strb r0, [r4, #0xf]\n        mov r0, r4\n        bl InitializeAnimation\n        mov r1, r4\n        add r1, #0x39\n        mov r0, #0x0\n        strb r0, [r1]\n        mov r0, r4\n        bl sub_08064CD8\n_code0_7:\n        pop {r4, r5, pc}",
      "score": "82",
      "id": 188
    },
    {
      "name": "Syrup_Head",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"npc.h\"\n#include \"script.h\"\n#include \"functions.h\"\n#include \"object.h\"\n#include \"random.h\"\n\nextern void (*gUnk_081121D4[])(Entity*);\n\nextern SpriteLoadData gUnk_081121C4;\nextern SpriteLoadData gUnk_081121B4;\n\nextern void sub_0806A26C(Entity*);\n\n// end of existing headers\n\nvoid Syrup_Head(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start Syrup_Head\nSyrup_Head:\n        push {r4, r5, r6, lr}\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6}\n        mov r5, r0\n        add r0, #0x5b\n        ldrb r0, [r0]\n        mov r1, #0x1\n        mov r9, r1\n        mov r2, r9\n        and r2, r0\n        mov r9, r2\n        mov r0, r5\n        add r0, #0x5a\n        ldrb r1, [r0]\n        lsr r0, r1, #0x4\n        mov r8, r0\n        mov r0, #0x7\n        mov r2, r8\n        and r2, r0\n        mov r8, r2\n        mov r6, #0x7\n        and r6, r1\n        ldrb r4, [r5, #0x14]\n        lsr r4, #0x1\n        ldr r1, _data0_0\n        ldrb r0, [r5, #0x1e]\n        lsl r0, #0x2\n        add r0, r4, r0\n        add r0, r1\n        ldrb r2, [r0]\n        add r2, #0x10\n        mov r0, r5\n        mov r1, #0x0\n        bl SetExtraSpriteFrame\n        ldr r0, _data0_0+0x4\n        add r4, r0\n        ldrb r2, [r4]\n        mov r0, r5\n        mov r1, #0x0\n        bl sub_0806FF48\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, r8\n        bl SetExtraSpriteFrame\n        add r6, #0x1c\n        mov r0, r5\n        mov r1, #0x2\n        mov r2, r6\n        bl SetExtraSpriteFrame\n        mov r0, #0x1a\n        add r9, r0\n        mov r0, r5\n        mov r1, #0x3\n        mov r2, r9\n        bl SetExtraSpriteFrame\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x0\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r5\n        mov r1, #0x1\n        mov r2, #0x3\n        bl SetSpriteSubEntryOffsetData2\n        mov r0, r5\n        bl sub_0807000C\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, pc}\n_data0_0:\n        .4byte gUnk_081121E4\n        .4byte gUnk_08112204",
      "score": "75",
      "id": 189
    },
    {
      "name": "DispMessageFrame",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"room.h\"\n#include \"entity.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"structures.h\"\n#include \"save.h\"\n\n#define TEXTBOX_ADVANCE_KEYS (A_BUTTON | B_BUTTON | DPAD_ANY | R_BUTTON)\n#define TEXTBOX_PRESS_ANY_ADVANCE_KEYS ((gInput.newKeys & TEXTBOX_ADVANCE_KEYS) != 0)\n\n#define TEXTBOX_WIDTH 0x20\n#define TEXTBOX_POSITION_INDEX(window) ((window).yPos * TEXTBOX_WIDTH + (window).xPos)\n\nextern void WriteBit(u32*, u32);\nextern void sub_0805EF40(u8*, u8*);\nextern void sub_0801C4A0(u32, u32);\nextern void sub_0801C494(void);\nextern void sub_0805F918(u32, u32, u32);\nextern u32 sub_0801D51C(u32, u8*, u32);\n\nu32 sub_08056FEC(u32, u8*);\n\nu16 sub_08056750(CurrentTextBox*);\nu32 sub_0805EFE8(u8*);\nvoid sub_08056ABC(u32, u32);\nvoid sub_080569C4(CurrentTextBox*, u32);\nu16 sub_0805F7DC(u32, u8*);\nu32 sub_GetFontStrWidth(u8*, u32);\nvoid sub_08056FBC(CurrentTextBox*);\nvoid SetDoTextBox(u32 doTextbox);\nvoid Load_02000D00_Asyc(void);\n\nvoid DeleteWindow(void);\nvoid CreateWindow(void);\nu32 CalcWindowSize(u32 fade);\n\nvoid DispMessageFrame(u16*, u32, u32, u32);\nvoid DispString(void);\nvoid DispCursor(void);\n\ntypedef u32 (*TextBoxFunction)(void);\n\nu32 TextBoxFunction0(void);\nu32 TextBoxFunction1(void);\nu32 HandleTextBox(void);\nu32 TextBoxFunctionOpen(void);\nu32 TextBoxFunctionClose(void);\nu32 TextBoxFunction5(void);\n\n// end of existing headers\n\n\n         void DispMessageFrame(u16* buffer, u32 width_, u32 height_, u32 flags_) {\n\n}",
      "asmCode": "thumb_func_start DispMessageFrame\nDispMessageFrame:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r7, r0\n        mov r4, r1\n        mov r6, r2\n        mov r8, r3\n        mov r3, r7\n        lsl r0, r6, #0x6\n        add r0, #0x40\n        add r2, r3, r0\n        mov r0, r8\n        strh r0, [r3]\n        add r3, #0x2\n        mov r1, #0x80\n        lsl r1, #0x4\n        mov r9, r1\n        mov r0, r8\n        mov r5, r9\n        orr r0, r5\n        strh r0, [r2]\n        add r2, #0x2\n        cmp r4, #0x0\n        ble _code0_2\n        mov r0, r8\n        add r0, #0x1\n        strh r0, [r3]\n        add r3, #0x2\n        mov r1, r0\n        orr r1, r5\n        strh r1, [r2]\n        add r2, #0x2\n        sub r4, #0x2\n        mov r1, r4\n        sub r4, #0x1\n        mov r12, r0\n        cmp r1, #0x0\n        ble _code0_1\n        mov r5, r8\n        add r5, #0x2\n        mov r1, r5\n        mov r0, r9\n        orr r1, r0\n_code0_0:\n        strh r5, [r3]\n        add r3, #0x2\n        strh r1, [r2]\n        add r2, #0x2\n        mov r0, r4\n        sub r4, #0x1\n        cmp r0, #0x0\n        bgt _code0_0\n_code0_1:\n        mov r1, #0x80\n        lsl r1, #0x3\n        mov r0, r1\n        mov r1, r12\n        orr r1, r0\n        strh r1, [r3]\n        add r3, #0x2\n        mov r5, #0xc0\n        lsl r5, #0x4\n        mov r0, r5\n        mov r1, r12\n        orr r1, r0\n        strh r1, [r2]\n        add r2, #0x2\n_code0_2:\n        mov r0, #0x80\n        lsl r0, #0x3\n        mov r5, r0\n        mov r0, r8\n        orr r0, r5\n        strh r0, [r3]\n        mov r0, #0xc0\n        lsl r0, #0x4\n        mov r1, r0\n        mov r0, r8\n        orr r0, r1\n        strh r0, [r2]\n        add r7, #0x40\n        add r3, #0x40\n        cmp r6, #0x0\n        ble _code0_5\n        mov r0, r8\n        add r0, #0x3\n        strh r0, [r7]\n        mov r1, r0\n        orr r1, r5\n        strh r1, [r3]\n        add r7, #0x40\n        add r3, #0x40\n        sub r6, #0x2\n        mov r1, r6\n        sub r6, #0x1\n        mov r2, r0\n        cmp r1, #0x0\n        ble _code0_4\n        mov r4, r8\n        add r4, #0x4\n        mov r1, r4\n        orr r1, r5\n_code0_3:\n        strh r4, [r7]\n        strh r1, [r3]\n        add r7, #0x40\n        add r3, #0x40\n        mov r0, r6\n        sub r6, #0x1\n        cmp r0, #0x0\n        bgt _code0_3\n_code0_4:\n        mov r1, #0x80\n        lsl r1, #0x4\n        mov r0, r1\n        mov r1, r2\n        orr r1, r0\n        strh r1, [r7]\n        mov r5, #0xc0\n        lsl r5, #0x4\n        mov r0, r5\n        orr r2, r0\n        strh r2, [r3]\n_code0_5:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}",
      "score": "131",
      "id": 191
    },
    {
      "name": "TextBoxFunction1",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"room.h\"\n#include \"entity.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"structures.h\"\n#include \"save.h\"\n\n#define TEXTBOX_ADVANCE_KEYS (A_BUTTON | B_BUTTON | DPAD_ANY | R_BUTTON)\n#define TEXTBOX_PRESS_ANY_ADVANCE_KEYS ((gInput.newKeys & TEXTBOX_ADVANCE_KEYS) != 0)\n\n#define TEXTBOX_WIDTH 0x20\n#define TEXTBOX_POSITION_INDEX(window) ((window).yPos * TEXTBOX_WIDTH + (window).xPos)\n\nextern void WriteBit(u32*, u32);\nextern void sub_0805EF40(u8*, u8*);\nextern void sub_0801C4A0(u32, u32);\nextern void sub_0801C494(void);\nextern void sub_0805F918(u32, u32, u32);\nextern u32 sub_0801D51C(u32, u8*, u32);\n\nu32 sub_08056FEC(u32, u8*);\n\nu16 sub_08056750(CurrentTextBox*);\nu32 sub_0805EFE8(u8*);\nvoid sub_08056ABC(u32, u32);\nvoid sub_080569C4(CurrentTextBox*, u32);\nu16 sub_0805F7DC(u32, u8*);\nu32 sub_GetFontStrWidth(u8*, u32);\nvoid sub_08056FBC(CurrentTextBox*);\nvoid SetDoTextBox(u32 doTextbox);\nvoid Load_02000D00_Asyc(void);\n\nvoid DeleteWindow(void);\nvoid CreateWindow(void);\nu32 CalcWindowSize(u32 fade);\n\nvoid DispMessageFrame(u16*, u32, u32, u32);\nvoid DispString(void);\nvoid DispCursor(void);\n\ntypedef u32 (*TextBoxFunction)(void);\n\nu32 TextBoxFunction0(void);\nu32 TextBoxFunction1(void);\nu32 HandleTextBox(void);\nu32 TextBoxFunctionOpen(void);\nu32 TextBoxFunctionClose(void);\nu32 TextBoxFunction5(void);\n\n// end of existing headers\n\nu32 TextBoxFunction1(void) {\n    u32 uVar1;\n    char* dest;\n    u32 i;\n    char c;\n\n    MemClear((void*)&gNewWindow, 8);\n    MemClear((void*)&gUnk_02024030, 0x18);\n    MemClear((void*)&gCurrentTextBox, sizeof(gCurrentTextBox));\n    MemCopy(&gTextBox, &gCurrentTextBox, sizeof(gTextBox));\n    if (gCurrentTextBox.textBox.textSpeed == 0x63) {\n        gCurrentTextBox.textBox.textSpeed = gUnk_02000000->messageSpeed;\n    }\n    gCurrentTextBox._9c = 0xff;\n    sub_0805EEB4(&gCurrentTextBox._20, gCurrentTextBox.textBox.textIndex);\n    gCurrentTextBox.playerName[0] = 2;\n    gCurrentTextBox.playerName[1] = 0xe;\n    dest = &gCurrentTextBox.playerName[2];\n\n    for (i = 0; i < FILENAME_LENGTH; ++i) {\n        c = gSave.playerName[i];\n        if (c == '\\0')\n            break;\n        *dest = c;\n        dest++;\n    }\n\n    dest[0] = 2;\n    dest[1] = 15;\n    dest[2] = 0;\n    sub_08056FBC(&gCurrentTextBox);\n    gCurrentTextBox._2c = &gUnk_08107BE0;\n    gCurrentTextBox._50.unk8 = gUnk_02000D00;\n    gCurrentTextBox._50.unk4 = 0xd0;\n    SetDoTextBox(2);\n    sub_08056BDC(0);\n    sub_080564C8(2);\n    return 1;\n}\n",
      "asmCode": "thumb_func_start TextBoxFunction1\nTextBoxFunction1:\n        push {r4, lr}\n        ldr r0, _data0_0\n        mov r1, #0x8\n        bl MemClear\n        ldr r0, _data0_0+0x4\n        mov r1, #0x18\n        bl MemClear\n        ldr r4, _data0_0+0x8\n        mov r0, r4\n        mov r1, #0xa8\n        bl MemClear\n        ldr r0, _data0_0+0xc\n        mov r1, r4\n        mov r2, #0x20\n        bl MemCopy\n        ldrb r0, [r4, #0x2]\n        cmp r0, #0x63\n        bne _code0_0\n        mov r0, #0x80\n        lsl r0, #0x12\n        ldrb r0, [r0, #0x5]\n        strb r0, [r4, #0x2]\n_code0_0:\n        mov r1, r4\n        add r1, #0x9c\n        mov r0, #0xff\n        strb r0, [r1]\n        mov r0, r4\n        add r0, #0x20\n        ldrh r1, [r4, #0x8]\n        bl sub_0805EEB4\n        mov r3, r4\n        add r3, #0x5c\n        mov r0, #0x2\n        strb r0, [r3]\n        mov r0, #0xe\n        strb r0, [r3, #0x1]\n        add r3, #0x2\n        mov r2, #0x0\n        ldr r0, _data0_0+0x10\n        add r0, #0x80\n        ldrb r1, [r0]\n        cmp r1, #0x0\n        beq _code0_2\n        mov r4, r0\n_code0_1:\n        strb r1, [r3]\n        add r3, #0x1\n        add r2, #0x1\n        cmp r2, #0x5\n        bhi _code0_2\n        add r0, r2, r4\n        ldrb r1, [r0]\n        cmp r1, #0x0\n        bne _code0_1\n_code0_2:\n        mov r0, #0x2\n        strb r0, [r3]\n        mov r0, #0xf\n        strb r0, [r3, #0x1]\n        mov r0, #0x0\n        strb r0, [r3, #0x2]\n        ldr r4, _data0_0+0x8\n        mov r0, r4\n        bl sub_08056FBC\n        ldr r0, _data0_0+0x14\n        str r0, [r4, #0x2c]\n        ldr r0, _data0_0+0x18\n        str r0, [r4, #0x58]\n        add r4, #0x54\n        mov r0, #0xd0\n        strh r0, [r4]\n        mov r0, #0x2\n        bl SetDoTextBox\n        mov r0, #0x0\n        bl sub_08056BDC\n        mov r0, #0x2\n        bl sub_080564C8\n        mov r0, #0x1\n        pop {r4, pc}\n_data0_0:\n        .4byte gNewWindow\n        .4byte gUnk_02024030\n        .4byte gCurrentTextBox\n        .4byte gTextBox\n        .4byte gSave\n        .4byte gUnk_08107BE0\n        .4byte gUnk_02000D00",
      "score": "90",
      "id": 192
    },
    {
      "name": "sub_08056FEC",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"audio.h\"\n#include \"room.h\"\n#include \"entity.h\"\n#include \"utils.h\"\n#include \"functions.h\"\n#include \"textbox.h\"\n#include \"structures.h\"\n#include \"save.h\"\n\n#define TEXTBOX_ADVANCE_KEYS (A_BUTTON | B_BUTTON | DPAD_ANY | R_BUTTON)\n#define TEXTBOX_PRESS_ANY_ADVANCE_KEYS ((gInput.newKeys & TEXTBOX_ADVANCE_KEYS) != 0)\n\n#define TEXTBOX_WIDTH 0x20\n#define TEXTBOX_POSITION_INDEX(window) ((window).yPos * TEXTBOX_WIDTH + (window).xPos)\n\nextern void WriteBit(u32*, u32);\nextern void sub_0805EF40(u8*, u8*);\nextern void sub_0801C4A0(u32, u32);\nextern void sub_0801C494(void);\nextern void sub_0805F918(u32, u32, u32);\nextern u32 sub_0801D51C(u32, u8*, u32);\n\nu32 sub_08056FEC(u32, u8*);\n\nu16 sub_08056750(CurrentTextBox*);\nu32 sub_0805EFE8(u8*);\nvoid sub_08056ABC(u32, u32);\nvoid sub_080569C4(CurrentTextBox*, u32);\nu16 sub_0805F7DC(u32, u8*);\nu32 sub_GetFontStrWidth(u8*, u32);\nvoid sub_08056FBC(CurrentTextBox*);\nvoid SetDoTextBox(u32 doTextbox);\nvoid Load_02000D00_Asyc(void);\n\nvoid DeleteWindow(void);\nvoid CreateWindow(void);\nu32 CalcWindowSize(u32 fade);\n\nvoid DispMessageFrame(u16*, u32, u32, u32);\nvoid DispString(void);\nvoid DispCursor(void);\n\ntypedef u32 (*TextBoxFunction)(void);\n\nu32 TextBoxFunction0(void);\nu32 TextBoxFunction1(void);\nu32 HandleTextBox(void);\nu32 TextBoxFunctionOpen(void);\nu32 TextBoxFunctionClose(void);\nu32 TextBoxFunction5(void);\n\n// end of existing headers\n\nu32 sub_08056FEC(u32 param_1, u8* param_2) {\n    u32 uVar1;\n    int iVar2;\n    int iVar3;\n    int iVar4;\n    u8 local_1c[8];\n\n    uVar1 = sub_0801D51C(param_1, param_2, param_1);\n    uVar1 = uVar1 & 0xfffffff;\n    iVar4 = 0;\n    do {\n        local_1c[iVar4++] = uVar1 & 0xf;\n        uVar1 = uVar1 / 16;\n    } while (uVar1 != 0);\n    for (iVar3 = 0; --iVar4 >= 0; iVar3++) {\n        param_2[iVar3] = local_1c[iVar4] | 0x30;\n    }\n    param_2[iVar3] = 0;\n    return iVar4;\n}\n",
      "asmCode": "thumb_func_start sub_08056FEC\nsub_08056FEC:\n        push {r4, r5, r6, r7, lr}\n        sub sp, #0x8\n        mov r2, r0\n        mov r5, r1\n        bl sub_0801D51C\n        mov r2, r0\n        ldr r0, _data0_0\n        and r2, r0\n        mov r4, #0x0\n        mov r3, #0xf\n_code0_0:\n        mov r0, sp\n        add r1, r0, r4\n        mov r0, r2\n        and r0, r3\n        strb r0, [r1]\n        add r4, #0x1\n        lsr r2, #0x4\n        cmp r2, #0x0\n        bne _code0_0\n        mov r3, #0x0\n        sub r2, r4, #0x1\n        cmp r2, #0x0\n        blt _code0_2\n        mov r6, #0x30\n_code0_1:\n        add r1, r5, r3\n        mov r7, sp\n        add r0, r7, r2\n        ldrb r0, [r0]\n        orr r0, r6\n        strb r0, [r1]\n        add r3, #0x1\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_1\n_code0_2:\n        add r1, r5, r3\n        mov r0, #0x0\n        strb r0, [r1]\n        mov r0, r4\n        add sp, #0x8\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte 0xfffffff",
      "score": "47",
      "id": 194
    },
    {
      "name": "sub_08064DE4",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"script.h\"\n#include \"functions.h\"\n\nextern void sub_08064DE4(Entity*);\nextern void sub_08064D78(Entity*);\nextern void sub_08064EE8(Entity*);\n\nextern void (*const gUnk_0810FBFC[])(Entity*);\n\n// end of existing headers\n\nvoid sub_08064DE4(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08064DE4\nsub_08064DE4:\n        push {r4, r5, lr}\n        mov r4, r0\n        ldrb r0, [r4, #0xc]\n        cmp r0, #0x1\n        beq _code0_2\n        cmp r0, #0x1\n        bgt _code0_0\n        cmp r0, #0x0\n        beq _code0_1\n        b _code0_5\n_code0_0:\n        cmp r0, #0x2\n        beq _code0_4\n        b _code0_5\n_code0_1:\n        mov r2, #0x1\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        ldrb r1, [r4, #0x18]\n        sub r0, #0x5\n        and r0, r1\n        orr r0, r2\n        strb r0, [r4, #0x18]\n        mov r0, #0x4\n        strb r0, [r4, #0x14]\n        mov r0, r4\n        bl sub_0807DD50\n        b _code0_5\n_code0_2:\n        mov r2, r4\n        add r2, #0x39\n        mov r1, #0x0\n        ldrsb r1, [r2, r1]\n        cmp r1, #0x2\n        bne _code0_3\n        mov r0, #0x0\n        strb r1, [r4, #0xc]\n        strb r0, [r2]\n        ldr r1, _data0_0\n        mov r0, r4\n        bl GetFacingDirection\n        bl sub_0806F5A4\n        mov r1, r0\n        mov r0, r4\n        bl InitAnimationForceUpdate\n        mov r0, r4\n        bl sub_0806F118\n        b _code0_5\n_data0_0:\n        .4byte gPlayerEntity\n_code0_3:\n        mov r0, r4\n        mov r1, #0x0\n        bl sub_0807DD94\n        b _code0_5\n_code0_4:\n        mov r0, r4\n        bl UpdateFuseInteraction\n        cmp r0, #0x0\n        beq _code0_5\n        mov r0, #0x1\n        strb r0, [r4, #0xc]\n        mov r0, r4\n        bl sub_0801E99C\n_code0_5:\n        mov r2, r4\n        add r2, #0x5a\n        ldrb r1, [r2]\n        mov r5, #0xf\n        and r5, r1\n        mov r0, r5\n        eor r0, r1\n        strb r0, [r2]\n        cmp r5, #0x0\n        beq _code0_7\n        mov r1, #0x29\n        cmp r5, #0x3\n        bne _code0_6\n        mov r1, #0x2a\n_code0_6:\n        mov r0, r4\n        mov r2, #0x0\n        bl CreateFx\n        mov r2, r0\n        cmp r2, #0x0\n        beq _code0_7\n        cmp r5, #0x2\n        bne _code0_7\n        ldrb r0, [r2, #0x18]\n        mov r1, #0x40\n        orr r0, r1\n        strb r0, [r2, #0x18]\n_code0_7:\n        pop {r4, r5, pc}",
      "score": "96",
      "id": 195
    },
    {
      "name": "sub_08064EE8",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"script.h\"\n#include \"functions.h\"\n\nextern void sub_08064DE4(Entity*);\nextern void sub_08064D78(Entity*);\nextern void sub_08064EE8(Entity*);\n\nextern void (*const gUnk_0810FBFC[])(Entity*);\n\n// end of existing headers\n\nvoid sub_08064EE8(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08064EE8\nsub_08064EE8:\n        push {r4, r5, lr}\n        mov r4, r0\n        bl UpdateAnimationSingleFrame\n        mov r2, r4\n        add r2, #0x5a\n        ldrb r1, [r2]\n        mov r5, #0xf\n        and r5, r1\n        mov r0, r5\n        eor r0, r1\n        strb r0, [r2]\n        cmp r5, #0x0\n        beq _code0_1\n        mov r1, #0x2a\n        cmp r5, #0x3\n        beq _code0_0\n        mov r1, #0x29\n_code0_0:\n        mov r0, r4\n        mov r2, #0x0\n        bl CreateFx\n        mov r2, r0\n        cmp r2, #0x0\n        beq _code0_1\n        cmp r5, #0x2\n        bne _code0_1\n        ldrb r0, [r2, #0x18]\n        mov r1, #0x40\n        orr r0, r1\n        strb r0, [r2, #0x18]\n_code0_1:\n        pop {r4, r5, pc}",
      "score": "34",
      "id": 196
    },
    {
      "name": "sub_08064F28",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"npc.h\"\n#include \"textbox.h\"\n#include \"script.h\"\n#include \"functions.h\"\n\nextern void sub_08064DE4(Entity*);\nextern void sub_08064D78(Entity*);\nextern void sub_08064EE8(Entity*);\n\nextern void (*const gUnk_0810FBFC[])(Entity*);\n\n// end of existing headers\n\n\n         void sub_08064F28(Entity* this, ScriptExecutionContext* context) {\n\n}",
      "asmCode": "thumb_func_start sub_08064F28\nsub_08064F28:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r8\n        push {r7}\n        mov r6, r0\n        mov r8, r1\n        mov r0, #0x0\n        str r0, [r1, #0x14]\n        ldr r1, _data0_0\n        ldrb r0, [r6, #0xa]\n        add r0, r1\n        ldrb r7, [r0]\n        mov r0, r7\n        bl CheckRoomFlag\n        cmp r0, #0x0\n        bne _code0_2\n        ldr r4, _data0_0+0x4\n        mov r0, r6\n        bl sub_08002632\n        ldr r1, _data0_0+0x8\n        add r4, r1\n        add r0, r4\n        ldrb r4, [r0]\n        cmp r4, #0x1\n        bls _code0_0\n        mov r5, #0x3\n        b _code0_1\n_data0_0:\n        .4byte gUnk_0810FC50\n        .4byte gSave\n        .4byte 0x141\n_code0_0:\n        mov r0, #0xc\n        bl GetInventoryValue\n        mov r5, #0x2\n        cmp r0, #0x0\n        bne _code0_1\n        neg r0, r4\n        orr r0, r4\n        lsr r5, r0, #0x1f\n_code0_1:\n        mov r4, #0x1\n        neg r4, r4\n        b _code0_7\n_code0_2:\n        mov r0, #0x3a\n        bl CheckGlobalFlag\n        cmp r0, #0x0\n        bne _code0_6\n        ldr r0, _data0_1\n        ldr r1, _data0_1+0x4\n        add r0, r1\n        ldrb r1, [r0]\n        mov r0, #0x64\n        sub r4, r0, r1\n        cmp r4, #0x0\n        bgt _code0_3\n        mov r5, #0x8\n        mov r4, #0x0\n        mov r0, #0x3a\n        bl SetGlobalFlag\n        mov r0, #0x1\n        mov r1, r8\n        str r0, [r1, #0x14]\n        b _code0_7\n_data0_1:\n        .4byte gSave\n        .4byte 0x117\n_code0_3:\n        mov r5, #0x7\n        cmp r4, #0x9\n        ble _code0_4\n        mov r5, #0x6\n_code0_4:\n        cmp r4, #0x27\n        ble _code0_5\n        mov r5, #0x5\n_code0_5:\n        cmp r4, #0x45\n        ble _code0_7\n        mov r5, #0x4\n        b _code0_7\n_code0_6:\n        mov r5, #0x8\n        mov r4, #0x0\n_code0_7:\n        ldr r2, _data0_2\n        ldrb r1, [r6, #0xa]\n        lsl r0, r1, #0x3\n        add r0, r1\n        add r0, r5\n        lsl r0, #0x1\n        add r0, r2\n        ldrh r0, [r0]\n        mov r1, r6\n        bl TextboxNoOverlap\n        cmp r4, #0x0\n        ble _code0_8\n        ldr r1, _data0_2+0x4\n        lsl r0, r4, #0x10\n        lsr r0, #0x10\n        str r0, [r1, #0x10]\n_code0_8:\n        mov r0, r7\n        bl CheckRoomFlag\n        cmp r0, #0x0\n        bne _code0_9\n        mov r0, r7\n        bl SetRoomFlag\n        b _code0_10\n_data0_2:\n        .4byte gUnk_0810FC08\n        .4byte gTextBox\n_code0_9:\n        mov r0, r7\n        bl ClearRoomFlag\n_code0_10:\n        pop {r3}\n        mov r8, r3\n        pop {r4, r5, r6, r7, pc}",
      "score": "121",
      "id": 197
    },
    {
      "name": "Townsperson_Head",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"npc.h\"\n#include \"player.h\"\n#include \"textbox.h\"\n#include \"flags.h\"\n#include \"save.h\"\n#include \"script.h\"\n#include \"random.h\"\n#include \"structures.h\"\n#include \"functions.h\"\n\ntypedef struct {\n    u8 frame1;\n    u8 frame2;\n    u8 unk2;\n    u8 unk3;\n} struct_0810B680;\n\nextern void (*const gUnk_0810B774[])(Entity*);\nextern void (*const gUnk_0810B77C[])(Entity*);\nextern void sub_08061CB4(Entity*, u32);\nextern void sub_08061D64(Entity*);\nextern void sub_08062048(Entity*);\nextern void sub_08078850(Entity*, u32, u8, u32*);\n\nextern SpriteLoadData* gUnk_0810B6EC[];\nextern u8 gUnk_0810B78C[];\nextern struct_0810B680 gUnk_0810B680[];\nextern u16 gUnk_0810B74A[];\nextern u8 gUnk_0810B748[];\nextern u32 gUnk_0810B740[];\nextern u16 gUnk_0810B790[];\nextern u16 gUnk_0810B7BA[];\nextern Dialog gUnk_0810B7C0[];\n\n// end of existing headers\n\nvoid Townsperson_Head(Entity* this) {\n    SetExtraSpriteFrame(this, 0, *(gUnk_0810B78C + (this->animIndex & 3)) + gUnk_0810B680[this->type].frame1);\n    SetExtraSpriteFrame(this, 1, this->frameIndex + gUnk_0810B680[this->type].frame2);\n    SetSpriteSubEntryOffsetData1(this, 1, 0);\n    sub_0807000C(this);\n}\n",
      "asmCode": "thumb_func_start Townsperson_Head\nTownsperson_Head:\n        push {r4, r5, lr}\n        mov r4, r0\n        add r0, #0x58\n        ldrb r1, [r0]\n        mov r0, #0x3\n        and r0, r1\n        ldr r1, _data0_0\n        add r0, r1\n        ldrb r1, [r0]\n        ldr r5, _data0_0+0x4\n        ldrb r0, [r4, #0xa]\n        lsl r0, #0x2\n        add r0, r5\n        ldrb r2, [r0]\n        add r2, r1, r2\n        mov r0, r4\n        mov r1, #0x0\n        bl SetExtraSpriteFrame\n        ldrb r2, [r4, #0x1e]\n        ldrb r0, [r4, #0xa]\n        lsl r0, #0x2\n        add r0, r5\n        ldrb r0, [r0, #0x1]\n        add r2, r0\n        mov r0, r4\n        mov r1, #0x1\n        bl SetExtraSpriteFrame\n        mov r0, r4\n        mov r1, #0x1\n        mov r2, #0x0\n        bl SetSpriteSubEntryOffsetData1\n        mov r0, r4\n        bl sub_0807000C\n        pop {r4, r5, pc}\n_data0_0:\n        .4byte gUnk_0810B78C\n        .4byte gUnk_0810B680",
      "score": "39",
      "id": 198
    },
    {
      "name": "sub_08068318",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"utils.h\"\n\nextern void sub_08068318(Entity*);\nextern void sub_0806854C(Entity*, u32*);\n\nvoid sub_08068578(Entity* this);\n\n// end of existing headers\n\nvoid sub_08068318(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08068318\nsub_08068318:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r9\n        mov r6, r8\n        push {r6, r7}\n        mov r8, r0\n        ldr r4, _data0_0\n        ldrh r1, [r4, #0x2e]\n        ldr r3, _data0_0+0x4\n        mov r0, r3\n        and r0, r6\n        orr r0, r1\n        ldrh r1, [r4, #0x32]\n        lsl r1, #0x10\n        ldr r2, _data0_0+0x8\n        and r0, r2\n        mov r6, r0\n        orr r6, r1\n        ldrh r0, [r4, #0x36]\n        and r3, r7\n        orr r3, r0\n        mov r7, r3\n        ldr r0, _data0_0+0xc\n        add r0, #0xa8\n        ldrb r0, [r0]\n        lsl r0, #0x10\n        ldr r2, _data0_0+0x10\n        and r2, r3\n        orr r2, r0\n        mov r7, r2\n        ldrb r1, [r4, #0x14]\n        mov r0, #0x3f\n        and r1, r0\n        lsl r1, #0x18\n        ldr r0, _data0_0+0x14\n        and r0, r2\n        orr r0, r1\n        mov r7, r0\n        mov r1, r4\n        add r1, #0x38\n        ldrb r1, [r1]\n        lsl r1, #0x1e\n        ldr r2, _data0_0+0x18\n        and r0, r2\n        mov r7, r0\n        orr r7, r1\n        mov r0, r8\n        ldr r5, [r0, #0x64]\n        ldrb r1, [r5, #0x6]\n        cmp r1, #0xa\n        bne _code0_0\n        lsr r0, r7, #0x10\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0xa\n        bne _code0_1\n_code0_0:\n        cmp r1, #0x16\n        bne _code0_2\n        lsr r0, r7, #0x10\n        lsl r0, #0x18\n        lsr r0, #0x18\n        cmp r0, #0x16\n        beq _code0_2\n_code0_1:\n        ldrh r0, [r4, #0x2e]\n        mov r1, r8\n        strh r0, [r1, #0x2e]\n        ldrh r0, [r4, #0x32]\n        strh r0, [r1, #0x32]\n        ldrb r1, [r1, #0x18]\n        mov r0, #0x4\n        neg r0, r0\n        and r0, r1\n        mov r1, #0x1\n        orr r0, r1\n        mov r2, r8\n        strb r0, [r2, #0x18]\n        mov r0, r8\n        bl sub_08068578\n_code0_2:\n        mov r3, #0x0\n        mov r9, r3\n        ldr r0, [r5]\n        cmp r6, r0\n        bne _code0_3\n        ldr r0, [r5, #0x4]\n        cmp r7, r0\n        bne _code0_3\n        lsl r1, r7, #0x8\n        lsr r0, r1, #0x18\n        cmp r0, #0x16\n        beq _code0_3\n        cmp r0, #0xa\n        bne _code0_5\n_code0_3:\n        mov r0, r8\n        ldr r5, [r0, #0x64]\n        add r5, #0x90\n        mov r4, r8\n        add r4, #0x69\n        mov r3, r8\n        add r3, #0x38\n        mov r1, #0x58\n        add r1, r8\n        mov r12, r1\n        mov r2, #0x12\n_code0_4:\n        ldr r0, [r5]\n        ldr r1, [r5, #0x4]\n        str r0, [r5, #0x8]\n        str r1, [r5, #0xc]\n        sub r5, #0x8\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_4\n        mov r2, r8\n        ldr r5, [r2, #0x64]\n        str r6, [r5]\n        str r7, [r5, #0x4]\n        mov r0, #0x4\n        mov r9, r0\n        ldrb r1, [r4]\n        mov r0, #0x0\n        ldrsb r0, [r4, r0]\n        cmp r0, #0x0\n        ble _code0_9\n        sub r0, r1, #0x1\n        strb r0, [r4]\n        b _code0_9\n_data0_0:\n        .4byte gPlayerEntity\n        .4byte 0xffff0000\n        .4byte 0xffff\n        .4byte gPlayerState\n        .4byte 0xff00ffff\n        .4byte 0xc0ffffff\n        .4byte 0x3fffffff\n_code0_5:\n        add r5, #0x98\n        mov r1, #0x4\n        ldrsh r0, [r5, r1]\n        cmp r0, #0x0\n        bge _code0_7\n        mov r2, r8\n        ldr r5, [r2, #0x64]\n        add r5, #0x90\n        mov r4, r8\n        add r4, #0x69\n        mov r3, r8\n        add r3, #0x38\n        mov r0, #0x58\n        add r0, r8\n        mov r12, r0\n        mov r2, #0x12\n_code0_6:\n        ldr r0, [r5]\n        ldr r1, [r5, #0x4]\n        str r0, [r5, #0x8]\n        str r1, [r5, #0xc]\n        sub r5, #0x8\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_6\n        mov r1, #0x4\n        mov r9, r1\n        b _code0_9\n_code0_7:\n        ldr r1, _data0_1\n        mov r2, #0x2e\n        ldrsh r0, [r1, r2]\n        mov r3, #0x32\n        ldrsh r1, [r1, r3]\n        ldrh r2, [r5]\n        ldrh r3, [r5, #0x2]\n        bl sub_080041E8\n        lsr r0, #0x4\n        mov r4, r8\n        add r4, #0x69\n        mov r3, r8\n        add r3, #0x38\n        mov r1, #0x58\n        add r1, r8\n        mov r12, r1\n        cmp r0, #0x18\n        ble _code0_9\n        mov r2, r8\n        ldr r5, [r2, #0x64]\n        add r5, #0x90\n        mov r2, #0x12\n_code0_8:\n        ldr r0, [r5]\n        ldr r1, [r5, #0x4]\n        str r0, [r5, #0x8]\n        str r1, [r5, #0xc]\n        sub r5, #0x8\n        sub r2, #0x1\n        cmp r2, #0x0\n        bge _code0_8\n        mov r0, #0x4\n        mov r9, r0\n_code0_9:\n        mov r1, r8\n        ldr r5, [r1, #0x64]\n        add r5, #0x98\n        ldrh r0, [r5]\n        strh r0, [r1, #0x2e]\n        ldrh r0, [r5, #0x2]\n        strh r0, [r1, #0x32]\n        ldrh r0, [r5, #0x4]\n        strh r0, [r1, #0x36]\n        ldrb r0, [r5, #0x7]\n        lsl r0, #0x1a\n        lsr r0, #0x1a\n        strb r0, [r1, #0x14]\n        ldrb r0, [r5, #0x7]\n        lsr r0, #0x6\n        strb r0, [r3]\n        ldrb r0, [r5, #0x6]\n        cmp r0, #0x16\n        beq _code0_10\n        cmp r0, #0xa\n        bne _code0_11\n_code0_10:\n        mov r2, r8\n        ldrb r1, [r2, #0x18]\n        mov r0, #0x4\n        neg r0, r0\n        and r0, r1\n        strb r0, [r2, #0x18]\n_code0_11:\n        mov r1, r4\n        ldrb r2, [r1]\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        ble _code0_12\n        sub r0, r2, #0x1\n        strb r0, [r1]\n_code0_12:\n        mov r2, r9\n        mov r3, r8\n        ldrb r0, [r3, #0x14]\n        lsr r0, #0x1\n        add r9, r0\n        mov r0, r12\n        ldrb r0, [r0]\n        cmp r9, r0\n        beq _code0_14\n        cmp r2, #0x0\n        bne _code0_13\n        mov r0, #0x0\n        ldrsb r0, [r1, r0]\n        cmp r0, #0x0\n        bgt _code0_14\n_code0_13:\n        mov r0, r8\n        mov r1, r9\n        bl InitAnimationForceUpdate\n        mov r0, #0x1e\n        strb r0, [r4]\n        b _code0_15\n_data0_1:\n        .4byte gPlayerEntity\n_code0_14:\n        mov r0, r8\n        bl UpdateAnimationSingleFrame\n_code0_15:\n        mov r0, r8\n        bl sub_0800451C\n        mov r1, r8\n        mov r2, #0x36\n        ldrsh r0, [r1, r2]\n        cmp r0, #0x0\n        bge _code0_16\n        mov r2, #0xc\n        neg r2, r2\n        mov r0, r8\n        mov r1, #0x0\n        bl sub_0806F854\n_code0_16:\n        pop {r3, r4}\n        mov r8, r3\n        mov r9, r4\n        pop {r4, r5, r6, r7, pc}",
      "score": "286",
      "id": 200
    },
    {
      "name": "sub_08068578",
      "projectId": "1",
      "cCode": "#include \"global.h\"\n#include \"entity.h\"\n#include \"functions.h\"\n#include \"script.h\"\n#include \"utils.h\"\n\nextern void sub_08068318(Entity*);\nextern void sub_0806854C(Entity*, u32*);\n\nvoid sub_08068578(Entity* this);\n\n// end of existing headers\n\nvoid sub_08068578(Entity* this) {\n\n}",
      "asmCode": "thumb_func_start sub_08068578\nsub_08068578:\n        push {r4, r5, r6, r7, lr}\n        mov r7, r10\n        mov r6, r9\n        mov r5, r8\n        push {r5, r6, r7}\n        mov r7, r0\n        ldr r4, _data0_0\n        ldrh r1, [r4, #0x2e]\n        ldr r3, _data0_0+0x4\n        mov r0, r3\n        and r0, r5\n        orr r0, r1\n        ldrh r1, [r4, #0x32]\n        lsl r1, #0x10\n        ldr r2, _data0_0+0x8\n        and r0, r2\n        mov r5, r0\n        orr r5, r1\n        ldrh r0, [r4, #0x36]\n        and r3, r6\n        orr r3, r0\n        ldr r0, _data0_0+0xc\n        add r0, #0xa8\n        ldrb r0, [r0]\n        lsl r0, #0x10\n        ldr r2, _data0_0+0x10\n        and r2, r3\n        orr r2, r0\n        ldrb r1, [r4, #0x14]\n        mov r0, #0x3f\n        and r1, r0\n        lsl r1, #0x18\n        ldr r0, _data0_0+0x14\n        and r0, r2\n        orr r0, r1\n        mov r1, r4\n        add r1, #0x38\n        ldrb r1, [r1]\n        lsl r1, #0x1e\n        ldr r2, _data0_0+0x18\n        and r0, r2\n        mov r6, r0\n        orr r6, r1\n        mov r0, #0x2e\n        ldrsh r1, [r4, r0]\n        mov r2, #0x2e\n        ldrsh r0, [r7, r2]\n        sub r1, r0\n        mov r10, r1\n        mov r0, #0x32\n        ldrsh r1, [r4, r0]\n        mov r2, #0x32\n        ldrsh r0, [r7, r2]\n        sub r1, r0\n        mov r8, r1\n        mov r1, r10\n        lsl r0, r1, #0x10\n        asr r0, #0x10\n        mov r1, #0x14\n        bl FixedDiv\n        lsl r0, #0x10\n        asr r0, #0x10\n        mov r10, r0\n        mov r2, r8\n        lsl r0, r2, #0x10\n        asr r0, #0x10\n        mov r1, #0x14\n        bl FixedDiv\n        lsl r0, #0x10\n        asr r0, #0x10\n        mov r8, r0\n        ldr r3, [r7, #0x64]\n        mov r0, #0x0\n        mov r9, r0\n        mov r12, r0\n        mov r4, #0x13\n_code0_0:\n        mov r1, r12\n        asr r0, r1, #0x8\n        sub r0, r5, r0\n        strh r0, [r3]\n        lsr r0, r5, #0x10\n        mov r2, r9\n        asr r1, r2, #0x8\n        sub r0, r1\n        strh r0, [r3, #0x2]\n        strh r6, [r3, #0x4]\n        lsr r0, r6, #0x10\n        strb r0, [r3, #0x6]\n        ldrb r0, [r7, #0x14]\n        mov r1, #0x3f\n        and r1, r0\n        ldrb r2, [r3, #0x7]\n        mov r0, #0x40\n        neg r0, r0\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x7]\n        mov r1, r7\n        add r1, #0x38\n        ldrb r1, [r1]\n        lsl r1, #0x6\n        mov r2, #0x3f\n        and r0, r2\n        orr r0, r1\n        strb r0, [r3, #0x7]\n        add r3, #0x8\n        add r9, r8\n        add r12, r10\n        sub r4, #0x1\n        cmp r4, #0x0\n        bge _code0_0\n        pop {r3, r4, r5}\n        mov r8, r3\n        mov r9, r4\n        mov r10, r5\n        pop {r4, r5, r6, r7, pc}\n_data0_0:\n        .4byte gPlayerEntity\n        .4byte 0xffff0000\n        .4byte 0xffff\n        .4byte gPlayerState\n        .4byte 0xff00ffff\n        .4byte 0xc0ffffff\n        .4byte 0x3fffffff",
      "score": "127",
      "id": 201
    }
  ]
}