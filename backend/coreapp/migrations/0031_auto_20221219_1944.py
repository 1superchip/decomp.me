# Generated by Django 4.1.4 on 2022-12-19 10:44

import django.db.migrations.operations.special
from django.apps.registry import Apps
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

from django.db import migrations

from coreapp.models.scratch import CompilerConfig


def populate_compiler_config(
    apps: Apps, schema_editor: BaseDatabaseSchemaEditor
) -> None:
    """
    Populate the compiler_config for all existing scratches
    """
    Scratch = apps.get_model("coreapp", "Scratch")
    for row in Scratch.objects.all():
        cc = CompilerConfig(
            compiler=row.compiler,
            platform=row.platform,
            assembler_flags=row.assembler_flags,
            compiler_flags=row.compiler_flags,
            diff_flags=row.diff_flags,
        )
        cc.save()
        row.compiler_config = cc
        row.save(update_fields=["compiler_config"])


class Migration(migrations.Migration):
    dependencies = [
        ("coreapp", "0030_remove_scratch_compiler_and_more"),
    ]

    operations = [
        migrations.RunPython(
            code=populate_compiler_config,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
    ]
